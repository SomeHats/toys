import{b as w,a as v,s as u}from"./assert.99a33aa8.js";import{D as x}from"./DebugDraw.2d458dd9.js";import{c as y}from"./createTriangleGrid.f2a07993.js";import"./Vector2.550325b5.js";const o=document.createElement("canvas"),f=w(o.getContext("2d")),l=document.body.clientWidth,h=document.body.clientHeight,r=window.devicePixelRatio;o.width=l*r;o.height=h*r;o.style.width=`${l}px`;o.style.height=`${h}px`;f.scale(r,r);const n=new x(f);document.body.appendChild(o);const i=5,p=y(i,l,h),g=new Set,E=()=>{const e=[];let t=u([...p.values()].filter(s=>!g.has(s)));const a=40;let c=[...p.values()];for(let s=0;s<a;s++){e.push(t),g.add(t),c=t.neighbours.map(d=>d.triangle);const m=c.filter(d=>!g.has(d));if(!m.length)break;t=u(m)}return{triangles:e}},b=[],k=l/i*(h/i)*.01;console.log({snakeCount:k});for(let e=0;e<k;e++)b.push(E());n.clear("black");for(const{triangles:e}of b){n.beginPath();for(let t=0;t<e.length;t++){const a=e[t],c=e[t-1],s=e[t+1];c?s?n.arcTo(a.center,s.center,i/2-.5):(v(c),n.lineTo(a.center)):n.moveTo(a.center)}n.stroke({strokeWidth:i/3-.5,stroke:"white",strokeCap:"round"})}
