var D=(s,e)=>()=>(e||s((e={exports:{}}).exports,e),e.exports);import{a as H,d as o,e as h,b as V,f as O}from"./chunk_utils.FedKR4y8.js";/* empty css                       */import{C as X}from"./chunk_Circle.ie3wl9vP.js";import{V as u}from"./chunk_Vector2.1Qo3QJ05.js";import{D as $}from"./chunk_DebugDraw.RsjYxlxT.js";import"./chunk_AABB.4SqvORKr.js";import"./chunk_Line2.qI3MAw2c.js";var j=D((se,v)=>{class Y{constructor(e){this.prefix=e,this.number=0}next(){return`${this.prefix}${this.number++}`}}const l=class l{constructor(e,t,i){this.id=e,this.position=t,this.radius=i}static create(e,t){return new l(l.ids.next(),e,t)}toCircle(){return new X(this.position,this.radius)}};l.ids=new Y("BlobTreeNode");let g=l;class G{constructor(){this.nodesById=new Map,this.childrenById=new Map,this.parentById=new Map}getNodeByIdIfExists(e){return this.nodesById.get(e)}getNodeById(e){const t=this.getNodeByIdIfExists(e);return H(t,"Assertion Error: node"),t}getNodeParentIfExists(e){const t=this.parentById.get(e.id);if(t)return this.getNodeById(t)}getMutableChildIds(e){let t=this.childrenById.get(e.id);return t||(t=[],this.childrenById.set(e.id,t)),t}createNewRoot(e,t){const i=g.create(e,t);return this.nodesById.set(i.id,i),i}createNewChild(e,t,i){const n=g.create(t,i);return this.nodesById.set(n.id,n),this.parentById.set(n.id,e.id),this.getMutableChildIds(e).push(n.id),n}*iterateNodes(){for(const e of this.nodesById.values())yield e}*iterateChildNodes(e){for(const t of this.childrenById.get(e.id)??[])yield this.getNodeById(t)}*iterateRootNodes(){for(const e of this.nodesById.values())this.getNodeParentIfExists(e)||(yield e)}}const W={assert:o,clear:o,count:o,countReset:o,debug:o,dir:o,dirxml:o,error:o,group:o,groupCollapsed:o,groupEnd:o,info:o,log:o,table:o,time:o,timeEnd:o,timeLog:o,timeStamp:o,trace:o,warn:o,profile:o,profileEnd:o,Console:console.Console},x=.2;function M(s,e,t=W){for(const i of s.iterateRootNodes())K(s,i,e,t)}function K(s,e,t,i=W){const n=e,r=Array.from(s.iterateChildNodes(e))[0],w=r?Array.from(s.iterateChildNodes(r))[0]:void 0;if(!n||!r||!w)return;const z=n.toCircle(),f=r.toCircle(),S=w.toCircle(),b=z.outerTangentsWith(f),E=f.outerTangentsWith(S);if(!b||!E)return;const d=b[0],N=E[0];t.debugLine2(d,{color:"lime"}),t.debugLine2(N,{color:"lime"});const m=d.pointAtIntersectionWith(N),C=f.center.angleTo(m),B=d.isPointWithinBounds(m)&&N.isPointWithinBounds(m)?m:f.pointOnCircumference(C);t.debugPointX(B);const p=d.start,I=B,P=d.start.lerp(d.end,x).sub(p),T=u.fromPolar(C+Math.PI/2,d.length*x);t.debugVectorAtPoint(P,p),t.debugVectorAtPoint(T,I),t.debugBezierCurve(p,p.add(P),I.sub(T),I)}const k=6;class U{constructor(e,t){this.canvas=e,this.blobTree=t,this.mousePosition=u.ZERO,this.state={type:"idle"}}getSelectedNode(){switch(this.state.type){case"idle":return null;case"createNode":case"selectedIdle":case"moveNode":case"resizeNode":return this.state.node;default:h(this.state)}}getHover(){let e=null,t=1/0;for(const n of this.blobTree.iterateNodes()){const r=n.position.distanceTo(this.mousePosition);r>n.radius+k||r<t&&(t=r,e=n)}if(!e)return null;const i=Math.min(e.radius*.1,k);return{node:e,mode:t<e.radius-i?"center":"edge"}}onMouseMove(e){this.mousePosition=e}onMouseDown(e){switch(this.state.type){case"idle":case"selectedIdle":{const t=this.getHover();if(t)switch(t.mode){case"center":this.state={type:"moveNode",node:t.node,offset:t.node.position.sub(this.mousePosition)};return;case"edge":this.state={type:"resizeNode",node:t.node,offset:t.node.radius-t.node.position.distanceTo(this.mousePosition)};return;default:h(t.mode)}this.state={type:"createNode",node:this.state.type==="idle"?this.blobTree.createNewRoot(e,1):this.blobTree.createNewChild(this.state.node,e,1)};return}case"createNode":case"moveNode":case"resizeNode":return;default:h(this.state)}}onMouseUp(e){switch(this.state.type){case"idle":case"selectedIdle":return;case"createNode":case"moveNode":case"resizeNode":this.state={type:"selectedIdle",node:this.state.node};return;default:h(this.state)}}onKeyDown(e){console.log(e),e===" "&&M(this.blobTree,this.canvas,console)}tick(){switch(this.state.type){case"idle":return;case"createNode":this.state.node.radius=this.state.node.position.distanceTo(this.mousePosition);return;case"moveNode":this.state.node.position=this.mousePosition.add(this.state.offset);return;case"resizeNode":this.state.node.radius=this.mousePosition.distanceTo(this.state.node.position)+this.state.offset;return;case"selectedIdle":return;default:h(this.state)}}draw(){this.canvas.clear();const e=this.getHover();this.canvas.beginPath(),M(this.blobTree,this.canvas);for(const t of this.blobTree.iterateNodes()){const i=t===this.getSelectedNode()?{stroke:"lime",strokeWidth:2}:t===(e==null?void 0:e.node)?{stroke:"lime",strokeWidth:1}:{stroke:"magenta",strokeWidth:1};this.canvas.circle(t.position,t.radius,i);for(const n of this.blobTree.iterateChildNodes(t))this.canvas.polyLine([t.position,n.position],{stroke:"cyan",strokeWidth:1})}}}const a=document.createElement("canvas"),A=V(a.getContext("2d"),'Assertion Error: canvasEl.getContext("2d")'),L=document.body.clientWidth,R=document.body.clientHeight,y=window.devicePixelRatio;a.width=L*y;a.height=R*y;a.style.width=`${L}px`;a.style.height=`${R}px`;A.scale(y,y);const Z=new $(A);document.body.appendChild(a);const c=new U(Z,new G);document.addEventListener("mousemove",s=>{c.onMouseMove(new u(s.clientX,s.clientY))});document.addEventListener("mousedown",s=>{c.onMouseDown(new u(s.clientX,s.clientY))});document.addEventListener("mouseup",s=>{c.onMouseUp(new u(s.clientX,s.clientY))});document.addEventListener("keydown",s=>{c.onKeyDown(s.key)});O(()=>{c.tick(),c.draw()});v.hot&&v.hot.dispose(()=>window.location.reload())});export default j();
