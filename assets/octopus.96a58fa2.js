import{t as q,A as ge,m as X,B as et,C as Ot,D as tt,l as Dt,a as Q,h as Bt,E as nt,F as xt,G as Lt,H as Pt,i as kt,x as V,z as Ht,u as Gt,s as ze}from"./assert.3c3fa83e.js";/* empty css                 */import{r as b,E as ye,a as Ut}from"./EventEmitter.1121f552.js";import{D as Vt}from"./DebugDraw.b13108a3.js";import{V as ve}from"./Vector2.d2fd2a0e.js";var rt={exports:{}};/*!
  Copyright (c) 2018 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/(function(r){(function(){var e={}.hasOwnProperty;function t(){for(var n=[],s=0;s<arguments.length;s++){var i=arguments[s];if(!!i){var o=typeof i;if(o==="string"||o==="number")n.push(i);else if(Array.isArray(i)){if(i.length){var d=t.apply(null,i);d&&n.push(d)}}else if(o==="object")if(i.toString===Object.prototype.toString)for(var h in i)e.call(i,h)&&i[h]&&n.push(h);else n.push(i.toString())}}return n.join(" ")}r.exports?(t.default=t,r.exports=t):window.classNames=t})()})(rt);const Se=rt.exports;var le={exports:{}},ce={};/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Ft=b.exports,zt=Symbol.for("react.element"),Yt=Symbol.for("react.fragment"),jt=Object.prototype.hasOwnProperty,Wt=Ft.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,Kt={key:!0,ref:!0,__self:!0,__source:!0};function st(r,e,t){var n,s={},i=null,o=null;t!==void 0&&(i=""+t),e.key!==void 0&&(i=""+e.key),e.ref!==void 0&&(o=e.ref);for(n in e)jt.call(e,n)&&!Kt.hasOwnProperty(n)&&(s[n]=e[n]);if(r&&r.defaultProps)for(n in e=r.defaultProps,e)s[n]===void 0&&(s[n]=e[n]);return{$$typeof:zt,type:r,key:i,ref:o,props:s,_owner:Wt.current}}ce.Fragment=Yt;ce.jsx=st;ce.jsxs=st;(function(r){r.exports=ce})(le);const Ie=le.exports.Fragment,w=le.exports.jsx,B=le.exports.jsxs,$t=45,Ye=1.5,re=8;function qt(r){const e=r%12;return e===1||e===3||e===6||e===8||e===10}const Xt=b.exports.memo(function({offset:e,isAccidental:t,styles:n,isNoteDown:s,note:i,setRefForKey:o}){const d=t?{left:e-n.accidentalWidth/2,width:n.accidentalWidth,height:n.accidentalHeight,position:"absolute",zIndex:1,borderWidth:n.scale*Ye}:{left:e,width:n.standardWidth,height:n.standardHeight,position:"absolute",borderWidth:n.scale*Ye};return w("div",{ref:h=>o(h,i),style:d,className:Se("border-gray-600",{"bg-black hover:bg-blue-900":t,"bg-white hover:bg-blue-200":!t,"bg-purple-800":t&&s,"bg-purple-300":!t&&s})})});function Qt({lowestNote:r,highestNote:e,scale:t,top:n,left:s,notesDown:i,setRefForKey:o}){const d=b.exports.useMemo(()=>{const v=(e-r)*.5833333333333334,m=$t*t,f=v*m,E=m*.6;return{standardWidth:m,accidentalWidth:E,standardHeight:m*6,accidentalHeight:E*6,scale:t,totalWidth:f}},[r,e,t]),h=d.totalWidth+2*re*t,u=d.standardHeight+2*re*t;let p=0;return w("div",{className:"absolute border-gray-600 bg-gray-600",style:{width:h,height:u,borderWidth:re*t,borderRadius:re*t,top:n-u/2,left:s-h/2},children:q(e-r,v=>{const m=r+v,f=qt(m),E=w(Xt,{note:m,offset:p,isAccidental:f,styles:d,isNoteDown:i.includes(m),setRefForKey:o},m);return p+=f?0:d.standardWidth,E})})}const Jt=b.exports.memo(Qt);class D{constructor(e=!1){this.eventMap={},this.eventsSuspended=e==1}addListener(e,t,n={}){if(typeof e=="string"&&e.length<1||e instanceof String&&e.length<1||typeof e!="string"&&!(e instanceof String)&&e!==D.ANY_EVENT)throw new TypeError("The 'event' parameter must be a string or EventEmitter.ANY_EVENT.");if(typeof t!="function")throw new TypeError("The callback must be a function.");const s=new je(e,this,t,n);return this.eventMap[e]||(this.eventMap[e]=[]),n.prepend?this.eventMap[e].unshift(s):this.eventMap[e].push(s),s}addOneTimeListener(e,t,n={}){n.remaining=1,this.addListener(e,t,n)}static get ANY_EVENT(){return Symbol.for("Any event")}hasListener(e,t){return e===void 0?!!(this.eventMap[D.ANY_EVENT]&&this.eventMap[D.ANY_EVENT].length>0)||Object.entries(this.eventMap).some(([,n])=>n.length>0):this.eventMap[e]&&this.eventMap[e].length>0?t instanceof je?this.eventMap[e].filter(n=>n===t).length>0:typeof t=="function"?this.eventMap[e].filter(n=>n.callback===t).length>0:t==null:!1}get eventNames(){return Object.keys(this.eventMap)}getListeners(e){return this.eventMap[e]||[]}suspendEvent(e){this.getListeners(e).forEach(t=>{t.suspended=!0})}unsuspendEvent(e){this.getListeners(e).forEach(t=>{t.suspended=!1})}getListenerCount(e){return this.getListeners(e).length}emit(e,...t){if(typeof e!="string"&&!(e instanceof String))throw new TypeError("The 'event' parameter must be a string.");if(this.eventsSuspended)return;let n=[],s=this.eventMap[D.ANY_EVENT]||[];return this.eventMap[e]&&(s=s.concat(this.eventMap[e])),s.forEach(i=>{if(i.suspended)return;let o=[...t];Array.isArray(i.arguments)&&(o=o.concat(i.arguments)),i.remaining>0&&(n.push(i.callback.apply(i.context,o)),i.count++),--i.remaining<1&&i.remove()}),n}removeListener(e,t,n={}){if(e===void 0)return void(this.eventMap={});if(!this.eventMap[e])return;let s=this.eventMap[e].filter(i=>t&&i.callback!==t||n.remaining&&n.remaining!==i.remaining||n.context&&n.context!==i.context);s.length?this.eventMap[e]=s:delete this.eventMap[e]}async waitFor(e,t={}){return t.duration=parseInt(t.duration),(isNaN(t.duration)||t.duration<=0)&&(t.duration=1/0),new Promise((n,s)=>{let i,o=this.addListener(e,()=>{clearTimeout(i),n()},{remaining:1});t.duration!==1/0&&(i=setTimeout(()=>{o.remove(),s("The duration expired before the event was emitted.")},t.duration))})}get eventCount(){return Object.keys(this.eventMap).length}}class je{constructor(e,t,n,s={}){if(typeof e!="string"&&!(e instanceof String)&&e!==D.ANY_EVENT)throw new TypeError("The 'event' parameter must be a string or EventEmitter.ANY_EVENT.");if(!t)throw new ReferenceError("The 'target' parameter is mandatory.");if(typeof n!="function")throw new TypeError("The 'callback' must be a function.");s.arguments===void 0||Array.isArray(s.arguments)||(s.arguments=[s.arguments]),(s=Object.assign({context:t,remaining:1/0,arguments:void 0,duration:1/0},s)).duration!==1/0&&setTimeout(()=>this.remove(),s.duration),this.arguments=s.arguments,this.callback=n,this.context=s.context,this.count=0,this.event=e,this.remaining=parseInt(s.remaining)>=1?parseInt(s.remaining):1/0,this.suspended=!1,this.target=t}remove(){this.target.removeListener(this.event,this.callback,{context:this.context,remaining:this.remaining})}}/**
 * The `Enumerations` class contains enumerations and arrays of elements used throughout the
 * library. All properties are static and should be referenced using the class name. For example:
 * `Enumerations.MIDI_CHANNEL_MESSAGES`.
 *
 * @license Apache-2.0
 * @since 3.0.0
 */class a{static get MIDI_CHANNEL_MESSAGES(){return{noteoff:8,noteon:9,keyaftertouch:10,controlchange:11,programchange:12,channelaftertouch:13,pitchbend:14}}static get MIDI_CHANNEL_NUMBERS(){return[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]}static get MIDI_CHANNEL_MODE_MESSAGES(){return{allsoundoff:120,resetallcontrollers:121,localcontrol:122,allnotesoff:123,omnimodeoff:124,omnimodeon:125,monomodeon:126,polymodeon:127}}static get MIDI_CONTROL_CHANGE_MESSAGES(){return{bankselectcoarse:0,modulationwheelcoarse:1,breathcontrollercoarse:2,controller3:3,footcontrollercoarse:4,portamentotimecoarse:5,dataentrycoarse:6,volumecoarse:7,balancecoarse:8,controller9:9,pancoarse:10,expressioncoarse:11,effectcontrol1coarse:12,effectcontrol2coarse:13,controller14:14,controller15:15,generalpurposeslider1:16,generalpurposeslider2:17,generalpurposeslider3:18,generalpurposeslider4:19,controller20:20,controller21:21,controller22:22,controller23:23,controller24:24,controller25:25,controller26:26,controller27:27,controller28:28,controller29:29,controller30:30,controller31:31,bankselectfine:32,modulationwheelfine:33,breathcontrollerfine:34,controller35:35,footcontrollerfine:36,portamentotimefine:37,dataentryfine:38,volumefine:39,balancefine:40,controller41:41,panfine:42,expressionfine:43,effectcontrol1fine:44,effectcontrol2fine:45,controller46:46,controller47:47,controller48:48,controller49:49,controller50:50,controller51:51,controller52:52,controller53:53,controller54:54,controller55:55,controller56:56,controller57:57,controller58:58,controller59:59,controller60:60,controller61:61,controller62:62,controller63:63,holdpedal:64,portamento:65,sustenutopedal:66,softpedal:67,legatopedal:68,hold2pedal:69,soundvariation:70,resonance:71,soundreleasetime:72,soundattacktime:73,brightness:74,soundcontrol6:75,soundcontrol7:76,soundcontrol8:77,soundcontrol9:78,soundcontrol10:79,generalpurposebutton1:80,generalpurposebutton2:81,generalpurposebutton3:82,generalpurposebutton4:83,controller84:84,controller85:85,controller86:86,controller87:87,controller88:88,controller89:89,controller90:90,reverblevel:91,tremololevel:92,choruslevel:93,celestelevel:94,phaserlevel:95,databuttonincrement:96,databuttondecrement:97,nonregisteredparametercoarse:98,nonregisteredparameterfine:99,registeredparametercoarse:100,registeredparameterfine:101,controller102:102,controller103:103,controller104:104,controller105:105,controller106:106,controller107:107,controller108:108,controller109:109,controller110:110,controller111:111,controller112:112,controller113:113,controller114:114,controller115:115,controller116:116,controller117:117,controller118:118,controller119:119,allsoundoff:120,resetallcontrollers:121,localcontrol:122,allnotesoff:123,omnimodeoff:124,omnimodeon:125,monomodeon:126,polymodeon:127}}static get MIDI_REGISTERED_PARAMETERS(){return{pitchbendrange:[0,0],channelfinetuning:[0,1],channelcoarsetuning:[0,2],tuningprogram:[0,3],tuningbank:[0,4],modulationrange:[0,5],azimuthangle:[61,0],elevationangle:[61,1],gain:[61,2],distanceratio:[61,3],maximumdistance:[61,4],maximumdistancegain:[61,5],referencedistanceratio:[61,6],panspreadangle:[61,7],rollangle:[61,8]}}static get MIDI_SYSTEM_MESSAGES(){return{sysex:240,timecode:241,songposition:242,songselect:243,tunerequest:246,tuningrequest:246,sysexend:247,clock:248,start:250,continue:251,stop:252,activesensing:254,reset:255,midimessage:0,unknownsystemmessage:-1}}static get CHANNEL_EVENTS(){return["noteoff","controlchange","noteon","keyaftertouch","programchange","channelaftertouch","pitchbend","allnotesoff","allsoundoff","localcontrol","monomode","omnimode","resetallcontrollers","nrpn","nrpn-dataentrycoarse","nrpn-dataentryfine","nrpn-databuttonincrement","nrpn-databuttondecrement","rpn","rpn-dataentrycoarse","rpn-dataentryfine","rpn-databuttonincrement","rpn-databuttondecrement"]}}/**
 * The `Note` class represents a single musical note such as `"D3"`, `"G#4"`, `"F-1"`, `"Gb7"`, etc.
 *
 * `Note` objects can be played back on a single channel by calling
 * [`OutputChannel.playNote()`]{@link OutputChannel#playNote} or, on multiple channels of the same
 * output, by calling [`Output.playNote()`]{@link Output#playNote}.
 *
 * The note has [`attack`](#attack) and [`release`](#release) velocities set at `0.5` by default.
 * These can be changed by passing in the appropriate option. It is also possible to set a
 * system-wide default for attack and release velocities by using the
 * [`WebMidi.defaults`](WebMidi#defaults) property.
 *
 * If you prefer to work with raw MIDI values (`0` to `127`), you can use [`rawAttack`](#rawAttack) and
 * [`rawRelease`](#rawRelease) to both get and set the values.
 *
 * The note may have a [`duration`](#duration). If it does, playback will be automatically stopped
 * when the duration has elapsed by sending a `"noteoff"` event. By default, the duration is set to
 * `Infinity`. In this case, it will never stop playing unless explicitly stopped by calling a
 * method such as [`OutputChannel.stopNote()`]{@link OutputChannel#stopNote},
 * [`Output.stopNote()`]{@link Output#stopNote} or similar.
 *
 * @license Apache-2.0
 * @since 3.0.0
 */class z{constructor(e,t={}){this.duration=c.defaults.note.duration,this.attack=c.defaults.note.attack,this.release=c.defaults.note.release,t.duration!=null&&(this.duration=t.duration),t.attack!=null&&(this.attack=t.attack),t.rawAttack!=null&&(this.attack=l.from7bitToFloat(t.rawAttack)),t.release!=null&&(this.release=t.release),t.rawRelease!=null&&(this.release=l.from7bitToFloat(t.rawRelease)),Number.isInteger(e)?this.identifier=l.toNoteIdentifier(e):this.identifier=e}get identifier(){return this._name+(this._accidental||"")+this._octave}set identifier(e){const t=l.getNoteDetails(e);if(c.validation&&!e)throw new Error("Invalid note identifier");this._name=t.name,this._accidental=t.accidental,this._octave=t.octave}get name(){return this._name}set name(e){if(c.validation&&(e=e.toUpperCase(),!["C","D","E","F","G","A","B"].includes(e)))throw new Error("Invalid name value");this._name=e}get accidental(){return this._accidental}set accidental(e){if(c.validation&&(e=e.toLowerCase(),!["#","##","b","bb"].includes(e)))throw new Error("Invalid accidental value");this._accidental=e}get octave(){return this._octave}set octave(e){if(c.validation&&(e=parseInt(e),isNaN(e)))throw new Error("Invalid octave value");this._octave=e}get duration(){return this._duration}set duration(e){if(c.validation&&(e=parseFloat(e),isNaN(e)||e===null||e<0))throw new RangeError("Invalid duration value.");this._duration=e}get attack(){return this._attack}set attack(e){if(c.validation&&(e=parseFloat(e),isNaN(e)||!(e>=0&&e<=1)))throw new RangeError("Invalid attack value.");this._attack=e}get release(){return this._release}set release(e){if(c.validation&&(e=parseFloat(e),isNaN(e)||!(e>=0&&e<=1)))throw new RangeError("Invalid release value.");this._release=e}get rawAttack(){return l.fromFloatTo7Bit(this._attack)}set rawAttack(e){this._attack=l.from7bitToFloat(e)}get rawRelease(){return l.fromFloatTo7Bit(this._release)}set rawRelease(e){this._release=l.from7bitToFloat(e)}get number(){return l.toNoteNumber(this.identifier)}getOffsetNumber(e=0,t=0){return c.validation&&(e=parseInt(e)||0,t=parseInt(t)||0),Math.min(Math.max(this.number+12*e+t,0),127)}}/**
 * The `Utilities` class contains general-purpose utility methods. All methods are static and
 * should be called using the class name. For example: `Utilities.getNoteDetails("C4")`.
 *
 * @license Apache-2.0
 * @since 3.0.0
 */class l{static toNoteNumber(e,t=0){if(t=t==null?0:parseInt(t),isNaN(t))throw new RangeError("Invalid 'octaveOffset' value");typeof e!="string"&&(e="");const n=this.getNoteDetails(e);if(!n)throw new TypeError("Invalid note identifier");let s=12*(n.octave+1+t);if(s+={C:0,D:2,E:4,F:5,G:7,A:9,B:11}[n.name],n.accidental&&(n.accidental.startsWith("b")?s-=n.accidental.length:s+=n.accidental.length),s<0||s>127)throw new RangeError("Invalid octaveOffset value");return s}static getNoteDetails(e){Number.isInteger(e)&&(e=this.toNoteIdentifier(e));const t=e.match(/^([CDEFGAB])(#{0,2}|b{0,2})(-?\d+)$/i);if(!t)throw new TypeError("Invalid note identifier");const n=t[1].toUpperCase(),s=parseInt(t[3]);let i=t[2].toLowerCase();return i=i===""?void 0:i,{accidental:i,identifier:n+(i||"")+s,name:n,octave:s}}static sanitizeChannels(e){let t;if(this.validation){if(e==="all")t=["all"];else if(e==="none")return[]}return t=Array.isArray(e)?e:[e],t.indexOf("all")>-1&&(t=a.MIDI_CHANNEL_NUMBERS),t.map(function(n){return parseInt(n)}).filter(function(n){return n>=1&&n<=16})}static toTimestamp(e){let t=!1;const n=parseFloat(e);return!isNaN(n)&&(typeof e=="string"&&e.substring(0,1)==="+"?n>=0&&(t=c.time+n):n>=0&&(t=n),t)}static guessNoteNumber(e,t){t=parseInt(t)||0;let n=!1;if(Number.isInteger(e)&&e>=0&&e<=127)n=parseInt(e);else if(parseInt(e)>=0&&parseInt(e)<=127)n=parseInt(e);else if(typeof e=="string"||e instanceof String)try{n=this.toNoteNumber(e.trim(),t)}catch{return!1}return n}static toNoteIdentifier(e,t){if(e=parseInt(e),isNaN(e)||e<0||e>127)throw new RangeError("Invalid note number");if(t=t==null?0:parseInt(t),isNaN(t))throw new RangeError("Invalid octaveOffset value");const n=Math.floor(e/12-1)+t;return["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"][e%12]+n.toString()}static buildNote(e,t={}){if(t.octaveOffset=parseInt(t.octaveOffset)||0,e instanceof z)return e;let n=this.guessNoteNumber(e,t.octaveOffset);if(n===!1)throw new TypeError(`The input could not be parsed as a note (${e})`);return t.octaveOffset=void 0,new z(n,t)}static buildNoteArray(e,t={}){let n=[];return Array.isArray(e)||(e=[e]),e.forEach(s=>{n.push(this.buildNote(s,t))}),n}static from7bitToFloat(e){return e===1/0&&(e=127),e=parseInt(e)||0,Math.min(Math.max(e/127,0),1)}static fromFloatTo7Bit(e){return e===1/0&&(e=1),e=parseFloat(e)||0,Math.min(Math.max(Math.round(127*e),0),127)}static fromMsbLsbToFloat(e,t=0){c.validation&&(e=Math.min(Math.max(parseInt(e)||0,0),127),t=Math.min(Math.max(parseInt(t)||0,0),127));const n=((e<<7)+t)/16383;return Math.min(Math.max(n,0),1)}static fromFloatToMsbLsb(e){c.validation&&(e=Math.min(Math.max(parseFloat(e)||0,0),1));const t=Math.round(16383*e);return{msb:t>>7,lsb:127&t}}static offsetNumber(e,t=0,n=0){if(c.validation){if(e=parseInt(e),isNaN(e))throw new Error("Invalid note number");t=parseInt(t)||0,n=parseInt(n)||0}return Math.min(Math.max(e+12*t+n,0),127)}static getPropertyByValue(e,t){return Object.keys(e).find(n=>e[n]===t)}static getCcNameByNumber(e){return l.getPropertyByValue(a.MIDI_CONTROL_CHANGE_MESSAGES,e)}static getChannelModeByNumber(e){if(!(e>=120&&e<=127))return!1;for(let t in a.MIDI_CHANNEL_MODE_MESSAGES)if(a.MIDI_CHANNEL_MODE_MESSAGES.hasOwnProperty(t)&&e===a.MIDI_CHANNEL_MODE_MESSAGES[t])return t;return!1}static get isNode(){return typeof process<"u"&&process.versions!=null&&process.versions.node!=null}static get isBrowser(){return typeof window<"u"&&window.document!==void 0}}/**
 * The `OutputChannel` class represents a single output MIDI channel. `OutputChannel` objects are
 * provided by an [`Output`](Output) port which, itself, is made available by a device. The
 * `OutputChannel` object is derived from the host's MIDI subsystem and should not be instantiated
 * directly.
 *
 * All 16 `OutputChannel` objects can be found inside the parent output's
 * [`channels`]{@link Output#channels} property.
 *
 * @param {Output} output The [`Output`](Output) this channel belongs to.
 * @param {number} number The MIDI channel number (`1` - `16`).
 *
 * @extends EventEmitter
 * @license Apache-2.0
 * @since 3.0.0
 */class Zt extends D{constructor(e,t){super(),this._output=e,this._number=t,this._octaveOffset=0}destroy(){this._output=null,this._number=null,this._octaveOffset=0,this.removeListener()}send(e,t={time:0}){return this.output.send(e,t),this}sendKeyAftertouch(e,t,n={}){if(c.validation){if(n.useRawValue&&(n.rawValue=n.useRawValue),isNaN(parseFloat(t)))throw new RangeError("Invalid key aftertouch value.");if(n.rawValue){if(!(t>=0&&t<=127&&Number.isInteger(t)))throw new RangeError("Key aftertouch raw value must be an integer between 0 and 127.")}else if(!(t>=0&&t<=1))throw new RangeError("Key aftertouch value must be a float between 0 and 1.")}n.rawValue||(t=l.fromFloatTo7Bit(t));const s=c.octaveOffset+this.output.octaveOffset+this.octaveOffset;return Array.isArray(e)||(e=[e]),l.buildNoteArray(e).forEach(i=>{this.send([(a.MIDI_CHANNEL_MESSAGES.keyaftertouch<<4)+(this.number-1),i.getOffsetNumber(s),t],{time:l.toTimestamp(n.time)})}),this}sendControlChange(e,t,n={}){if(typeof e=="string"&&(e=a.MIDI_CONTROL_CHANGE_MESSAGES[e]),Array.isArray(t)||(t=[t]),c.validation){if(e===void 0)throw new TypeError("Control change must be identified with a valid name or an integer between 0 and 127.");if(!Number.isInteger(e)||!(e>=0&&e<=127))throw new TypeError("Control change number must be an integer between 0 and 127.");if((t=t.map(s=>{const i=Math.min(Math.max(parseInt(s),0),127);if(isNaN(i))throw new TypeError("Values must be integers between 0 and 127");return i})).length===2&&e>=32)throw new TypeError("To use a value array, the controller must be between 0 and 31")}return t.forEach((s,i)=>{this.send([(a.MIDI_CHANNEL_MESSAGES.controlchange<<4)+(this.number-1),e+32*i,t[i]],{time:l.toTimestamp(n.time)})}),this}_selectNonRegisteredParameter(e,t={}){return this.sendControlChange(99,e[0],t),this.sendControlChange(98,e[1],t),this}_deselectRegisteredParameter(e={}){return this.sendControlChange(101,127,e),this.sendControlChange(100,127,e),this}_deselectNonRegisteredParameter(e={}){return this.sendControlChange(101,127,e),this.sendControlChange(100,127,e),this}_selectRegisteredParameter(e,t={}){return this.sendControlChange(101,e[0],t),this.sendControlChange(100,e[1],t),this}_setCurrentParameter(e,t={}){return e=[].concat(e),this.sendControlChange(6,e[0],t),e.length<2||this.sendControlChange(38,e[1],t),this}sendRpnDecrement(e,t={}){if(Array.isArray(e)||(e=a.MIDI_REGISTERED_PARAMETERS[e]),c.validation){if(e===void 0)throw new TypeError("The specified registered parameter is invalid.");let n=!1;if(Object.getOwnPropertyNames(a.MIDI_REGISTERED_PARAMETERS).forEach(s=>{a.MIDI_REGISTERED_PARAMETERS[s][0]===e[0]&&a.MIDI_REGISTERED_PARAMETERS[s][1]===e[1]&&(n=!0)}),!n)throw new TypeError("The specified registered parameter is invalid.")}return this._selectRegisteredParameter(e,t),this.sendControlChange(97,0,t),this._deselectRegisteredParameter(t),this}sendRpnIncrement(e,t={}){if(Array.isArray(e)||(e=a.MIDI_REGISTERED_PARAMETERS[e]),c.validation){if(e===void 0)throw new TypeError("The specified registered parameter is invalid.");let n=!1;if(Object.getOwnPropertyNames(a.MIDI_REGISTERED_PARAMETERS).forEach(s=>{a.MIDI_REGISTERED_PARAMETERS[s][0]===e[0]&&a.MIDI_REGISTERED_PARAMETERS[s][1]===e[1]&&(n=!0)}),!n)throw new TypeError("The specified registered parameter is invalid.")}return this._selectRegisteredParameter(e,t),this.sendControlChange(96,0,t),this._deselectRegisteredParameter(t),this}playNote(e,t={}){if(this.sendNoteOn(e,t),t.duration>0&&isFinite(String(t.duration).trim()||NaN)){let n={time:(l.toTimestamp(t.time)||c.time)+t.duration,release:t.release,rawRelease:t.rawRelease};this.sendNoteOff(e,n)}return this}sendNoteOff(e,t={}){if(c.validation){if(t.rawRelease!=null&&!(t.rawRelease>=0&&t.rawRelease<=127))throw new RangeError("The 'rawRelease' option must be an integer between 0 and 127");if(t.release!=null&&!(t.release>=0&&t.release<=1))throw new RangeError("The 'release' option must be an number between 0 and 1");t.rawVelocity&&(t.rawRelease=t.velocity,console.warn("The 'rawVelocity' option is deprecated. Use 'rawRelease' instead.")),t.velocity&&(t.release=t.velocity,console.warn("The 'velocity' option is deprecated. Use 'attack' instead."))}let n=64;t.rawRelease!=null?n=t.rawRelease:isNaN(t.release)||(n=Math.round(127*t.release));const s=c.octaveOffset+this.output.octaveOffset+this.octaveOffset;return l.buildNoteArray(e,{rawRelease:parseInt(n)}).forEach(i=>{this.send([(a.MIDI_CHANNEL_MESSAGES.noteoff<<4)+(this.number-1),i.getOffsetNumber(s),i.rawRelease],{time:l.toTimestamp(t.time)})}),this}stopNote(e,t={}){return this.sendNoteOff(e,t)}sendNoteOn(e,t={}){if(c.validation){if(t.rawAttack!=null&&!(t.rawAttack>=0&&t.rawAttack<=127))throw new RangeError("The 'rawAttack' option must be an integer between 0 and 127");if(t.attack!=null&&!(t.attack>=0&&t.attack<=1))throw new RangeError("The 'attack' option must be an number between 0 and 1");t.rawVelocity&&(t.rawAttack=t.velocity,t.rawRelease=t.release,console.warn("The 'rawVelocity' option is deprecated. Use 'rawAttack' or 'rawRelease'.")),t.velocity&&(t.attack=t.velocity,console.warn("The 'velocity' option is deprecated. Use 'attack' instead."))}let n=64;t.rawAttack!=null?n=t.rawAttack:isNaN(t.attack)||(n=Math.round(127*t.attack));const s=c.octaveOffset+this.output.octaveOffset+this.octaveOffset;return l.buildNoteArray(e,{rawAttack:n}).forEach(i=>{this.send([(a.MIDI_CHANNEL_MESSAGES.noteon<<4)+(this.number-1),i.getOffsetNumber(s),i.rawAttack],{time:l.toTimestamp(t.time)})}),this}sendChannelMode(e,t=0,n={}){if(typeof e=="string"&&(e=a.MIDI_CHANNEL_MODE_MESSAGES[e]),c.validation){if(e===void 0)throw new TypeError("Invalid channel mode message name or number.");if(isNaN(e)||!(e>=120&&e<=127))throw new TypeError("Invalid channel mode message number.");if(isNaN(parseInt(t))||t<0||t>127)throw new RangeError("Value must be an integer between 0 and 127.")}return this.send([(a.MIDI_CHANNEL_MESSAGES.controlchange<<4)+(this.number-1),e,t],{time:l.toTimestamp(n.time)}),this}sendOmniMode(e,t={}){return e===void 0||e?this.sendChannelMode("omnimodeon",0,t):this.sendChannelMode("omnimodeoff",0,t),this}sendChannelAftertouch(e,t={}){if(c.validation){if(isNaN(parseFloat(e)))throw new RangeError("Invalid channel aftertouch value.");if(t.rawValue){if(!(e>=0&&e<=127&&Number.isInteger(e)))throw new RangeError("Channel aftertouch raw value must be an integer between 0 and 127.")}else if(!(e>=0&&e<=1))throw new RangeError("Channel aftertouch value must be a float between 0 and 1.")}return this.send([(a.MIDI_CHANNEL_MESSAGES.channelaftertouch<<4)+(this.number-1),Math.round(127*e)],{time:l.toTimestamp(t.time)}),this}sendMasterTuning(e,t={}){if(e=parseFloat(e)||0,c.validation&&!(e>-65&&e<64))throw new RangeError("The value must be a decimal number larger than -65 and smaller than 64.");let n=Math.floor(e)+64,s=e-Math.floor(e);s=Math.round((s+1)/2*16383);let i=s>>7&127,o=127&s;return this.sendRpnValue("channelcoarsetuning",n,t),this.sendRpnValue("channelfinetuning",[i,o],t),this}sendModulationRange(e,t,n={}){if(c.validation){if(!Number.isInteger(e)||!(e>=0&&e<=127))throw new RangeError("The semitones value must be an integer between 0 and 127.");if(!(t==null||Number.isInteger(t)&&t>=0&&t<=127))throw new RangeError("If specified, the cents value must be an integer between 0 and 127.")}return t>=0&&t<=127||(t=0),this.sendRpnValue("modulationrange",[e,t],n),this}sendNrpnValue(e,t,n={}){if(t=[].concat(t),c.validation){if(!Array.isArray(e)||!Number.isInteger(e[0])||!Number.isInteger(e[1]))throw new TypeError("The specified NRPN is invalid.");if(!(e[0]>=0&&e[0]<=127))throw new RangeError("The first byte of the NRPN must be between 0 and 127.");if(!(e[1]>=0&&e[1]<=127))throw new RangeError("The second byte of the NRPN must be between 0 and 127.");t.forEach(s=>{if(!(s>=0&&s<=127))throw new RangeError("The data bytes of the NRPN must be between 0 and 127.")})}return this._selectNonRegisteredParameter(e,n),this._setCurrentParameter(t,n),this._deselectNonRegisteredParameter(n),this}sendPitchBend(e,t={}){if(c.validation)if(t.rawValue&&Array.isArray(e)){if(!(e[0]>=0&&e[0]<=127))throw new RangeError("The pitch bend MSB must be an integer between 0 and 127.");if(!(e[1]>=0&&e[1]<=127))throw new RangeError("The pitch bend LSB must be an integer between 0 and 127.")}else if(t.rawValue&&!Array.isArray(e)){if(!(e>=0&&e<=127))throw new RangeError("The pitch bend MSB must be an integer between 0 and 127.")}else{if(isNaN(e)||e===null)throw new RangeError("Invalid pitch bend value.");if(!(e>=-1&&e<=1))throw new RangeError("The pitch bend MSB must be an integer between 0 and 127.")}let n=0,s=0;if(t.rawValue&&Array.isArray(e))n=e[0],s=e[1];else if(t.rawValue&&!Array.isArray(e))n=e;else{const i=l.fromFloatToMsbLsb((e+1)/2);n=i.msb,s=i.lsb}return this.send([(a.MIDI_CHANNEL_MESSAGES.pitchbend<<4)+(this.number-1),s,n],{time:l.toTimestamp(t.time)}),this}sendPitchBendRange(e,t,n={}){if(c.validation){if(!Number.isInteger(e)||!(e>=0&&e<=127))throw new RangeError("The semitones value must be an integer between 0 and 127.");if(!Number.isInteger(t)||!(t>=0&&t<=127))throw new RangeError("The cents value must be an integer between 0 and 127.")}return this.sendRpnValue("pitchbendrange",[e,t],n),this}sendProgramChange(e,t={}){if(e=parseInt(e)||0,c.validation&&!(e>=0&&e<=127))throw new RangeError("The program number must be between 0 and 127.");return this.send([(a.MIDI_CHANNEL_MESSAGES.programchange<<4)+(this.number-1),e],{time:l.toTimestamp(t.time)}),this}sendRpnValue(e,t,n={}){if(Array.isArray(e)||(e=a.MIDI_REGISTERED_PARAMETERS[e]),c.validation){if(!Number.isInteger(e[0])||!Number.isInteger(e[1]))throw new TypeError("The specified NRPN is invalid.");if(!(e[0]>=0&&e[0]<=127))throw new RangeError("The first byte of the RPN must be between 0 and 127.");if(!(e[1]>=0&&e[1]<=127))throw new RangeError("The second byte of the RPN must be between 0 and 127.");[].concat(t).forEach(s=>{if(!(s>=0&&s<=127))throw new RangeError("The data bytes of the RPN must be between 0 and 127.")})}return this._selectRegisteredParameter(e,n),this._setCurrentParameter(t,n),this._deselectRegisteredParameter(n),this}sendTuningBank(e,t={}){if(c.validation&&(!Number.isInteger(e)||!(e>=0&&e<=127)))throw new RangeError("The tuning bank number must be between 0 and 127.");return this.sendRpnValue("tuningbank",e,t),this}sendTuningProgram(e,t={}){if(c.validation&&(!Number.isInteger(e)||!(e>=0&&e<=127)))throw new RangeError("The tuning program number must be between 0 and 127.");return this.sendRpnValue("tuningprogram",e,t),this}sendLocalControl(e,t={}){return e?this.sendChannelMode("localcontrol",127,t):this.sendChannelMode("localcontrol",0,t)}sendAllNotesOff(e={}){return this.sendChannelMode("allnotesoff",0,e)}sendAllSoundOff(e={}){return this.sendChannelMode("allsoundoff",0,e)}sendResetAllControllers(e={}){return this.sendChannelMode("resetallcontrollers",0,e)}sendPolyphonicMode(e,t={}){return e==="mono"?this.sendChannelMode("monomodeon",0,t):this.sendChannelMode("polymodeon",0,t)}get octaveOffset(){return this._octaveOffset}set octaveOffset(e){if(this.validation&&(e=parseInt(e),isNaN(e)))throw new TypeError("The 'octaveOffset' property must be an integer.");this._octaveOffset=e}get output(){return this._output}get number(){return this._number}}/**
 * The `Output` class represents a single MIDI output port (not to be confused with a MIDI channel).
 * A port is made available by a MIDI device. A MIDI device can advertise several input and output
 * ports. Each port has 16 MIDI channels which can be accessed via the [`channels`](#channels)
 * property.
 *
 * The `Output` object is automatically instantiated by the library according to the host's MIDI
 * subsystem and should not be directly instantiated.
 *
 * You can access all available `Output` objects by referring to the
 * [`WebMidi.outputs`](WebMidi#outputs) array or by using methods such as
 * [`WebMidi.getOutputByName()`](WebMidi#getOutputByName) or
 * [`WebMidi.getOutputById()`](WebMidi#getOutputById).
 *
 * @fires Output#opened
 * @fires Output#disconnected
 * @fires Output#closed
 *
 * @extends EventEmitter
 * @license Apache-2.0
 */class _e extends D{constructor(e){super(),this._midiOutput=e,this._octaveOffset=0,this.channels=[];for(let t=1;t<=16;t++)this.channels[t]=new Zt(this,t);this._midiOutput.onstatechange=this._onStateChange.bind(this)}async destroy(){this.removeListener(),this.channels.forEach(e=>e.destroy()),this.channels=[],this._midiOutput.onstatechange=null,await this.close(),this._midiOutput=null}_onStateChange(e){let t={timestamp:c.time};e.port.connection==="open"?(t.type="opened",t.target=this,t.port=t.target,this.emit("opened",t)):e.port.connection==="closed"&&e.port.state==="connected"?(t.type="closed",t.target=this,t.port=t.target,this.emit("closed",t)):e.port.connection==="closed"&&e.port.state==="disconnected"?(t.type="disconnected",t.port={connection:e.port.connection,id:e.port.id,manufacturer:e.port.manufacturer,name:e.port.name,state:e.port.state,type:e.port.type},this.emit("disconnected",t)):e.port.connection==="pending"&&e.port.state==="disconnected"||console.warn("This statechange event was not caught:",e.port.connection,e.port.state)}async open(){try{return await this._midiOutput.open(),Promise.resolve(this)}catch(e){return Promise.reject(e)}}async close(){this._midiOutput?await this._midiOutput.close():await Promise.resolve()}send(e,t={time:0},n=0){if(e instanceof it&&(e=l.isNode?e.data:e.rawData),e instanceof Uint8Array&&l.isNode&&(e=Array.from(e)),c.validation){if(Array.isArray(e)||e instanceof Uint8Array||(e=[e],Array.isArray(t)&&(e=e.concat(t)),t=isNaN(n)?{time:0}:{time:n}),!(parseInt(e[0])>=128&&parseInt(e[0])<=255))throw new RangeError("The first byte (status) must be an integer between 128 and 255.");e.slice(1).forEach(s=>{if(!((s=parseInt(s))>=0&&s<=255))throw new RangeError("Data bytes must be integers between 0 and 255.")}),t||(t={time:0})}return this._midiOutput.send(e,l.toTimestamp(t.time)),this}sendSysex(e,t=[],n={}){if(e=[].concat(e),t instanceof Uint8Array){const s=new Uint8Array(1+e.length+t.length+1);s[0]=a.MIDI_SYSTEM_MESSAGES.sysex,s.set(Uint8Array.from(e),1),s.set(t,1+e.length),s[s.length-1]=a.MIDI_SYSTEM_MESSAGES.sysexend,this.send(s,{time:n.time})}else{const s=e.concat(t,a.MIDI_SYSTEM_MESSAGES.sysexend);this.send([a.MIDI_SYSTEM_MESSAGES.sysex].concat(s),{time:n.time})}return this}clear(){return this._midiOutput.clear?this._midiOutput.clear():c.validation&&console.warn("The 'clear()' method has not yet been implemented in your environment."),this}sendTimecodeQuarterFrame(e,t={}){if(c.validation&&(e=parseInt(e),isNaN(e)||!(e>=0&&e<=127)))throw new RangeError("The value must be an integer between 0 and 127.");return this.send([a.MIDI_SYSTEM_MESSAGES.timecode,e],{time:t.time}),this}sendSongPosition(e=0,t={}){var n=(e=Math.floor(e)||0)>>7&127,s=127&e;return this.send([a.MIDI_SYSTEM_MESSAGES.songposition,n,s],{time:t.time}),this}sendSongSelect(e=0,t={}){if(c.validation&&(e=parseInt(e),isNaN(e)||!(e>=0&&e<=127)))throw new RangeError("The program value must be between 0 and 127");return this.send([a.MIDI_SYSTEM_MESSAGES.songselect,e],{time:t.time}),this}sendTuneRequest(e={}){return this.send([a.MIDI_SYSTEM_MESSAGES.tunerequest],{time:e.time}),this}sendClock(e={}){return this.send([a.MIDI_SYSTEM_MESSAGES.clock],{time:e.time}),this}sendStart(e={}){return this.send([a.MIDI_SYSTEM_MESSAGES.start],{time:e.time}),this}sendContinue(e={}){return this.send([a.MIDI_SYSTEM_MESSAGES.continue],{time:e.time}),this}sendStop(e={}){return this.send([a.MIDI_SYSTEM_MESSAGES.stop],{time:e.time}),this}sendActiveSensing(e={}){return this.send([a.MIDI_SYSTEM_MESSAGES.activesensing],{time:e.time}),this}sendReset(e={}){return this.send([a.MIDI_SYSTEM_MESSAGES.reset],{time:e.time}),this}sendTuningRequest(e={}){return c.validation&&console.warn("The sendTuningRequest() method has been deprecated. Use sendTuningRequest() instead."),this.sendTuneRequest(e)}sendKeyAftertouch(e,t,n={}){return n.channels==null&&(n.channels=a.MIDI_CHANNEL_NUMBERS),l.sanitizeChannels(n.channels).forEach(s=>{this.channels[s].sendKeyAftertouch(e,t,n)}),this}sendControlChange(e,t,n={},s={}){if(c.validation&&(Array.isArray(n)||Number.isInteger(n)||n==="all")){const i=n;(n=s).channels=i,n.channels==="all"&&(n.channels=a.MIDI_CHANNEL_NUMBERS)}return n.channels==null&&(n.channels=a.MIDI_CHANNEL_NUMBERS),l.sanitizeChannels(n.channels).forEach(i=>{this.channels[i].sendControlChange(e,t,n)}),this}sendPitchBendRange(e=0,t=0,n={}){return n.channels==null&&(n.channels=a.MIDI_CHANNEL_NUMBERS),l.sanitizeChannels(n.channels).forEach(s=>{this.channels[s].sendPitchBendRange(e,t,n)}),this}setPitchBendRange(e=0,t=0,n="all",s={}){return c.validation&&(console.warn("The setPitchBendRange() method is deprecated. Use sendPitchBendRange() instead."),s.channels=n,s.channels==="all"&&(s.channels=a.MIDI_CHANNEL_NUMBERS)),this.sendPitchBendRange(e,t,s)}sendRpnValue(e,t,n={}){return n.channels==null&&(n.channels=a.MIDI_CHANNEL_NUMBERS),l.sanitizeChannels(n.channels).forEach(s=>{this.channels[s].sendRpnValue(e,t,n)}),this}setRegisteredParameter(e,t=[],n="all",s={}){return c.validation&&(console.warn("The setRegisteredParameter() method is deprecated. Use sendRpnValue() instead."),s.channels=n,s.channels==="all"&&(s.channels=a.MIDI_CHANNEL_NUMBERS)),this.sendRpnValue(e,t,s)}sendChannelAftertouch(e,t={},n={}){if(c.validation&&(Array.isArray(t)||Number.isInteger(t)||t==="all")){const s=t;(t=n).channels=s,t.channels==="all"&&(t.channels=a.MIDI_CHANNEL_NUMBERS)}return t.channels==null&&(t.channels=a.MIDI_CHANNEL_NUMBERS),l.sanitizeChannels(t.channels).forEach(s=>{this.channels[s].sendChannelAftertouch(e,t)}),this}sendPitchBend(e,t={},n={}){if(c.validation&&(Array.isArray(t)||Number.isInteger(t)||t==="all")){const s=t;(t=n).channels=s,t.channels==="all"&&(t.channels=a.MIDI_CHANNEL_NUMBERS)}return t.channels==null&&(t.channels=a.MIDI_CHANNEL_NUMBERS),l.sanitizeChannels(t.channels).forEach(s=>{this.channels[s].sendPitchBend(e,t)}),this}sendProgramChange(e=0,t={},n={}){if(c.validation&&(Array.isArray(t)||Number.isInteger(t)||t==="all")){const s=t;(t=n).channels=s,t.channels==="all"&&(t.channels=a.MIDI_CHANNEL_NUMBERS)}return t.channels==null&&(t.channels=a.MIDI_CHANNEL_NUMBERS),l.sanitizeChannels(t.channels).forEach(s=>{this.channels[s].sendProgramChange(e,t)}),this}sendModulationRange(e,t,n={}){return n.channels==null&&(n.channels=a.MIDI_CHANNEL_NUMBERS),l.sanitizeChannels(n.channels).forEach(s=>{this.channels[s].sendModulationRange(e,t,n)}),this}setModulationRange(e=0,t=0,n="all",s={}){return c.validation&&(console.warn("The setModulationRange() method is deprecated. Use sendModulationRange() instead."),s.channels=n,s.channels==="all"&&(s.channels=a.MIDI_CHANNEL_NUMBERS)),this.sendModulationRange(e,t,s)}sendMasterTuning(e,t={}){return t.channels==null&&(t.channels=a.MIDI_CHANNEL_NUMBERS),l.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].sendMasterTuning(e,t)}),this}setMasterTuning(e,t={},n={}){return c.validation&&(console.warn("The setMasterTuning() method is deprecated. Use sendMasterTuning() instead."),n.channels=t,n.channels==="all"&&(n.channels=a.MIDI_CHANNEL_NUMBERS)),this.sendMasterTuning(e,n)}sendTuningProgram(e,t={}){return t.channels==null&&(t.channels=a.MIDI_CHANNEL_NUMBERS),l.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].sendTuningProgram(e,t)}),this}setTuningProgram(e,t="all",n={}){return c.validation&&(console.warn("The setTuningProgram() method is deprecated. Use sendTuningProgram() instead."),n.channels=t,n.channels==="all"&&(n.channels=a.MIDI_CHANNEL_NUMBERS)),this.sendTuningProgram(e,n)}sendTuningBank(e=0,t={}){return t.channels==null&&(t.channels=a.MIDI_CHANNEL_NUMBERS),l.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].sendTuningBank(e,t)}),this}setTuningBank(e,t="all",n={}){return c.validation&&(console.warn("The setTuningBank() method is deprecated. Use sendTuningBank() instead."),n.channels=t,n.channels==="all"&&(n.channels=a.MIDI_CHANNEL_NUMBERS)),this.sendTuningBank(e,n)}sendChannelMode(e,t=0,n={},s={}){if(c.validation&&(Array.isArray(n)||Number.isInteger(n)||n==="all")){const i=n;(n=s).channels=i,n.channels==="all"&&(n.channels=a.MIDI_CHANNEL_NUMBERS)}return n.channels==null&&(n.channels=a.MIDI_CHANNEL_NUMBERS),l.sanitizeChannels(n.channels).forEach(i=>{this.channels[i].sendChannelMode(e,t,n)}),this}sendAllSoundOff(e={}){return e.channels==null&&(e.channels=a.MIDI_CHANNEL_NUMBERS),l.sanitizeChannels(e.channels).forEach(t=>{this.channels[t].sendAllSoundOff(e)}),this}sendAllNotesOff(e={}){return e.channels==null&&(e.channels=a.MIDI_CHANNEL_NUMBERS),l.sanitizeChannels(e.channels).forEach(t=>{this.channels[t].sendAllNotesOff(e)}),this}sendResetAllControllers(e={},t={}){if(c.validation&&(Array.isArray(e)||Number.isInteger(e)||e==="all")){const n=e;(e=t).channels=n,e.channels==="all"&&(e.channels=a.MIDI_CHANNEL_NUMBERS)}return e.channels==null&&(e.channels=a.MIDI_CHANNEL_NUMBERS),l.sanitizeChannels(e.channels).forEach(n=>{this.channels[n].sendResetAllControllers(e)}),this}sendPolyphonicMode(e,t={},n={}){if(c.validation&&(Array.isArray(t)||Number.isInteger(t)||t==="all")){const s=t;(t=n).channels=s,t.channels==="all"&&(t.channels=a.MIDI_CHANNEL_NUMBERS)}return t.channels==null&&(t.channels=a.MIDI_CHANNEL_NUMBERS),l.sanitizeChannels(t.channels).forEach(s=>{this.channels[s].sendPolyphonicMode(e,t)}),this}sendLocalControl(e,t={},n={}){if(c.validation&&(Array.isArray(t)||Number.isInteger(t)||t==="all")){const s=t;(t=n).channels=s,t.channels==="all"&&(t.channels=a.MIDI_CHANNEL_NUMBERS)}return t.channels==null&&(t.channels=a.MIDI_CHANNEL_NUMBERS),l.sanitizeChannels(t.channels).forEach(s=>{this.channels[s].sendLocalControl(e,t)}),this}sendOmniMode(e,t={},n={}){if(c.validation&&(Array.isArray(t)||Number.isInteger(t)||t==="all")){const s=t;(t=n).channels=s,t.channels==="all"&&(t.channels=a.MIDI_CHANNEL_NUMBERS)}return t.channels==null&&(t.channels=a.MIDI_CHANNEL_NUMBERS),l.sanitizeChannels(t.channels).forEach(s=>{this.channels[s].sendOmniMode(e,t)}),this}sendNrpnValue(e,t,n={}){return n.channels==null&&(n.channels=a.MIDI_CHANNEL_NUMBERS),l.sanitizeChannels(n.channels).forEach(s=>{this.channels[s].sendNrpnValue(e,t,n)}),this}setNonRegisteredParameter(e,t=[],n="all",s={}){return c.validation&&(console.warn("The setNonRegisteredParameter() method is deprecated. Use sendNrpnValue() instead."),s.channels=n,s.channels==="all"&&(s.channels=a.MIDI_CHANNEL_NUMBERS)),this.sendNrpnValue(e,t,s)}sendRpnIncrement(e,t={}){return t.channels==null&&(t.channels=a.MIDI_CHANNEL_NUMBERS),l.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].sendRpnIncrement(e,t)}),this}incrementRegisteredParameter(e,t="all",n={}){return c.validation&&(console.warn("The incrementRegisteredParameter() method is deprecated. Use sendRpnIncrement() instead."),n.channels=t,n.channels==="all"&&(n.channels=a.MIDI_CHANNEL_NUMBERS)),this.sendRpnIncrement(e,n)}sendRpnDecrement(e,t={}){return t.channels==null&&(t.channels=a.MIDI_CHANNEL_NUMBERS),l.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].sendRpnDecrement(e,t)}),this}decrementRegisteredParameter(e,t="all",n={}){return c.validation&&(console.warn("The decrementRegisteredParameter() method is deprecated. Use sendRpnDecrement() instead."),n.channels=t,n.channels==="all"&&(n.channels=a.MIDI_CHANNEL_NUMBERS)),this.sendRpnDecrement(e,n)}sendNoteOff(e,t={},n={}){if(c.validation&&(Array.isArray(t)||Number.isInteger(t)||t==="all")){const s=t;(t=n).channels=s,t.channels==="all"&&(t.channels=a.MIDI_CHANNEL_NUMBERS)}return t.channels==null&&(t.channels=a.MIDI_CHANNEL_NUMBERS),l.sanitizeChannels(t.channels).forEach(s=>{this.channels[s].sendNoteOff(e,t)}),this}stopNote(e,t){return this.sendNoteOff(e,t)}playNote(e,t={},n={}){if(c.validation&&(t.rawVelocity&&console.warn("The 'rawVelocity' option is deprecated. Use 'rawAttack' instead."),t.velocity&&console.warn("The 'velocity' option is deprecated. Use 'velocity' instead."),Array.isArray(t)||Number.isInteger(t)||t==="all")){const s=t;(t=n).channels=s,t.channels==="all"&&(t.channels=a.MIDI_CHANNEL_NUMBERS)}return t.channels==null&&(t.channels=a.MIDI_CHANNEL_NUMBERS),l.sanitizeChannels(t.channels).forEach(s=>{this.channels[s].playNote(e,t)}),this}sendNoteOn(e,t={},n={}){if(c.validation&&(Array.isArray(t)||Number.isInteger(t)||t==="all")){const s=t;(t=n).channels=s,t.channels==="all"&&(t.channels=a.MIDI_CHANNEL_NUMBERS)}return t.channels==null&&(t.channels=a.MIDI_CHANNEL_NUMBERS),l.sanitizeChannels(t.channels).forEach(s=>{this.channels[s].sendNoteOn(e,t)}),this}get name(){return this._midiOutput.name}get id(){return this._midiOutput.id}get connection(){return this._midiOutput.connection}get manufacturer(){return this._midiOutput.manufacturer}get state(){return this._midiOutput.state}get type(){return this._midiOutput.type}get octaveOffset(){return this._octaveOffset}set octaveOffset(e){if(this.validation&&(e=parseInt(e),isNaN(e)))throw new TypeError("The 'octaveOffset' property must be an integer.");this._octaveOffset=e}}/**
 * The `Forwarder` class allows the forwarding of MIDI messages to predetermined outputs. When you
 * call its [`forward()`](#forward) method, it will send the specified [`Message`](Message) object
 * to all the outputs listed in its [`destinations`](#destinations) property.
 *
 * If specific channels or message types have been defined in the [`channels`](#channels) or
 * [`types`](#types) properties, only messages matching the channels/types will be forwarded.
 *
 * While it can be manually instantiated, you are more likely to come across a `Forwarder` object as
 * the return value of the [`Input.addForwarder()`](Input#addForwarder) method.
 *
 * @license Apache-2.0
 * @since 3.0.0
 */class We{constructor(e=[],t={}){this.destinations=[],this.types=[...Object.keys(a.MIDI_SYSTEM_MESSAGES),...Object.keys(a.MIDI_CHANNEL_MESSAGES)],this.channels=a.MIDI_CHANNEL_NUMBERS,this.suspended=!1,Array.isArray(e)||(e=[e]),t.types&&!Array.isArray(t.types)&&(t.types=[t.types]),t.channels&&!Array.isArray(t.channels)&&(t.channels=[t.channels]),c.validation&&(e.forEach(n=>{if(!(n instanceof _e))throw new TypeError("Destinations must be of type 'Output'.")}),t.types!==void 0&&t.types.forEach(n=>{if(!a.MIDI_SYSTEM_MESSAGES.hasOwnProperty(n)&&!a.MIDI_CHANNEL_MESSAGES.hasOwnProperty(n))throw new TypeError("Type must be a valid message type.")}),t.channels!==void 0&&t.channels.forEach(n=>{if(!a.MIDI_CHANNEL_NUMBERS.includes(n))throw new TypeError("MIDI channel must be between 1 and 16.")})),this.destinations=e,t.types&&(this.types=t.types),t.channels&&(this.channels=t.channels)}forward(e){this.suspended||this.types.includes(e.type)&&(e.channel&&!this.channels.includes(e.channel)||this.destinations.forEach(t=>{(!c.validation||t instanceof _e)&&t.send(e)}))}}/**
 * The `InputChannel` class represents a single MIDI input channel (1-16) from a single input
 * device. This object is derived from the host's MIDI subsystem and should not be instantiated
 * directly.
 *
 * All 16 `InputChannel` objects can be found inside the input's [`channels`](Input#channels)
 * property.
 *
 * @fires InputChannel#midimessage
 * @fires InputChannel#unknownmessage
 *
 * @fires InputChannel#noteoff
 * @fires InputChannel#noteon
 * @fires InputChannel#keyaftertouch
 * @fires InputChannel#programchange
 * @fires InputChannel#event:controlchange-controllerxxx
 * @fires InputChannel#channelaftertouch
 * @fires InputChannel#pitchbend
 * @fires InputChannel#controlchange
 *
 * @fires InputChannel#allnotesoff
 * @fires InputChannel#allsoundoff
 * @fires InputChannel#localcontrol
 * @fires InputChannel#monomode
 * @fires InputChannel#omnimode
 * @fires InputChannel#resetallcontrollers
 *
 * @fires InputChannel#event:nrpn
 * @fires InputChannel#event:nrpn-dataentrycoarse
 * @fires InputChannel#event:nrpn-dataentryfine
 * @fires InputChannel#event:nrpn-databuttonincrement
 * @fires InputChannel#event:nrpn-databuttondecrement
 * @fires InputChannel#event:rpn
 * @fires InputChannel#event:rpn-dataentrycoarse
 * @fires InputChannel#event:rpn-dataentryfine
 * @fires InputChannel#event:rpn-databuttonincrement
 * @fires InputChannel#event:rpn-databuttondecrement
 *
 * @extends EventEmitter
 * @license Apache-2.0
 * @since 3.0.0
 */class en extends D{constructor(e,t){super(),this._input=e,this._number=t,this._octaveOffset=0,this._nrpnBuffer=[],this._rpnBuffer=[],this.parameterNumberEventsEnabled=!0,this.notesState=new Array(128).fill(!1)}destroy(){this._input=null,this._number=null,this._octaveOffset=0,this._nrpnBuffer=[],this.notesState=new Array(128).fill(!1),this.parameterNumberEventsEnabled=!1,this.removeListener()}_processMidiMessageEvent(e){const t=Object.assign({},e);t.port=this.input,t.target=this,t.type="midimessage",this.emit(t.type,t),this._parseEventForStandardMessages(t)}_parseEventForStandardMessages(e){const t=Object.assign({},e);t.type=t.message.type||"unknownmessage";const n=e.message.dataBytes[0],s=e.message.dataBytes[1];if(t.type==="noteoff"||t.type==="noteon"&&s===0)this.notesState[n]=!1,t.type="noteoff",t.note=new z(l.offsetNumber(n,this.octaveOffset+this.input.octaveOffset+c.octaveOffset),{rawAttack:0,rawRelease:s}),t.value=l.from7bitToFloat(s),t.rawValue=s,t.velocity=t.note.release,t.rawVelocity=t.note.rawRelease;else if(t.type==="noteon")this.notesState[n]=!0,t.note=new z(l.offsetNumber(n,this.octaveOffset+this.input.octaveOffset+c.octaveOffset),{rawAttack:s}),t.value=l.from7bitToFloat(s),t.rawValue=s,t.velocity=t.note.attack,t.rawVelocity=t.note.rawAttack;else if(t.type==="keyaftertouch")t.note=new z(l.offsetNumber(n,this.octaveOffset+this.input.octaveOffset+c.octaveOffset)),t.value=l.from7bitToFloat(s),t.rawValue=s,t.identifier=t.note.identifier,t.key=t.note.number,t.rawKey=n;else if(t.type==="controlchange"){t.controller={number:n,name:l.getCcNameByNumber(n)},t.subtype=t.controller.name||"controller"+n,t.value=l.from7bitToFloat(s),t.rawValue=s;const i=Object.assign({},t);i.type=`${t.type}-controller${n}`,delete i.subtype,this.emit(i.type,i),t.message.dataBytes[0]>=120&&this._parseChannelModeMessage(t),this.parameterNumberEventsEnabled&&this._isRpnOrNrpnController(t.message.dataBytes[0])&&this._parseEventForParameterNumber(t)}else t.type==="programchange"?(t.value=n,t.rawValue=t.value):t.type==="channelaftertouch"?(t.value=l.from7bitToFloat(n),t.rawValue=n):t.type==="pitchbend"?(t.value=((s<<7)+n-8192)/8192,t.rawValue=(s<<7)+n):t.type="unknownmessage";this.emit(t.type,t)}_parseChannelModeMessage(e){const t=Object.assign({},e);t.type=t.controller.name,t.type==="localcontrol"&&(t.value=t.message.data[2]===127,t.rawValue=t.message.data[2]),t.type==="omnimodeon"?(t.type="omnimode",t.value=!0,t.rawValue=t.message.data[2]):t.type==="omnimodeoff"&&(t.type="omnimode",t.value=!1,t.rawValue=t.message.data[2]),t.type==="monomodeon"?(t.type="monomode",t.value=!0,t.rawValue=t.message.data[2]):t.type==="polymodeon"&&(t.type="monomode",t.value=!1,t.rawValue=t.message.data[2]),this.emit(t.type,t)}_parseEventForParameterNumber(e){const t=e.message.dataBytes[0],n=e.message.dataBytes[1],s=a.MIDI_CONTROL_CHANGE_MESSAGES;t===s.nonregisteredparameterfine||t===s.registeredparameterfine?(this._nrpnBuffer=[],this._rpnBuffer=[],t===s.nonregisteredparameterfine?this._nrpnBuffer=[e.message]:n!==127&&(this._rpnBuffer=[e.message])):t===s.nonregisteredparametercoarse||t===s.registeredparametercoarse?t===s.nonregisteredparametercoarse?(this._rpnBuffer=[],this._nrpnBuffer.length===1?this._nrpnBuffer.push(e.message):this._nrpnBuffer=[]):(this._nrpnBuffer=[],this._rpnBuffer.length===1&&n!==127?this._rpnBuffer.push(e.message):this._rpnBuffer=[]):t!==s.dataentrycoarse&&t!==s.dataentryfine&&t!==s.databuttonincrement&&t!==s.databuttondecrement||(this._rpnBuffer.length===2?this._dispatchParameterNumberEvent("rpn",this._rpnBuffer[0].dataBytes[1],this._rpnBuffer[1].dataBytes[1],e):this._nrpnBuffer.length===2?this._dispatchParameterNumberEvent("nrpn",this._nrpnBuffer[0].dataBytes[1],this._nrpnBuffer[1].dataBytes[1],e):(this._nrpnBuffer=[],this._rpnBuffer=[]))}_isRpnOrNrpnController(e){return e===a.MIDI_CONTROL_CHANGE_MESSAGES.dataentrycoarse||e===a.MIDI_CONTROL_CHANGE_MESSAGES.dataentryfine||e===a.MIDI_CONTROL_CHANGE_MESSAGES.databuttonincrement||e===a.MIDI_CONTROL_CHANGE_MESSAGES.databuttondecrement||e===a.MIDI_CONTROL_CHANGE_MESSAGES.nonregisteredparametercoarse||e===a.MIDI_CONTROL_CHANGE_MESSAGES.nonregisteredparameterfine||e===a.MIDI_CONTROL_CHANGE_MESSAGES.registeredparametercoarse||e===a.MIDI_CONTROL_CHANGE_MESSAGES.registeredparameterfine}_dispatchParameterNumberEvent(e,t,n,s){e=e==="nrpn"?"nrpn":"rpn";const i={target:s.target,timestamp:s.timestamp,message:s.message,parameterMsb:t,parameterLsb:n,value:l.from7bitToFloat(s.message.dataBytes[1]),rawValue:s.message.dataBytes[1]};i.parameter=e==="rpn"?Object.keys(a.MIDI_REGISTERED_PARAMETERS).find(d=>a.MIDI_REGISTERED_PARAMETERS[d][0]===t&&a.MIDI_REGISTERED_PARAMETERS[d][1]===n):(t<<7)+n;const o=l.getPropertyByValue(a.MIDI_CONTROL_CHANGE_MESSAGES,s.message.dataBytes[0]);i.type=`${e}-${o}`,this.emit(i.type,i),i.type=e,i.subtype=o,this.emit(i.type,i)}getChannelModeByNumber(e){return c.validation&&(console.warn("The 'getChannelModeByNumber()' method has been moved to the 'Utilities' class."),e=Math.floor(e)),l.getChannelModeByNumber(e)}getCcNameByNumber(e){if(c.validation&&(console.warn("The 'getCcNameByNumber()' method has been moved to the 'Utilities' class."),!((e=parseInt(e))>=0&&e<=127)))throw new RangeError("Invalid control change number.");return l.getCcNameByNumber(e)}getNoteState(e){e instanceof z&&(e=e.identifier);const t=l.guessNoteNumber(e,c.octaveOffset+this.input.octaveOffset+this.octaveOffset);return this.notesState[t]}get octaveOffset(){return this._octaveOffset}set octaveOffset(e){if(this.validation&&(e=parseInt(e),isNaN(e)))throw new TypeError("The 'octaveOffset' property must be an integer.");this._octaveOffset=e}get input(){return this._input}get number(){return this._number}get nrpnEventsEnabled(){return this.parameterNumberEventsEnabled}set nrpnEventsEnabled(e){this.validation&&(e=!!e),this.parameterNumberEventsEnabled=e}}/**
 * The `Message` class represents a single MIDI message. It has several properties that make it
 * easy to make sense of the binary data it contains.
 *
 * @license Apache-2.0
 * @since 3.0.0
 */class it{constructor(e){this.rawData=e,this.data=Array.from(this.rawData),this.statusByte=this.rawData[0],this.rawDataBytes=this.rawData.slice(1),this.dataBytes=this.data.slice(1),this.isChannelMessage=!1,this.isSystemMessage=!1,this.command=void 0,this.channel=void 0,this.manufacturerId=void 0,this.type=void 0,this.statusByte<240?(this.isChannelMessage=!0,this.command=this.statusByte>>4,this.channel=1+(15&this.statusByte)):(this.isSystemMessage=!0,this.command=this.statusByte),this.isChannelMessage?this.type=l.getPropertyByValue(a.MIDI_CHANNEL_MESSAGES,this.command):this.isSystemMessage&&(this.type=l.getPropertyByValue(a.MIDI_SYSTEM_MESSAGES,this.command)),this.statusByte===a.MIDI_SYSTEM_MESSAGES.sysex&&(this.dataBytes[0]===0?(this.manufacturerId=this.dataBytes.slice(0,3),this.dataBytes=this.dataBytes.slice(3,this.rawDataBytes.length-1),this.rawDataBytes=this.rawDataBytes.slice(3,this.rawDataBytes.length-1)):(this.manufacturerId=[this.dataBytes[0]],this.dataBytes=this.dataBytes.slice(1,this.dataBytes.length-1),this.rawDataBytes=this.rawDataBytes.slice(1,this.rawDataBytes.length-1)))}}/**
 * The `Input` class represents a single MIDI input port. This object is automatically instantiated
 * by the library according to the host's MIDI subsystem and does not need to be directly
 * instantiated. Instead, you can access all `Input` objects by referring to the
 * [`WebMidi.inputs`](WebMidi#inputs) array. You can also retrieve inputs by using methods such as
 * [`WebMidi.getInputByName()`](WebMidi#getInputByName) and
 * [`WebMidi.getInputById()`](WebMidi#getInputById).
 *
 * Note that a single MIDI device may expose several inputs and/or outputs.
 *
 * **Important**: the `Input` class does not directly fire channel-specific MIDI messages
 * (such as [`noteon`](InputChannel#event:noteon) or
 * [`controlchange`](InputChannel#event:controlchange), etc.). The [`InputChannel`](InputChannel)
 * object does that. However, you can still use the
 * [`Input.addListener()`](#addListener) method to listen to channel-specific events on multiple
 * [`InputChannel`](InputChannel) objects at once.
 *
 * @fires Input#opened
 * @fires Input#disconnected
 * @fires Input#closed
 * @fires Input#midimessage
 *
 * @fires Input#sysex
 * @fires Input#timecode
 * @fires Input#songposition
 * @fires Input#songselect
 * @fires Input#tunerequest
 * @fires Input#clock
 * @fires Input#start
 * @fires Input#continue
 * @fires Input#stop
 * @fires Input#activesensing
 * @fires Input#reset
 *
 * @fires Input#unknownmidimessage
 *
 * @extends EventEmitter
 * @license Apache-2.0
 */class tn extends D{constructor(e){super(),this._midiInput=e,this._octaveOffset=0,this.channels=[];for(let t=1;t<=16;t++)this.channels[t]=new en(this,t);this._forwarders=[],this._midiInput.onstatechange=this._onStateChange.bind(this),this._midiInput.onmidimessage=this._onMidiMessage.bind(this)}async destroy(){this.removeListener(),this.channels.forEach(e=>e.destroy()),this.channels=[],this._forwarders=[],this._midiInput&&(this._midiInput.onstatechange=null,this._midiInput.onmidimessage=null),await this.close(),this._midiInput=null}_onStateChange(e){let t={timestamp:c.time,target:this,port:this};e.port.connection==="open"?(t.type="opened",this.emit("opened",t)):e.port.connection==="closed"&&e.port.state==="connected"?(t.type="closed",this.emit("closed",t)):e.port.connection==="closed"&&e.port.state==="disconnected"?(t.type="disconnected",t.port={connection:e.port.connection,id:e.port.id,manufacturer:e.port.manufacturer,name:e.port.name,state:e.port.state,type:e.port.type},this.emit("disconnected",t)):e.port.connection==="pending"&&e.port.state==="disconnected"||console.warn("This statechange event was not caught: ",e.port.connection,e.port.state)}_onMidiMessage(e){const t=new it(e.data),n={port:this,target:this,message:t,timestamp:e.timeStamp,type:"midimessage",data:t.data,rawData:t.data,statusByte:t.data[0],dataBytes:t.dataBytes};this.emit("midimessage",n),t.isSystemMessage?this._parseEvent(n):t.isChannelMessage&&this.channels[t.channel]._processMidiMessageEvent(n),this._forwarders.forEach(s=>s.forward(t))}_parseEvent(e){const t=Object.assign({},e);t.type=t.message.type||"unknownmidimessage",t.type==="songselect"&&(t.song=e.data[1]+1,t.value=e.data[1],t.rawValue=t.value),this.emit(t.type,t)}async open(){try{await this._midiInput.open()}catch(e){return Promise.reject(e)}return Promise.resolve(this)}async close(){if(!this._midiInput)return Promise.resolve(this);try{await this._midiInput.close()}catch(e){return Promise.reject(e)}return Promise.resolve(this)}getChannelModeByNumber(){c.validation&&console.warn("The 'getChannelModeByNumber()' method has been moved to the 'Utilities' class.")}addListener(e,t,n={}){if(c.validation&&typeof n=="function"){let s=t!=null?[].concat(t):void 0;t=n,n={channels:s}}if(a.CHANNEL_EVENTS.includes(e)){n.channels===void 0&&(n.channels=a.MIDI_CHANNEL_NUMBERS);let s=[];return l.sanitizeChannels(n.channels).forEach(i=>{s.push(this.channels[i].addListener(e,t,n))}),s}return super.addListener(e,t,n)}addOneTimeListener(e,t,n={}){return n.remaining=1,this.addListener(e,t,n)}on(e,t,n,s){return this.addListener(e,t,n,s)}hasListener(e,t,n={}){if(c.validation&&typeof n=="function"){let s=[].concat(t);t=n,n={channels:s}}return a.CHANNEL_EVENTS.includes(e)?(n.channels===void 0&&(n.channels=a.MIDI_CHANNEL_NUMBERS),l.sanitizeChannels(n.channels).every(s=>this.channels[s].hasListener(e,t))):super.hasListener(e,t)}removeListener(e,t,n={}){if(c.validation&&typeof n=="function"){let s=[].concat(t);t=n,n={channels:s}}if(n.channels===void 0&&(n.channels=a.MIDI_CHANNEL_NUMBERS),e==null)return l.sanitizeChannels(n.channels).forEach(s=>{this.channels[s]&&this.channels[s].removeListener()}),super.removeListener();a.CHANNEL_EVENTS.includes(e)?l.sanitizeChannels(n.channels).forEach(s=>{this.channels[s].removeListener(e,t,n)}):super.removeListener(e,t,n)}addForwarder(e,t={}){let n;return n=e instanceof We?e:new We(e,t),this._forwarders.push(n),n}removeForwarder(e){this._forwarders=this._forwarders.filter(t=>t!==e)}hasForwarder(e){return this._forwarders.includes(e)}get name(){return this._midiInput.name}get id(){return this._midiInput.id}get connection(){return this._midiInput.connection}get manufacturer(){return this._midiInput.manufacturer}get octaveOffset(){return this._octaveOffset}set octaveOffset(e){if(this.validation&&(e=parseInt(e),isNaN(e)))throw new TypeError("The 'octaveOffset' property must be an integer.");this._octaveOffset=e}get state(){return this._midiInput.state}get type(){return this._midiInput.type}get nrpnEventsEnabled(){return c.validation&&console.warn("The 'nrpnEventsEnabled' property has been moved to the 'InputChannel' class."),!1}}/**
 * The `WebMidi` object makes it easier to work with the low-level Web MIDI API. Basically, it
 * simplifies sending outgoing MIDI messages and reacting to incoming MIDI messages.
 *
 * When using the WebMidi.js library, you should know that the `WebMidi` class has already been
 * instantiated. You cannot instantiate it yourself. If you use the **IIFE** version, you should
 * simply use the global object called `WebMidi`. If you use the **CJS** (CommonJS) or **ESM** (ES6
 * module) version, you get an already-instantiated object when you import the module.
 *
 * @fires WebMidi#connected
 * @fires WebMidi#disabled
 * @fires WebMidi#disconnected
 * @fires WebMidi#enabled
 * @fires WebMidi#error
 * @fires WebMidi#midiaccessgranted
 * @fires WebMidi#portschanged
 *
 * @extends EventEmitter
 * @license Apache-2.0
 */const c=new class extends D{constructor(){super(),this.defaults={note:{attack:l.from7bitToFloat(64),release:l.from7bitToFloat(64),duration:1/0}},this.interface=null,this.validation=!0,this._inputs=[],this._disconnectedInputs=[],this._outputs=[],this._disconnectedOutputs=[],this._stateChangeQueue=[],this._octaveOffset=0}async enable(r={},e=!1){if(l.isNode){try{window.navigator}catch{global.navigator=await Object.getPrototypeOf(async function(){}).constructor(`
        let jzz = await import("jzz");
        return jzz.default;
        `)()}try{}catch{global.performance=await Object.getPrototypeOf(async function(){}).constructor(`
        let perf_hooks = await import("perf_hooks");
        return perf_hooks.performance;
        `)()}}if(this.validation=r.validation!==!1,this.validation&&(typeof r=="function"&&(r={callback:r,sysex:e}),e&&(r.sysex=!0)),this.enabled)return typeof r.callback=="function"&&r.callback(),Promise.resolve();const t={timestamp:this.time,target:this,type:"error",error:void 0},n={timestamp:this.time,target:this,type:"midiaccessgranted"},s={timestamp:this.time,target:this,type:"enabled"};try{typeof r.requestMIDIAccessFunction=="function"?this.interface=await r.requestMIDIAccessFunction({sysex:r.sysex,software:r.software}):this.interface=await navigator.requestMIDIAccess({sysex:r.sysex,software:r.software})}catch(i){return t.error=i,this.emit("error",t),typeof r.callback=="function"&&r.callback(i),Promise.reject(i)}this.emit("midiaccessgranted",n),this.interface.onstatechange=this._onInterfaceStateChange.bind(this);try{await this._updateInputsAndOutputs()}catch(i){return t.error=i,this.emit("error",t),typeof r.callback=="function"&&r.callback(i),Promise.reject(i)}return this.emit("enabled",s),typeof r.callback=="function"&&r.callback(),Promise.resolve(this)}async disable(){return this._destroyInputsAndOutputs().then(()=>{navigator&&typeof navigator.close=="function"&&navigator.close(),this.interface&&(this.interface.onstatechange=void 0),this.interface=null;let r={timestamp:this.time,target:this,type:"disabled"};this.emit("disabled",r),this.removeListener()})}getInputById(r,e={disconnected:!1}){if(this.validation){if(!this.enabled)throw new Error("WebMidi is not enabled.");if(!r)return}if(e.disconnected){for(let t=0;t<this._disconnectedInputs.length;t++)if(this._disconnectedInputs[t].id===r.toString())return this._disconnectedInputs[t]}else for(let t=0;t<this.inputs.length;t++)if(this.inputs[t].id===r.toString())return this.inputs[t]}getInputByName(r,e={disconnected:!1}){if(this.validation){if(!this.enabled)throw new Error("WebMidi is not enabled.");if(!r)return;r=r.toString()}if(e.disconnected){for(let t=0;t<this._disconnectedInputs.length;t++)if(~this._disconnectedInputs[t].name.indexOf(r))return this._disconnectedInputs[t]}else for(let t=0;t<this.inputs.length;t++)if(~this.inputs[t].name.indexOf(r))return this.inputs[t]}getOutputByName(r,e={disconnected:!1}){if(this.validation){if(!this.enabled)throw new Error("WebMidi is not enabled.");if(!r)return;r=r.toString()}if(e.disconnected){for(let t=0;t<this._disconnectedOutputs.length;t++)if(~this._disconnectedOutputs[t].name.indexOf(r))return this._disconnectedOutputs[t]}else for(let t=0;t<this.outputs.length;t++)if(~this.outputs[t].name.indexOf(r))return this.outputs[t]}getOutputById(r,e={disconnected:!1}){if(this.validation){if(!this.enabled)throw new Error("WebMidi is not enabled.");if(!r)return}if(e.disconnected){for(let t=0;t<this._disconnectedOutputs.length;t++)if(this._disconnectedOutputs[t].id===r.toString())return this._disconnectedOutputs[t]}else for(let t=0;t<this.outputs.length;t++)if(this.outputs[t].id===r.toString())return this.outputs[t]}noteNameToNumber(r){return this.validation&&console.warn("The noteNameToNumber() method is deprecated. Use Utilities.toNoteNumber() instead."),l.toNoteNumber(r,this.octaveOffset)}getOctave(r){return this.validation&&(console.warn("The getOctave()is deprecated. Use Utilities.getNoteDetails() instead"),r=parseInt(r)),!isNaN(r)&&r>=0&&r<=127&&l.getNoteDetails(l.offsetNumber(r,this.octaveOffset)).octave}sanitizeChannels(r){return this.validation&&console.warn("The sanitizeChannels() method has been moved to the utilities class."),l.sanitizeChannels(r)}toMIDIChannels(r){return this.validation&&console.warn("The toMIDIChannels() method has been deprecated. Use Utilities.sanitizeChannels() instead."),l.sanitizeChannels(r)}guessNoteNumber(r){return this.validation&&console.warn("The guessNoteNumber() method has been deprecated. Use Utilities.guessNoteNumber() instead."),l.guessNoteNumber(r,this.octaveOffset)}getValidNoteArray(r,e={}){return this.validation&&console.warn("The getValidNoteArray() method has been moved to the Utilities.buildNoteArray()"),l.buildNoteArray(r,e)}convertToTimestamp(r){return this.validation&&console.warn("The convertToTimestamp() method has been moved to Utilities.toTimestamp()."),l.toTimestamp(r)}async _destroyInputsAndOutputs(){let r=[];return this.inputs.forEach(e=>r.push(e.destroy())),this.outputs.forEach(e=>r.push(e.destroy())),Promise.all(r).then(()=>{this._inputs=[],this._outputs=[]})}_onInterfaceStateChange(r){this._updateInputsAndOutputs();let e={timestamp:r.timeStamp,type:r.port.state,target:this};if(r.port.state==="connected"&&r.port.connection==="open"){r.port.type==="output"?e.port=this.getOutputById(r.port.id):r.port.type==="input"&&(e.port=this.getInputById(r.port.id)),this.emit(r.port.state,e);const t=Object.assign({},e);t.type="portschanged",this.emit(t.type,t)}else if(r.port.state==="disconnected"&&r.port.connection==="pending"){r.port.type==="input"?e.port=this.getInputById(r.port.id,{disconnected:!0}):r.port.type==="output"&&(e.port=this.getOutputById(r.port.id,{disconnected:!0})),this.emit(r.port.state,e);const t=Object.assign({},e);t.type="portschanged",this.emit(t.type,t)}}async _updateInputsAndOutputs(){return Promise.all([this._updateInputs(),this._updateOutputs()])}async _updateInputs(){if(!this.interface)return;for(let e=this._inputs.length-1;e>=0;e--){const t=this._inputs[e];Array.from(this.interface.inputs.values()).find(n=>n===t._midiInput)||(this._disconnectedInputs.push(t),this._inputs.splice(e,1))}let r=[];return this.interface.inputs.forEach(e=>{if(!this._inputs.find(t=>t._midiInput===e)){let t=this._disconnectedInputs.find(n=>n._midiInput===e);t||(t=new tn(e)),this._inputs.push(t),r.push(t.open())}}),Promise.all(r)}async _updateOutputs(){if(!this.interface)return;for(let e=this._outputs.length-1;e>=0;e--){const t=this._outputs[e];Array.from(this.interface.outputs.values()).find(n=>n===t._midiOutput)||(this._disconnectedOutputs.push(t),this._outputs.splice(e,1))}let r=[];return this.interface.outputs.forEach(e=>{if(!this._outputs.find(t=>t._midiOutput===e)){let t=this._disconnectedOutputs.find(n=>n._midiOutput===e);t||(t=new _e(e)),this._outputs.push(t),r.push(t.open())}}),Promise.all(r)}get enabled(){return this.interface!==null}get inputs(){return this._inputs}get isNode(){return this.validation&&console.warn("WebMidi.isNode has been deprecated. Use Utilities.isNode instead."),l.isNode}get isBrowser(){return this.validation&&console.warn("WebMidi.isBrowser has been deprecated. Use Utilities.isBrowser instead."),l.isBrowser}get octaveOffset(){return this._octaveOffset}set octaveOffset(r){if(this.validation&&(r=parseInt(r),isNaN(r)))throw new TypeError("The 'octaveOffset' property must be an integer.");this._octaveOffset=r}get outputs(){return this._outputs}get supported(){return typeof navigator<"u"&&navigator.requestMIDIAccess}get sysexEnabled(){return!(!this.interface||!this.interface.sysexEnabled)}get time(){return performance.now()}get version(){return"3.0.21"}get CHANNEL_EVENTS(){return this.validation&&console.warn("The CHANNEL_EVENTS enum has been moved to Enumerations.CHANNEL_EVENTS."),a.CHANNEL_EVENTS}get MIDI_SYSTEM_MESSAGES(){return this.validation&&console.warn("The MIDI_SYSTEM_MESSAGES enum has been moved to Enumerations.MIDI_SYSTEM_MESSAGES."),a.MIDI_SYSTEM_MESSAGES}get MIDI_CHANNEL_MODE_MESSAGES(){return this.validation&&console.warn("The MIDI_CHANNEL_MODE_MESSAGES enum has been moved to Enumerations.MIDI_CHANNEL_MODE_MESSAGES."),a.MIDI_CHANNEL_MODE_MESSAGES}get MIDI_CONTROL_CHANGE_MESSAGES(){return this.validation&&console.warn("The MIDI_CONTROL_CHANGE_MESSAGES enum has been moved to Enumerations.MIDI_CONTROL_CHANGE_MESSAGES."),a.MIDI_CONTROL_CHANGE_MESSAGES}get MIDI_REGISTERED_PARAMETER(){return this.validation&&console.warn("The MIDI_REGISTERED_PARAMETER enum has been moved to Enumerations.MIDI_REGISTERED_PARAMETERS."),this.MIDI_REGISTERED_PARAMETERS}get NOTES(){return this.validation&&console.warn("The NOTES enum has been deprecated."),["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"]}};c.constructor=null;async function nn(){return await c.enable()}async function rn(){try{await nn()}catch(e){return console.log(e),()=>()=>{}}console.log(c);const r=new ye;for(const e of c.inputs)e.addListener("controlchange",t=>{r.emit({id:`${e.id}.${t.type}.${t.controller.number}`,value:ge(t.value)})}),e.addListener("pitchbend",t=>{r.emit({id:`${e.id}.${t.type}`,value:X(-1,1,0,1,ge(t.value))})}),e.addListener("noteon",t=>{r.emit({id:`${e.id}.note.${t.note.number}`,value:ge(t.value)})}),e.addListener("noteoff",t=>{r.emit({id:`${e.id}.note.${t.note.number}`,value:0})});return e=>r.listen(e)}class sn{constructor(e=32){this.start=0,this.end=0,this.buffer=q(Math.max(e,1),()=>null)}resize(e){const t=this.length;this.buffer=q(e,n=>n<t?this.get(n):null),this.start=0,this.end=t}growForInsertIfNeeded(){this.length>=this.capacity-1&&this.resize(this.capacity*2)}get length(){return this.start<=this.end?this.end-this.start:this.end+this.buffer.length-this.start}get capacity(){return this.buffer.length}get(e){return this.buffer[(this.start+e)%this.capacity]}push(e){this.growForInsertIfNeeded(),this.buffer[this.end]=e,this.end=(this.end+1)%this.capacity}pop(){if(this.end===this.start)return null;this.end===0?this.end=this.capacity-1:this.end=this.end-1;const e=this.buffer[this.end];return this.buffer[this.end]=null,e}unshift(e){this.growForInsertIfNeeded(),this.start===0?this.start=this.capacity-1:this.start=this.start-1,this.buffer[this.start]=e}shift(){if(this.end===this.start)return null;const e=this.buffer[this.start];return this.buffer[this.start]=null,this.start=(this.start+1)%this.capacity,e}first(){return this.get(0)}last(){return this.get(this.length-1)}}class at{constructor(e){this.manager=e,this.currentValue=null}debug(e){return e!==null&&this.manager.debug(e,this),this}clear(){this.currentValue=null}read(){return this.currentValue===null&&(this.currentValue=this.update()),this.currentValue}}class ot extends at{constructor(e,t){super(e),this.value=t}update(){return this.value}set(e){this.value=e}}function Ke(r,e){return e?tt(e[0],e[1],r):r}class lt extends ot{constructor(e,t,n,s){super(e,Ke(et(`signalSetting.${t}`,n),s)),this.key=t,this.saveDebounced=Ot(200,i=>nt(`signalSetting.${this.key}`,i)),this.range=s||null}set(e){e=Ke(e,this.range),super.set(e),this.saveDebounced(e)}}class an extends at{constructor(e,t){super(e),this.compute=t}update(){return this.compute()}}class on{constructor(){this.debugSignalsByName={},this.debugSignalsChangeEvent=new ye,this.updateEvent=new ye,this.signals=new Set,this.driver=this.controlled(0).debug("internal.driver")}onDebugSignalsChange(e){return this.debugSignalsChangeEvent.listen(e)}onUpdate(e){return this.updateEvent.listen(e)}update(e){this.driver.set(Math.min(e,.03));for(const t of this.signals)t.clear();for(const t of this.signals)t.read();this.updateEvent.emit()}controlled(e){return this.addSignal(new ot(this,e))}computed(e){return this.addSignal(new an(this,e))}input(e,t,n){return this.addSignal(new lt(this,e,t,n)).debug(e)}sin({min:e=0,max:t=1,frequency:n=1,driver:s=this.driver,offset:i=0}={}){const o=this.toSignal(e),d=this.toSignal(t),h=this.toSignal(n),u=this.toSignal(i);let p=0;return this.computed(()=>{const v=h.read();return p+=s.read()*v,X(-1,1,o.read(),d.read(),Math.cos((u.read()+p)*Math.PI*2))})}spring(e){var h,u,p;const t=e.target,n=(h=e.driver)!=null?h:this.driver,s=this.toSignal((u=e.tension)!=null?u:230),i=this.toSignal((p=e.friction)!=null?p:22);let o=t.read(),d=0;return this.computed(()=>{const v=t.read(),m=n.read(),f=s.read(),E=i.read();let g=o,_=d;const S=d,M=f*(v-g)-E*d;g=o+S*m*.5,_=d+M*m*.5;const C=_,O=f*(v-g)-E*_;g=o+C*m*.5,_=d+O*m*.5;const x=_,W=f*(v-g)-E*_;g=o+x*m,_=d+W*m;const J=_,Z=f*(v-g)-E*_,de=1/6*(S+2*(C+x)+J),ue=1/6*(M+2*(O+W)+Z);return o+=de*m,d+=ue*m,o})}add(e,t){const n=this.toSignal(e),s=this.toSignal(t);return this.computed(()=>n.read()+s.read())}subtract(e,t){const n=this.toSignal(e),s=this.toSignal(t);return this.computed(()=>n.read()-s.read())}multiply(e,t){const n=this.toSignal(e),s=this.toSignal(t);return this.computed(()=>n.read()*s.read())}divide(e,t){const n=this.toSignal(e),s=this.toSignal(t);return this.computed(()=>n.read()/s.read())}switch(e,t,n){const s=this.toSignal(e),i=this.toSignal(t),o=this.toSignal(n);return this.computed(()=>s.read()?i.read():o.read())}adsr({target:e,attack:t=0,delay:n=0,sustain:s=1,release:i=0,driver:o=this.driver}){const d=this.toSignal(t),h=this.toSignal(n),u=this.toSignal(s),p=this.toSignal(i);let v;(g=>{g[g.Off=0]="Off",g[g.Attacking=1]="Attacking",g[g.Holding=2]="Holding",g[g.Releasing=3]="Releasing"})(v||(v={}));let m=0,f=0,E=0;return this.computed(()=>{const g=e.read();if(g!==0){if((m===0||m===3)&&(d.read()===0?m=2:m=1),m===1&&(f+=g/d.read()*o.read(),f>=g&&(m=2)),m===2){const S=g*u.read();h.read()===0?f=S:f=tt(S,g,f+(S-g)/h.read()*o.read())}}else(m===1||m===2)&&(f===0?m=0:(E=f,m=3)),m===3&&(f-=E/p.read()*o.read(),f<=0&&(f=0,m=0)),m===0&&(f=0);return f})}easeExponential({target:e,rate:t=.1}){const n=this.toSignal(t);let s=e.read();return this.computed(()=>(s+=(e.read()-s)*n.read(),s))}lerp(e,t,n){const s=this.toSignal(e),i=this.toSignal(t),o=this.toSignal(n);return this.computed(()=>Dt(s.read(),i.read(),o.read()))}delay({target:e,amount:t=0,driver:n=this.driver}){const s=this.toSignal(t);console.log(s.read());const i=new sn(s.read()*1.2/(1/60));let o=0,d=e.read();return this.computed(()=>{o+=n.read();const h=s.read();i.push({time:o,value:e.read()});let u=null;for(;(u=i.first())&&u.time+h<=o;)d=u.value,i.shift();return d})}debug(e,t){Q(this.signals.has(t),`signal called ${e} does not belong to this signal manager`);const n=Bt(this.debugSignalsByName,e)?[...this.debugSignalsByName[e],t]:[t];this.debugSignalsByName={...this.debugSignalsByName,[e]:n},this.debugSignalsChangeEvent.emit()}addSignal(e){return this.signals.add(e),e}toSignal(e){return typeof e=="number"?this.controlled(e):e}}var Me={exports:{}},ct={},ht={exports:{}},dt={};/**
 * @license React
 * use-sync-external-store-shim.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Y=b.exports;function ln(r,e){return r===e&&(r!==0||1/r===1/e)||r!==r&&e!==e}var cn=typeof Object.is=="function"?Object.is:ln,hn=Y.useState,dn=Y.useEffect,un=Y.useLayoutEffect,fn=Y.useDebugValue;function pn(r,e){var t=e(),n=hn({inst:{value:t,getSnapshot:e}}),s=n[0].inst,i=n[1];return un(function(){s.value=t,s.getSnapshot=e,Ee(s)&&i({inst:s})},[r,t,e]),dn(function(){return Ee(s)&&i({inst:s}),r(function(){Ee(s)&&i({inst:s})})},[r]),fn(t),t}function Ee(r){var e=r.getSnapshot;r=r.value;try{var t=e();return!cn(r,t)}catch{return!0}}function mn(r,e){return e()}var gn=typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"?mn:pn;dt.useSyncExternalStore=Y.useSyncExternalStore!==void 0?Y.useSyncExternalStore:gn;(function(r){r.exports=dt})(ht);/**
 * @license React
 * use-subscription.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var vn=ht.exports;ct.useSubscription=function(r){return vn.useSyncExternalStore(r.subscribe,r.getCurrentValue)};(function(r){r.exports=ct})(Me);function Ae(r,e){const[t,n]=b.exports.useState(()=>et(r,e));return[t,i=>{try{const o=i instanceof Function?i(t):i;n(o),nt(r,o)}catch(o){console.log(o)}}]}const En={position:"fixed",top:0,left:0,width:"100%",height:"100%",zIndex:"100000",touchAction:"none"};class ut{constructor({down:e,move:t,up:n,debug:s,cursor:i}){this.attachedTo=null,this.onDown=e,this.onMove=t,this.onUp=n;const o=document.createElement("div");o.setAttribute("touch-action","none"),Object.assign(o.style,En),s&&(o.style.background="rgba(0, 255, 0, 0.3)"),i&&(o.style.cursor=i),this.cover=o}attach(){const e=document.body;!this.attachedTo&&e&&(this.attachedTo=e,this.attachedTo.appendChild(this.cover),this.attachEvents())}remove(){this.attachedTo&&(this.attachedTo.removeChild(this.cover),this.attachedTo=null,this.removeEvents())}attachEvents(){this.onDown&&window.addEventListener("mousedown",this.onDown,!1),this.onMove&&window.addEventListener("mousemove",this.onMove,!1),this.onUp&&window.addEventListener("mouseup",this.onUp,!1)}removeEvents(){this.onDown&&window.removeEventListener("mousedown",this.onDown),this.onMove&&window.removeEventListener("mousemove",this.onMove),this.onUp&&window.removeEventListener("mouseup",this.onUp)}}function se(r){return Me.exports.useSubscription(b.exports.useMemo(()=>({getCurrentValue:()=>r.read(),subscribe:e=>r.manager.onUpdate(e)}),[r]))}const be=(r,e)=>{const t=r.toString().split(".");if(t.length===1)return t[0];if(t.length===2){if(t[0].length>=e)return t[0];{const n=e-t[0].length;return`${t[0]}.${t[1].slice(0,n)}`}}throw new Error(`unexpected number of value parts: ${t.length}`)},ft=b.exports.memo(function({signal:e,className:t}){const n=se(e);return w("div",{className:Se("text-gray-400",t),children:be(n,5)})}),yn=b.exports.memo(function({signals:e,width:t}){let[{lines:i,min:o,max:d},h]=b.exports.useState(()=>{const p=e.map(v=>v.read());return{lines:p.map(v=>[v]),min:Math.min(...p),max:Math.max(...p)}});b.exports.useEffect(()=>e[0].manager.onUpdate(()=>{const p=e.map(v=>v.read());h(v=>({lines:v.lines.map((m,f)=>[p[f],...m.slice(0,t-1)]),min:Math.min(v.min,...p),max:Math.max(v.max,...p)}))}),[e,t]);const u=Math.round(t/2);return o===d&&(o=o-.1,d=d+.1),B("svg",{width:t,height:u,children:[w("text",{x:t-8,y:8+8,fill:"#cbd5e0",fontSize:8,textAnchor:"end",children:be(d,5)}),w("text",{x:t-8,y:u-8,fill:"#cbd5e0",fontSize:8,textAnchor:"end",children:be(o,5)}),i.map((p,v)=>{const m=[];for(let f=0;f<p.length;f++){const E=f===0?"M":"L";m.push(`${E} ${t-f} ${X(o,d,u-8,8,p[f]).toFixed(1)}`)}return w("path",{d:m.join(" "),stroke:"#cbd5e0",strokeWidth:1,fill:"none"},v)})]})});function _n({name:r,signal:e,listenToMidi:t}){const[n,s]=b.exports.useState(!1),[i,o]=Ae(`midiControlForSignal.${r}`,null);b.exports.useEffect(()=>t(({id:u,value:p})=>{!e.range||(n?(o(u),s(!1),e.set(X(0,1,e.range[0],e.range[1],p))):u===i&&e.set(X(0,1,e.range[0],e.range[1],p)))}),[t,e,n,i,o]);function d(u){u.stopPropagation(),i===null?s(!n):o(null)}function h(u){u.preventDefault();const p=u.screenY,v=e.read(),m=e.range?Math.abs(e.range[1]-e.range[0])/250:Math.abs(v===0?.1:v*.01),f=g=>{const _=(p-g)*m;e.set(v+_)},E=new ut({move:g=>{f(g.screenY)},up:g=>{f(g.screenY),E.remove()},cursor:"ns-resize"});E.attach()}return B(Ie,{children:[e.range&&w("div",{className:Se("cursor-pointer px-1 py-1",n?"text-gray-100":i!==null?"text-gray-300":"text-gray-500 hover:text-gray-300"),onClick:d,children:n?"\u25CE":i!==null?"\u25C9":"\u25CB"}),B("div",{className:"cursor-move py-1 pr-2 pl-1",style:{cursor:"ns-resize"},onMouseDown:h,children:["\u2195",w(ft,{signal:e,className:"inline-block pl-1"})]})]})}const pt=b.exports.memo(function({signals:e,name:t,displayName:n=t,width:s,listenToMidi:i}){const[o,d]=Ae(`signal.${t}`,!1),h=e.filter(u=>u instanceof lt);return B("div",{className:"border-t border-gray-700 text-xs",children:[B("div",{className:"flex cursor-pointer hover:bg-gray-800",onClick:()=>d(!o),children:[w("div",{className:"flex-auto whitespace-pre px-2 py-1",children:n}),h.length?w(_n,{name:t,signal:h[0],listenToMidi:i}):w(ft,{signal:e[0],className:"px-2 py-1"})]}),o&&w(yn,{signals:e,width:s})]})});function bn({groupName:r,signalNamePairs:e,width:t,listenToMidi:n}){const[s,i]=Ae(`group.${r}`,!1);return B("div",{className:"border-t border-gray-700 text-xs",children:[B("div",{className:"flex cursor-pointer px-2 py-1 hover:bg-gray-800",onClick:()=>i(!s),children:[w("div",{className:"flex-auto",children:r}),w("div",{className:"text-gray-600",children:s?"\u25BD":"\u25B7"})]}),s&&w(Ie,{children:e.map(([o,d])=>w(pt,{name:o,displayName:`  ${o.slice(r.length+1)}`,signals:d,width:t,listenToMidi:n},o))})]})}const wn=b.exports.memo(function({signalManager:e,width:t,listenToMidi:n}){const s=Me.exports.useSubscription(b.exports.useMemo(()=>({getCurrentValue:()=>e.debugSignalsByName,subscribe:u=>e.onDebugSignalsChange(u)}),[e])),i=xt(Object.entries(s).filter(([u])=>!u.startsWith("_")),u=>u[0]),[o,d]=Lt(i,([u])=>u.includes(".")),h=Pt(o,([u])=>{const p=u.indexOf(".");return Q(p!==-1),u.slice(0,p)});return B("div",{className:"absolute right-0 top-0 bottom-0 h-full overflow-auto border-l border-gray-600 text-sm",style:{width:t},children:[w("div",{className:"py-1 px-2",children:"signals"}),Array.from(h).map(([u,p])=>w(bn,{groupName:u,signalNamePairs:p,width:t-1,listenToMidi:n},u)),d.map(([u,p])=>w(pt,{name:u,signals:p,width:t-1,listenToMidi:n},u))]})});var mt=function(){if(typeof Map<"u")return Map;function r(e,t){var n=-1;return e.some(function(s,i){return s[0]===t?(n=i,!0):!1}),n}return function(){function e(){this.__entries__=[]}return Object.defineProperty(e.prototype,"size",{get:function(){return this.__entries__.length},enumerable:!0,configurable:!0}),e.prototype.get=function(t){var n=r(this.__entries__,t),s=this.__entries__[n];return s&&s[1]},e.prototype.set=function(t,n){var s=r(this.__entries__,t);~s?this.__entries__[s][1]=n:this.__entries__.push([t,n])},e.prototype.delete=function(t){var n=this.__entries__,s=r(n,t);~s&&n.splice(s,1)},e.prototype.has=function(t){return!!~r(this.__entries__,t)},e.prototype.clear=function(){this.__entries__.splice(0)},e.prototype.forEach=function(t,n){n===void 0&&(n=null);for(var s=0,i=this.__entries__;s<i.length;s++){var o=i[s];t.call(n,o[1],o[0])}},e}()}(),we=typeof window<"u"&&typeof document<"u"&&window.document===document,ie=function(){return typeof global<"u"&&global.Math===Math?global:typeof self<"u"&&self.Math===Math?self:typeof window<"u"&&window.Math===Math?window:Function("return this")()}(),Nn=function(){return typeof requestAnimationFrame=="function"?requestAnimationFrame.bind(ie):function(r){return setTimeout(function(){return r(Date.now())},1e3/60)}}(),Sn=2;function In(r,e){var t=!1,n=!1,s=0;function i(){t&&(t=!1,r()),n&&d()}function o(){Nn(i)}function d(){var h=Date.now();if(t){if(h-s<Sn)return;n=!0}else t=!0,n=!1,setTimeout(o,e);s=h}return d}var Mn=20,An=["top","right","bottom","left","width","height","size","weight"],Rn=typeof MutationObserver<"u",Tn=function(){function r(){this.connected_=!1,this.mutationEventsAdded_=!1,this.mutationsObserver_=null,this.observers_=[],this.onTransitionEnd_=this.onTransitionEnd_.bind(this),this.refresh=In(this.refresh.bind(this),Mn)}return r.prototype.addObserver=function(e){~this.observers_.indexOf(e)||this.observers_.push(e),this.connected_||this.connect_()},r.prototype.removeObserver=function(e){var t=this.observers_,n=t.indexOf(e);~n&&t.splice(n,1),!t.length&&this.connected_&&this.disconnect_()},r.prototype.refresh=function(){var e=this.updateObservers_();e&&this.refresh()},r.prototype.updateObservers_=function(){var e=this.observers_.filter(function(t){return t.gatherActive(),t.hasActive()});return e.forEach(function(t){return t.broadcastActive()}),e.length>0},r.prototype.connect_=function(){!we||this.connected_||(document.addEventListener("transitionend",this.onTransitionEnd_),window.addEventListener("resize",this.refresh),Rn?(this.mutationsObserver_=new MutationObserver(this.refresh),this.mutationsObserver_.observe(document,{attributes:!0,childList:!0,characterData:!0,subtree:!0})):(document.addEventListener("DOMSubtreeModified",this.refresh),this.mutationEventsAdded_=!0),this.connected_=!0)},r.prototype.disconnect_=function(){!we||!this.connected_||(document.removeEventListener("transitionend",this.onTransitionEnd_),window.removeEventListener("resize",this.refresh),this.mutationsObserver_&&this.mutationsObserver_.disconnect(),this.mutationEventsAdded_&&document.removeEventListener("DOMSubtreeModified",this.refresh),this.mutationsObserver_=null,this.mutationEventsAdded_=!1,this.connected_=!1)},r.prototype.onTransitionEnd_=function(e){var t=e.propertyName,n=t===void 0?"":t,s=An.some(function(i){return!!~n.indexOf(i)});s&&this.refresh()},r.getInstance=function(){return this.instance_||(this.instance_=new r),this.instance_},r.instance_=null,r}(),gt=function(r,e){for(var t=0,n=Object.keys(e);t<n.length;t++){var s=n[t];Object.defineProperty(r,s,{value:e[s],enumerable:!1,writable:!1,configurable:!0})}return r},j=function(r){var e=r&&r.ownerDocument&&r.ownerDocument.defaultView;return e||ie},vt=he(0,0,0,0);function ae(r){return parseFloat(r)||0}function $e(r){for(var e=[],t=1;t<arguments.length;t++)e[t-1]=arguments[t];return e.reduce(function(n,s){var i=r["border-"+s+"-width"];return n+ae(i)},0)}function Cn(r){for(var e=["top","right","bottom","left"],t={},n=0,s=e;n<s.length;n++){var i=s[n],o=r["padding-"+i];t[i]=ae(o)}return t}function On(r){var e=r.getBBox();return he(0,0,e.width,e.height)}function Dn(r){var e=r.clientWidth,t=r.clientHeight;if(!e&&!t)return vt;var n=j(r).getComputedStyle(r),s=Cn(n),i=s.left+s.right,o=s.top+s.bottom,d=ae(n.width),h=ae(n.height);if(n.boxSizing==="border-box"&&(Math.round(d+i)!==e&&(d-=$e(n,"left","right")+i),Math.round(h+o)!==t&&(h-=$e(n,"top","bottom")+o)),!xn(r)){var u=Math.round(d+i)-e,p=Math.round(h+o)-t;Math.abs(u)!==1&&(d-=u),Math.abs(p)!==1&&(h-=p)}return he(s.left,s.top,d,h)}var Bn=function(){return typeof SVGGraphicsElement<"u"?function(r){return r instanceof j(r).SVGGraphicsElement}:function(r){return r instanceof j(r).SVGElement&&typeof r.getBBox=="function"}}();function xn(r){return r===j(r).document.documentElement}function Ln(r){return we?Bn(r)?On(r):Dn(r):vt}function Pn(r){var e=r.x,t=r.y,n=r.width,s=r.height,i=typeof DOMRectReadOnly<"u"?DOMRectReadOnly:Object,o=Object.create(i.prototype);return gt(o,{x:e,y:t,width:n,height:s,top:t,right:e+n,bottom:s+t,left:e}),o}function he(r,e,t,n){return{x:r,y:e,width:t,height:n}}var kn=function(){function r(e){this.broadcastWidth=0,this.broadcastHeight=0,this.contentRect_=he(0,0,0,0),this.target=e}return r.prototype.isActive=function(){var e=Ln(this.target);return this.contentRect_=e,e.width!==this.broadcastWidth||e.height!==this.broadcastHeight},r.prototype.broadcastRect=function(){var e=this.contentRect_;return this.broadcastWidth=e.width,this.broadcastHeight=e.height,e},r}(),Hn=function(){function r(e,t){var n=Pn(t);gt(this,{target:e,contentRect:n})}return r}(),Gn=function(){function r(e,t,n){if(this.activeObservations_=[],this.observations_=new mt,typeof e!="function")throw new TypeError("The callback provided as parameter 1 is not a function.");this.callback_=e,this.controller_=t,this.callbackCtx_=n}return r.prototype.observe=function(e){if(!arguments.length)throw new TypeError("1 argument required, but only 0 present.");if(!(typeof Element>"u"||!(Element instanceof Object))){if(!(e instanceof j(e).Element))throw new TypeError('parameter 1 is not of type "Element".');var t=this.observations_;t.has(e)||(t.set(e,new kn(e)),this.controller_.addObserver(this),this.controller_.refresh())}},r.prototype.unobserve=function(e){if(!arguments.length)throw new TypeError("1 argument required, but only 0 present.");if(!(typeof Element>"u"||!(Element instanceof Object))){if(!(e instanceof j(e).Element))throw new TypeError('parameter 1 is not of type "Element".');var t=this.observations_;!t.has(e)||(t.delete(e),t.size||this.controller_.removeObserver(this))}},r.prototype.disconnect=function(){this.clearActive(),this.observations_.clear(),this.controller_.removeObserver(this)},r.prototype.gatherActive=function(){var e=this;this.clearActive(),this.observations_.forEach(function(t){t.isActive()&&e.activeObservations_.push(t)})},r.prototype.broadcastActive=function(){if(!!this.hasActive()){var e=this.callbackCtx_,t=this.activeObservations_.map(function(n){return new Hn(n.target,n.broadcastRect())});this.callback_.call(e,t,e),this.clearActive()}},r.prototype.clearActive=function(){this.activeObservations_.splice(0)},r.prototype.hasActive=function(){return this.activeObservations_.length>0},r}(),Et=typeof WeakMap<"u"?new WeakMap:new mt,yt=function(){function r(e){if(!(this instanceof r))throw new TypeError("Cannot call a class as a function.");if(!arguments.length)throw new TypeError("1 argument required, but only 0 present.");var t=Tn.getInstance(),n=new Gn(e,t,this);Et.set(this,n)}return r}();["observe","unobserve","disconnect"].forEach(function(r){yt.prototype[r]=function(){var e;return(e=Et.get(this))[r].apply(e,arguments)}});var Un=function(){return typeof ie.ResizeObserver<"u"?ie.ResizeObserver:yt}();const qe=300;function Vn({debuggerEnabled:r,signalManager:e,listenToMidi:t,scene:n}){const[s,i]=b.exports.useState(null),o=b.exports.useRef(null),d=b.exports.useRef(null),[h,u]=b.exports.useState({width:100,height:100,devicePixelRatio:1});return b.exports.useEffect(()=>{let p=!1;Q(d.current&&o.current);const v=d.current,m=o.current;u({width:v.clientWidth,height:v.clientHeight,devicePixelRatio:window.devicePixelRatio});const f={width:e.controlled(v.clientWidth).debug("canvas.width"),height:e.controlled(v.clientHeight).debug("canvas.height"),devicePixelRatio:e.controlled(window.devicePixelRatio).debug("canvas.devicePixelRatio"),mouseX:e.controlled(0).debug("canvas.mouseX"),mouseY:e.controlled(0).debug("canvas.mouseY"),mouseDown:e.controlled(0).debug("canvas.mouseDown")},E=new Un(()=>{const M=v.clientWidth,C=v.clientHeight,O=window.devicePixelRatio;f.width.set(M),f.height.set(C),f.devicePixelRatio.set(O),u(x=>x.width!==M||x.height!==C||x.devicePixelRatio!==O?{width:M,height:C,devicePixelRatio:O}:x)});E.observe(v),window.addEventListener("mousemove",M=>{f.mouseX.set(M.clientX),f.mouseY.set(M.clientY)}),m.addEventListener("mousedown",()=>{f.mouseDown.set(1);const M=new ut({up:()=>{f.mouseDown.set(0),M.remove()}});M.attach()});const g=Date.now(),_=n(e,v,f);console.log("get frame loop",Date.now()-g,e.debugSignalsByName.size);let S=0;return kt((M,C)=>{if(p)C();else{const O=M-S;S=M,e.update(O/1e3),_.update&&_.update(),_.draw()}}),i(_.children),()=>{p=!0,E.disconnect()}},[n,e]),B("div",{style:{position:"absolute",top:0,left:0,bottom:0,right:0},children:[B("div",{ref:o,style:{position:"absolute",top:0,left:0,bottom:0,right:r?qe:0},children:[w("canvas",{ref:d,style:{position:"absolute",top:0,left:0,width:"100%",height:"100%",zIndex:10,pointerEvents:"none"},width:h.width*h.devicePixelRatio,height:h.height*h.devicePixelRatio}),s]}),r&&w(wn,{signalManager:e,listenToMidi:t,width:qe})]})}const Fn=b.exports.memo(Vn);async function zn(r,e){const t=await rn(),n=new on,s=document.getElementById("root");Q(s),Ut.exports.render(w(Fn,{debuggerEnabled:e,signalManager:n,listenToMidi:t,scene:r}),s)}const Ne=1300,Xe=1300,Yn=33,jn=72,Wn=!0,F=46,$=F-12,_t=Ne/2,Qe={KeyA:33,KeyS:34,KeyD:35,KeyF:36,KeyG:37,KeyH:38,KeyJ:39,KeyK:40,KeyL:41,Semicolon:42,Quote:43,Backslash:44,KeyQ:45,KeyW:46,KeyE:47,KeyR:48,KeyT:49,KeyY:50,KeyU:51,KeyI:52,KeyO:53,KeyP:54,BracketLeft:55,BracketRight:56,Digit1:57,Digit2:58,Digit3:59,Digit4:60,Digit5:61,Digit6:62,Digit7:63,Digit8:64,Digit9:65,Digit0:66,Minus:67,Equal:68};function oe(r,e,t){return(r-e)/t}function Je(r,e,t){return r*t+e}function Kn(r,e,{mouseX:t,mouseY:n,mouseDown:s,width:i,height:o,devicePixelRatio:d}){const h=e.getContext("2d");Q(h);const u=new Vt(h),p=r.computed(()=>Math.min(i.read()/Ne,o.read()/Xe)),v=r.computed(()=>(i.read()-p.read()*Ne)/2),m=r.computed(()=>(o.read()-p.read()*Xe)/2);r.computed(()=>oe(t.read(),v.read(),p.read())),r.computed(()=>oe(n.read(),m.read(),p.read()));const f=8,E=30,g=r.input("spring.activeFriction",35,[1,40]),_=r.input("spring.activeTension",1e3,[1,1e3]),S=r.input("spring.idleFriction",25,[1,40]),M=r.input("spring.idleTension",180,[1,1e3]),C=_t,O=250,x=r.controlled(C),W=r.controlled(O),J=r.spring({target:x}),Z=r.spring({target:W}),de=J,ue=r.subtract(Z,70),N=q(f,I=>{const y=r.controlled(0),R=r.controlled(0),A=r.controlled(0),H=r.computed(()=>J.read()+(I-(f-1)/2)*65),K=r.computed(()=>Z.read()+Math.sin(I/(f-1)*Math.PI)*120);let te=H,ne=K,Ce=r.controlled(Math.PI/2-(I-f/2)/(f*.9));const Oe=r.subtract(R,H),De=r.subtract(A,K),Be=r.computed(()=>Math.atan2(De.read(),Oe.read())),Nt=r.sin({min:V(-1,.75),max:V(1,.75),frequency:V(.5,.4),offset:Math.random()}),xe=V(2,1.5)*Math.sign(V(0,1)),St=r.sin({min:xe-2,max:xe+2,frequency:V(.5,.4),offset:Math.random()});return{points:q(E,T=>{const Le=E-(T+1),Pe=r.adsr({target:y,attack:.05*Le,release:2}),ke=r.adsr({target:y,attack:.05*Le}),He=r.lerp(S,g,Pe),Ge=r.lerp(M,_,Pe),It=r.sin({min:-.3,max:.3,frequency:.2*1.1**(T/2),offset:Math.random()}),pe=r.add(It,Ce),Ue=24*.95**(T/2),Mt=r.add(te,r.computed(()=>Math.cos(pe.read())*Ue)),At=r.add(ne,r.computed(()=>Math.sin(pe.read())*Ue)),me=(T+1)/E,Ve=Math.sin(me*Math.PI)*20,Fe=r.sin({min:-Ve,max:Ve,offset:r.computed(()=>T/E*St.read()),frequency:Nt}),Rt=r.computed(()=>H.read()+Oe.read()*me+Math.sin(-Be.read())*Fe.read()),Tt=r.computed(()=>K.read()+De.read()*me+Math.cos(Be.read())*Fe.read()),P=r.spring({target:r.lerp(Mt,Rt,ke),friction:He,tension:Ge}).debug(T===E-1?"tentacle.endX":null),k=r.spring({target:r.lerp(At,Tt,ke),friction:He,tension:Ge}),G=r.subtract(P,te),U=r.subtract(k,ne),L=r.computed(()=>Math.sqrt(G.read()*G.read()+U.read()*U.read())),Ct={start:[te,ne],end:[P,k],leftInner:[r.computed(()=>P.read()-U.read()/L.read()*($/2-T+1)),r.computed(()=>k.read()+G.read()/L.read()*($/2-T+1))],rightInner:[r.computed(()=>P.read()+U.read()/L.read()*($/2-T+1)),r.computed(()=>k.read()-G.read()/L.read()*($/2-T+1))],leftOuter:[r.computed(()=>P.read()-U.read()/L.read()*(F/2-T+1)),r.computed(()=>k.read()+G.read()/L.read()*(F/2-T+1))],rightOuter:[r.computed(()=>P.read()+U.read()/L.read()*(F/2-T+1)),r.computed(()=>k.read()-G.read()/L.read()*(F/2-T+1))]};return te=P,ne=k,Ce=pe,Ct}),isActive:y,activeTargetX:R,activeTargetY:A}}),ee=new Map,bt=(I,y,R)=>{var H;const A=(H=ze(N.filter(K=>!ee.has(K))))!=null?H:ze(N);ee.set(A,I),A.isActive.set(1),A.activeTargetX.set(y),A.activeTargetY.set(R)},wt=I=>{for(const[y,R]of ee.entries())R===I&&(ee.delete(y),y.isActive.set(0))},Re=r.computed(()=>{let I=0;for(let y=0;y<f;y++)I+=N[y].points[E-1].end[0].read();return I/f}),Te=r.computed(()=>{let I=0;for(let y=0;y<f;y++)I+=N[y].points[E-1].end[1].read();return I/f}),fe=Ht(N);return{update:()=>{const I=new ve(Re.read()-C,Te.read()-400-O),y=I.withMagnitude(I.magnitude**.9);x.set(C+y.x),W.set(O+y.y)},draw:()=>{const I=new ve(de.read(),ue.read());h.resetTransform(),h.scale(d.read(),d.read()),h.fillStyle="#7F95D1",h.clearRect(0,0,i.read(),o.read()),h.translate(v.read(),m.read()),h.scale(p.read(),p.read()),u.ellipse(I,250,200,{stroke:"#FF709D",strokeWidth:12}),h.lineCap="round",h.lineJoin="round",h.beginPath(),h.moveTo(N[0].points[0].start[0].read(),N[0].points[0].start[1].read());for(let y=1;y<N.length;y++){const R=N[y-1],A=N[y];h.lineTo(R.points[3].rightOuter[0].read(),R.points[3].rightOuter[1].read()),h.bezierCurveTo(R.points[1].rightOuter[0].read(),R.points[1].rightOuter[1].read(),A.points[1].leftOuter[0].read(),A.points[1].leftOuter[1].read(),A.points[3].leftOuter[0].read(),A.points[3].leftOuter[1].read())}h.lineTo(N[N.length-1].points[0].start[0].read(),N[N.length-1].points[0].start[1].read()),h.fillStyle="#FF709D",h.fill();for(let y=0;y<fe.length;y++)Ze(h,fe[y],"#FF709D",F,0),Ze(h,fe[y],"#FF4782",$,3);u.ellipse(I,250,200,{fill:"#FF4782"}),h.beginPath(),h.moveTo(N[0].points[0].start[0].read(),N[0].points[0].start[1].read());for(let y=1;y<N.length;y++){const R=N[y-1],A=N[y];h.lineTo(R.points[1].rightInner[0].read(),R.points[1].rightInner[1].read()),h.bezierCurveTo(R.points[0].rightInner[0].read(),R.points[0].rightInner[1].read(),A.points[0].leftInner[0].read(),A.points[0].leftInner[1].read(),A.points[1].leftInner[0].read(),A.points[1].leftInner[1].read())}h.lineTo(N[N.length-1].points[0].start[0].read(),N[N.length-1].points[0].start[1].read()),h.fillStyle="#FF4782",h.fill(),u.debugPointX(new ve(Re.read(),Te.read()),{label:"avg end"})},children:w($n,{canvasScaleSignal:p,canvasTranslateXSignal:v,canvasTranslateYSignal:m,onNoteDown:bt,onNoteUp:wt})}}function Ze(r,e,t,n,s){r.strokeStyle=t;for(let i=0;i<e.points.length-s;i++){const{start:o,end:d}=e.points[i];r.beginPath(),r.moveTo(o[0].read(),o[1].read()),r.lineTo(d[0].read(),d[1].read()),r.lineWidth=n-i,r.stroke()}}function $n({canvasScaleSignal:r,canvasTranslateXSignal:e,canvasTranslateYSignal:t,onNoteDown:n,onNoteUp:s}){const i=b.exports.useRef(new Map),o=se(r),d=se(e),h=se(t),[u,p]=b.exports.useState([]);console.log(u);const v=b.exports.useCallback((E,g)=>{E?i.current.set(g,E):i.current.delete(g)},[]),m=b.exports.useCallback(E=>{p(g=>{if(g.includes(E))return g;const _=i.current.get(E);if(_){const S=_.getBoundingClientRect();n(E,oe(S.x+S.width/2,e.read(),r.read()),oe(S.y+S.height*.8,t.read(),r.read()))}return Gt([...g,E])})},[r,e,t,n]),f=b.exports.useCallback(E=>{p(g=>g.includes(E)?(s(E),g.filter(_=>_!==E)):g)},[s]);return b.exports.useEffect(()=>{const E=_=>{const S=Qe[_.code];S!==void 0&&m(S)},g=_=>{const S=Qe[_.code];S!==void 0&&f(S)};return window.addEventListener("keydown",E),window.addEventListener("keyup",g),()=>{window.removeEventListener("keydown",E),window.removeEventListener("keyup",g)}},[m,f]),B(Ie,{children:[w("div",{style:{background:"#7F95D1"},className:"absolute top-0 left-0 h-full w-full"}),w(Jt,{lowestNote:Yn,highestNote:jn,scale:o,top:Je(1100,h,o),left:Je(_t,d,o),notesDown:u,setRefForKey:v})]})}zn(Kn,Wn);
