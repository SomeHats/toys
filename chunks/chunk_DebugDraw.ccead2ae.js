import{V as g}from"./chunk_Vector2.98bc2363.js";const o="magenta",u=new g(5,0),l=3,a=.5,d=Math.PI*.75,c=5;class k{constructor(t){this.ctx=t}clear(t){if(!t){this.ctx.clearRect(0,0,this.ctx.canvas.width,this.ctx.canvas.height);return}this.applyFillOptions({fill:t}),this.ctx.fillRect(0,0,this.ctx.canvas.width,this.ctx.canvas.height)}beginPath(){this.ctx.beginPath()}moveTo({x:t,y:i}){this.ctx.moveTo(t,i)}lineTo({x:t,y:i}){this.ctx.lineTo(t,i)}arc({x:t,y:i},e,s,h,r){this.ctx.arc(t,i,e,s,h,r)}arcTo(t,i,e){this.ctx.arcTo(t.x,t.y,i.x,i.y,e)}quadraticCurveTo(t,i){this.ctx.quadraticCurveTo(t.x,t.y,i.x,i.y)}bezierCurveTo(t,i,e){this.ctx.bezierCurveTo(t.x,t.y,i.x,i.y,e.x,e.y)}applyStrokeOptions({strokeWidth:t=1,stroke:i=void 0,strokeCap:e="butt",strokeDash:s=[],strokeDashOffset:h=0,strokeJoin:r="round"}){i&&(this.ctx.lineWidth=t,this.ctx.strokeStyle=i,this.ctx.lineCap=e,this.ctx.setLineDash(s),this.ctx.lineDashOffset=h,this.ctx.lineJoin=r)}stroke(t){t.stroke&&(this.applyStrokeOptions(t),this.ctx.stroke())}applyFillOptions({fill:t=void 0}){t&&(this.ctx.fillStyle=t)}fill(t){t.fill&&(this.applyFillOptions(t),this.ctx.fill())}applyStrokeAndFillOptions(t){this.applyFillOptions(t),this.applyStrokeOptions(t)}strokeAndFill(t){this.fill(t),this.stroke(t)}getDebugStrokeOptions(t=o){return{stroke:t,strokeWidth:a}}debugStroke(t=o){this.stroke(this.getDebugStrokeOptions(t))}fillText(t,i,e={}){this.applyFillOptions(e),this.ctx.fillText(t,i.x,i.y)}circle(t,i,e){this.beginPath(),this.arc(t,i,0,2*Math.PI),this.strokeAndFill(e)}ellipse(t,i,e,s){this.beginPath(),this.ctx.ellipse(t.x,t.y,i,e,0,0,Math.PI*2),this.strokeAndFill(s)}debugLabel(t,i,e){t&&(this.applyFillOptions({fill:e}),this.fillText(t,i.add(u)))}debugPointX(t,{color:i=o,label:e=void 0}={}){this.debugLabel(e,t,i),this.beginPath(),this.ctx.moveTo(t.x-l,t.y-l),this.ctx.lineTo(t.x+l,t.y+l),this.ctx.moveTo(t.x+l,t.y-l),this.ctx.lineTo(t.x-l,t.y+l),this.stroke({strokeWidth:a,stroke:i})}debugPointO(t,{color:i=o,label:e=void 0}={}){this.debugLabel(e,t,i),this.circle(t,l,{strokeWidth:a,stroke:i})}debugArrow(t,i,{color:e=o,label:s=void 0}={}){this.debugLabel(s,g.average([t,i]),e),this.ctx.beginPath(),this.moveTo(t),this.lineTo(i);const h=i.sub(t),r=h.rotate(-d).withMagnitude(c).add(i),n=h.rotate(+d).withMagnitude(c).add(i);this.moveTo(r),this.lineTo(i),this.lineTo(n),this.stroke({strokeWidth:a,stroke:e})}debugVectorAtPoint(t,i,e){this.debugArrow(i,i.add(t),e)}polygon(t,i={}){this.beginPath(),this.moveTo(t[t.length-1]);for(const e of t)this.lineTo(e);this.strokeAndFill(i)}polyLine(t,i={}){this.beginPath(),this.moveTo(t[0]);for(let e=1;e<t.length;e++)this.lineTo(t[e]);this.stroke(i)}debugPolygon(t,{color:i=o,label:e=void 0}={}){this.debugLabel(e,t[0],i),this.polygon(t,this.getDebugStrokeOptions(i))}debugPolyLine(t,{color:i=o,label:e=void 0}={}){this.debugLabel(e,t[0],i),this.polyLine(t,this.getDebugStrokeOptions(i))}debugQuadraticCurve(t,i,e,{color:s=o,label:h=void 0}={}){this.debugLabel(h,t,s),this.beginPath(),this.moveTo(t),this.quadraticCurveTo(i,e),this.stroke(this.getDebugStrokeOptions(s))}debugBezierCurve(t,i,e,s,{color:h=o,label:r=void 0}={}){this.debugLabel(r,t,h),this.beginPath(),this.moveTo(t),this.bezierCurveTo(i,e,s),this.stroke(this.getDebugStrokeOptions(h))}debugLine2(t,{color:i=o,label:e=void 0}={}){this.debugLabel(e,t.start,i),this.debugArrow(t.start,t.end,{color:i,label:e})}aabb(t,i){i.debug&&this.debugLabel(i.debug.label,t.origin,i.debug.color||o),this.ctx.beginPath(),this.ctx.rect(t.left,t.top,t.width,t.height),this.strokeAndFill(i)}}export{k as D};
