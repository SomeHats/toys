import{V as i}from"./chunk_Vector2.KSidYDSo.js";class h{constructor(){this.parts=[],this.lastPoint=null}static straightThroughPoints(o){const t=new h;t.moveTo(o[0]);for(let r=1;r<o.length;r++)t.lineTo(o[r]);return t}static midpointQuadraticViaPoints(o){const t=new h;if(o.length>=2){t.moveTo(o[0]),t.lineTo(o[0].lerp(o[1],.5));let r=o[1];for(let s=2;s<o.length;s++){const n=o[s],e=r.lerp(n,.5);t.quadraticCurveTo(r,e),r=n}t.lineTo(r)}return t}toString(){return this.parts.join(" ")}add(o){return this.parts.push(o),this}moveTo(...o){const t=i.fromArgs(o);return this.lastPoint=t,this.add(`M${t.x} ${t.y}`)}moveToIfNeeded(...o){const t=i.fromArgs(o);return this.lastPoint&&this.lastPoint.equals(t)?this:this.moveTo(t)}lineTo(...o){const t=i.fromArgs(o);return this.lastPoint=t,this.add(`L${t.x} ${t.y}`)}closePath(){return this.add("Z")}arcTo(o,t,r,s,n,...e){const a=i.fromArgs(e);return this.lastPoint=a,this.add(`A${o} ${t} ${r} ${s} ${n} ${a.x} ${a.y}`)}quadraticCurveTo(o,t){const r=i.from(o),s=i.from(t);return this.lastPoint=s,this.add(`Q${r.x} ${r.y} ${s.x} ${s.y}`)}smoothQuadraticCurveTo(o){const t=i.from(o);return this.lastPoint=t,this.add(`T${t.x} ${t.y}`)}bezierCurveTo(o,t,r){const s=i.from(o),n=i.from(t),e=i.from(r);return this.lastPoint=e,this.add(`C${s.x} ${s.y} ${n.x} ${n.y} ${e.x} ${e.y}`)}smoothBezierCurveTo(o,t){const r=i.from(o),s=i.from(t);return this.lastPoint=s,this.add(`S${r.x} ${r.y} ${s.x} ${s.y}`)}}export{h as S};
