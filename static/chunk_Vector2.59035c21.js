import{e as p,f as b,i as x,c as M,k as j,g as $,a as E,v as z,n as O,l as g}from"./chunk_assert.773cf08f.js";const a={ok(r){return new S(r)},error(r){return new A(r)},collect(r){const e=[];for(const t of r)if(t.isOk())e.push(t.value);else return t;return a.ok(e)},collectObject(r){const e={};for(const[t,n]of p(r))if(n.isOk())e[t]=n.value;else return n;return a.ok(e)}};class v{constructor(){}}class S extends v{constructor(e){super(),this.value=e}isOk(){return!0}isError(){return!1}unwrap(){return this.value}unwrapError(e){b(`${e!=null?e:"expected error"}: ${String(this.value)}`)}map(e){return a.ok(e(this.value))}mapErr(e){return this}andThen(e){return e(this.value)}}class A extends v{constructor(e){super(),this.error=e}isOk(){return!1}isError(){return!0}unwrap(e){if(this.error instanceof Error)throw this.error;b(`${e!=null?e:"expected value"}: ${String(this.error)}`)}unwrapError(e){return this.error}map(e){return this}mapErr(e){return a.error(e(this.error))}andThen(e){return this}}class h{constructor(e,t=[]){this.message=e,this.path=t}formatPath(){if(!this.path.length)return null;let e="";for(const t of this.path)typeof t=="number"?e+=`[${t}]`:e+=`.${t}`;return e}toString(){const e=this.formatPath(),t=this.message.split(`
`).map((n,s)=>s===0?n:`  ${n}`).join(`
`);return e?`At ${e}: ${t}`:t}}function m(r,e){return new h(r.message,[e,...r.path])}function f(r){if(r===null)return"null";if(Array.isArray(r))return"an array";const e=typeof r;switch(e){case"bigint":case"boolean":case"function":case"number":case"string":case"symbol":return`a ${e}`;case"object":return`an ${e}`;case"undefined":return"undefined";default:M(e)}}const u=class{constructor(r,e){this.parse=r,this.serialize=e}transform(r,e){return new u(t=>this.parse(t).andThen(r),t=>this.serialize(e(t)))}nullable(){return new u(r=>r==null?a.ok(null):this.parse(r),r=>r===null?null:this.serialize(r))}static typeof(r){return new u(e=>typeof e===r?a.ok(e):a.error(new h(`Expected ${r}, got ${f(e)}`,[])),x)}static arrayOf(r){return new u(e=>Array.isArray(e)?a.collect(e.map((t,n)=>r.parse(t).mapErr(s=>m(s,n)))):a.error(new h(`Expected an array, got ${f(e)}`,[])),e=>e.map(t=>r.serialize(t)))}static object(r){return new T(r)}static objectMap(r,e){return new u(t=>typeof t!="object"||t===null?a.error(new h(`Expected object, got ${f(t)}`,[])):a.collect(j(t).map(n=>r.parse(n).andThen(s=>e.parse($(t,s)).map(o=>[s,o])).mapErr(s=>m(s,n)))).map(n=>Object.fromEntries(n)),t=>{const n={};for(const[s,o]of p(t)){if(o===void 0)continue;const c=r.serialize(s);E(typeof c=="string"||typeof c=="number",'Assertion Error: typeof serializedKey === "string" || typeof serializedKey === "number"'),n[c]=e.serialize(o)}return n})}static enum(r){const e=new Set(Array.isArray(r)?r:z(r));return new u(t=>{if(e.has(t))return a.ok(t);{const n=typeof t=="string"?`"${t}"`:typeof t=="boolean"||typeof t=="number"?String(t):f(t),s=Array.from(e,o=>typeof o=="string"?`"${o}"`:`${o}`).join(" or ");return a.error(new h(`Expected ${s}, got ${n}`))}},x)}};let l=u;l.unknown=new u(r=>a.ok(r),x);l.string=u.typeof("string");l.number=u.typeof("number");l.bigint=u.typeof("bigint");l.boolean=u.typeof("boolean");l.null=new u(r=>r==null?a.ok(null):a.error(new h(`Expected null or undefined, got ${f(r)}`)),()=>null);class T extends l{constructor(e){super(t=>typeof t!="object"||t===null?a.error(new h(`Expected object, got ${f(t)}`,[])):a.collect(p(this.config).map(([n,s])=>s.parse($(t,n)).map(o=>[n,o]).mapErr(o=>m(o,n)))).map(n=>Object.fromEntries(n)),t=>{const n={};for(const[s,o]of p(this.config))n[s]=o.serialize(t[s]);return n}),this.config=e}indexed(e){const t=[];for(const[n,s]of p(e))E(t[s]===void 0,`Duplicate index ${s} for keys "${n}" & "${t[s]}"`),t[s]=n;for(let n=0;n<t.length;n++)t[n]===void 0&&(t[n]=void 0);return new l(n=>{if(!Array.isArray(n))return this.parse(n);const s={};for(let o=0;o<n.length;o++){const c=t[o];c!==void 0&&(s[c]=n[o])}return this.parse(s)},n=>{const s=this.serialize(n);return t.map(o=>o===void 0?null:s[o])})}}const i=class{constructor(r,e){this.x=r,this.y=e}static fromPolar(r,e){return new i(e*Math.cos(r),e*Math.sin(r))}static average(r){return r.reduce((t,n)=>t.add(n),i.ZERO).div(r.length)}static fromVectorLike({x:r,y:e}){return new i(r,e)}static fromEvent({clientX:r,clientY:e}){return new i(r,e)}toString(r){return`Vector2(${r==null?this.x:this.x.toFixed(r)}, ${r==null?this.y:this.y.toFixed(r)})`}get magnitudeSquared(){return this.x*this.x+this.y*this.y}get magnitude(){return Math.sqrt(this.magnitudeSquared)}get angle(){return Math.atan2(this.y,this.x)}isInPolygon(r){const{x:e,y:t}=this;let n=!1;for(let s=0,o=r.length-1;s<r.length;o=s++){const{x:c,y}=r[s],{x:k,y:w}=r[o];y>t!=w>t&&e<(k-c)*(t-y)/(w-y)+c&&(n=!n)}return n}equals(r){return this===r||this.x===r.x&&this.y===r.y}distanceTo({x:r,y:e}){return Math.hypot(this.x-r,this.y-e)}distanceToSq({x:r,y:e}){const t=this.x-r,n=this.y-e;return t*t+n*n}angleTo(r){return r.sub(this).angle}angleBetween(r){return O(Math.atan2(r.y,r.x)-Math.atan2(this.y,this.x))}dot(r){return this.x*r.x+this.y*r.y}div(r){return new i(this.x/r,this.y/r)}scale(r){return new i(this.x*r,this.y*r)}negate(){return this.scale(-1)}add({x:r,y:e}){return new i(this.x+r,this.y+e)}sub({x:r,y:e}){return new i(this.x-r,this.y-e)}floor(){return new i(Math.floor(this.x),Math.floor(this.y))}ceil(){return new i(Math.ceil(this.x),Math.ceil(this.y))}round(){return new i(Math.round(this.x),Math.round(this.y))}withMagnitude(r){return i.fromPolar(this.angle,r)}normalize(){return this.withMagnitude(1)}withAngle(r){return i.fromPolar(r,this.magnitude)}rotate(r){return this.withAngle(this.angle+r)}rotateAround(r,e){const t=Math.sin(e),n=Math.cos(e),s=this.x-r.x,o=this.y-r.y,c=s*n-o*t,y=s*t+o*n;return new i(c+r.x,y+r.y)}lerp(r,e){return new i(g(this.x,r.x,e),g(this.y,r.y,e))}perpendicular(){return new i(this.y,-this.x)}project(r,e){return r.scale(e).add(this)}};let d=i;d.schema=l.object({x:l.number,y:l.number}).indexed({x:0,y:1}).transform(({x:r,y:e})=>a.ok(new i(r,e)),({x:r,y:e})=>({x:r,y:e}));d.ZERO=new i(0,0);d.UNIT=new i(1,1);d.X=new i(1,0);d.Y=new i(0,1);d.deserialize=i.fromVectorLike;export{a as R,l as S,d as V,h as a};
