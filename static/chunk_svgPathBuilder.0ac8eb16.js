import{V as r}from"./chunk_Vector2.5cb4ef59.js";class c{constructor(){this.parts=[],this.lastPoint=null}toString(){return this.parts.join(" ")}add(o){return this.parts.push(o),this}moveTo(...o){const t=r.fromArgs(o);return this.lastPoint=t,this.add(`M${t.x} ${t.y}`)}moveToIfNeeded(...o){const t=r.fromArgs(o);return this.lastPoint&&this.lastPoint.equals(t)?this:this.moveTo(t)}lineTo(...o){const t=r.fromArgs(o);return this.lastPoint=t,this.add(`L${t.x} ${t.y}`)}closePath(){return this.add("Z")}arcTo(o,t,i,s,a,...n){const e=r.fromArgs(n);return this.lastPoint=e,this.add(`A${o} ${t} ${i} ${s} ${a} ${e.x} ${e.y}`)}quadraticCurveTo(o,t){const i=r.from(o),s=r.from(t);return this.lastPoint=s,this.add(`Q${i.x} ${i.y} ${s.x} ${s.y}`)}smoothQuadraticCurveTo(o){const t=r.from(o);return this.lastPoint=t,this.add(`T${t.x} ${t.y}`)}bezierCurveTo(o,t,i){const s=r.from(o),a=r.from(t),n=r.from(i);return this.lastPoint=n,this.add(`C${s.x} ${s.y} ${a.x} ${a.y} ${n.x} ${n.y}`)}smoothBezierCurveTo(o,t){const i=r.from(o),s=r.from(t);return this.lastPoint=s,this.add(`S${i.x} ${i.y} ${s.x} ${s.y}`)}}export{c as S};
