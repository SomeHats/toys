{"mappings":"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","sources":["src/pals/PalController.ts","src/lib/scene/Component.ts","src/lib/utils.ts","src/lib/geom/Vector2.ts","src/pals/PalGeom.ts","src/lib/geom/Circle.ts","src/lib/geom/AABB.ts","src/pals/PalLegGeom.ts","src/lib/assert.ts","src/pals/PalRenderer.ts","src/lib/canvasShapeHelpers.ts","src/lib/geom/StraightPathSegment.ts","src/lib/geom/Line2.ts","src/lib/geom/CirclePathSegment.ts","src/pals/PalWalkAnimationController.ts","src/pals/PalConfig.ts","src/pals/colors.ts"],"sourcesContent":["import Component from '../lib/scene/Component';\nimport { constrain, normalizeAngle } from '../lib/utils';\nimport Vector2 from '../lib/geom/Vector2';\nimport Entity from '../lib/scene/Entity';\n\nconst MAX_SPEED = 80;\nconst ACCELERATION = 200;\nconst DECELERATION = 200;\n\nexport class PalControlData extends Component {\n  speed: number = 0;\n  position: Vector2;\n  heading: number = 0;\n  headingVelocity: number = 0;\n\n  constructor(entity: Entity, position: Vector2) {\n    super(entity);\n    this.position = position;\n  }\n\n  getVelocity(): Vector2 {\n    return this.getHeadingVec().scale(this.speed);\n  }\n\n  private getHeadingVec(): Vector2 {\n    return Vector2.fromPolar(this.heading, 1);\n  }\n}\n\nexport class PalTargetController extends Component {\n  private data: PalControlData;\n  private target: Vector2;\n\n  constructor(entity: Entity, position: Vector2) {\n    super(entity);\n    this.target = position;\n    this.data = entity.addComponent(PalControlData, position);\n  }\n\n  setTarget(newTarget: Vector2) {\n    this.target = newTarget;\n  }\n\n  update(dtMilliseconds: number) {\n    const dtSeconds = dtMilliseconds / 1000;\n    const angleToTarget = this.data.position.angleTo(this.target);\n\n    const distance = this.target.distanceTo(this.data.position);\n    if (distance > 15) {\n      this.accelerate(ACCELERATION, dtSeconds);\n    } else {\n      this.accelerate(-DECELERATION, dtSeconds);\n    }\n\n    if (distance > 10) {\n      const angleDelta = normalizeAngle(angleToTarget - this.data.heading);\n      const lastHeading = this.data.heading;\n      this.data.heading += angleDelta / 10;\n      this.data.headingVelocity =\n        normalizeAngle(this.data.heading - lastHeading) / dtSeconds;\n    } else {\n      this.data.headingVelocity = 0;\n    }\n  }\n\n  private accelerate(amt: number, dtSeconds: number) {\n    const lastSpeed = this.data.speed;\n    this.data.speed = constrain(\n      0,\n      MAX_SPEED,\n      this.data.speed + amt * dtSeconds,\n    );\n    const avgSpeed = (lastSpeed + this.data.speed) / 2;\n    this.data.position = this.data.position.add(\n      Vector2.fromPolar(this.data.heading, avgSpeed * dtSeconds),\n    );\n  }\n}\n\nexport class PalAbsoluteController extends Component {\n  private data: PalControlData;\n\n  constructor(entity: Entity, position: Vector2) {\n    super(entity);\n    this.data = entity.addComponent(PalControlData, position);\n  }\n\n  setPosition(position: Vector2, heading: number, dtSeconds: number) {\n    const lastPosition = this.data.position;\n    const lastHeading = this.data.heading;\n\n    this.data.heading = heading;\n    this.data.headingVelocity =\n      normalizeAngle(this.data.heading - lastHeading) / dtSeconds;\n    this.data.speed = lastPosition.distanceTo(position) / dtSeconds;\n    this.data.position = position;\n  }\n}\n","import Entity from './Entity';\nimport Scene from './Scene';\n\nexport default abstract class Component {\n  readonly entity: Entity;\n  constructor(entity: Entity) {\n    this.entity = entity;\n  }\n\n  onRemove() {}\n\n  onAddedToScene(scene: Scene) {}\n\n  onRemovedFromScene(scene: Scene) {}\n\n  beforeUpdate(delta: number) {}\n\n  update(delta: number) {}\n\n  afterUpdate(delta: number) {}\n\n  beforeDraw(ctx: CanvasRenderingContext2D, time: number) {}\n\n  draw(ctx: CanvasRenderingContext2D, time: number) {}\n\n  afterDraw(ctx: CanvasRenderingContext2D, time: number) {}\n\n  getScene(): Scene {\n    return this.entity.getScene();\n  }\n}\n","export type TimeoutId = ReturnType<typeof setTimeout>;\nexport type IntervalId = ReturnType<typeof setInterval>;\n\nexport type ReadonlyRecord<K extends keyof any, T> = {\n  readonly [P in K]: T;\n};\n\nexport function times<T>(n: number, fn: (idx: number) => T): Array<T> {\n  const result = [];\n  for (let i = 0; i < n; i++) {\n    result.push(fn(i));\n  }\n  return result;\n}\n\nexport function lerp(a: number, b: number, n: number): number {\n  return (b - a) * n + a;\n}\n\nexport function invLerp(a: number, b: number, n: number): number {\n  return (n - a) / (b - a);\n}\n\nexport function constrain(min: number, max: number, n: number): number {\n  return Math.min(max, Math.max(min, n));\n}\n\nexport function constrainWrapped(min: number, max: number, n: number): number {\n  const size = max - min;\n  n = n - min;\n  while (n < 0) {\n    n += size;\n  }\n  n = n % size;\n  return min + n;\n}\n\nexport function mapRange(\n  a1: number,\n  b1: number,\n  a2: number,\n  b2: number,\n  n: number,\n): number {\n  return lerp(a2, b2, invLerp(a1, b1, n));\n}\n\nexport function random(a: number, b?: number) {\n  if (typeof b === 'number') {\n    return lerp(a, b, Math.random());\n  }\n  return lerp(0, a, Math.random());\n}\n\nexport function randomInt(a: number, b?: number) {\n  return Math.floor(random(a, b));\n}\n\nexport function varyAbsolute(base: number, amount: number): number {\n  return random(base - amount, base + amount);\n}\n\nexport function varyRelative(base: number, amount: number): number {\n  return varyAbsolute(base, base * amount);\n}\n\nexport function sample<T>(arr: ReadonlyArray<T>): T {\n  return arr[Math.floor(random(arr.length))];\n}\n\nexport function flatten<T>(arr: ReadonlyArray<ReadonlyArray<T>>): Array<T> {\n  return arr.reduce<Array<T>>((a, b) => a.concat(b), []);\n}\n\nexport function uniq<T>(arr: T[]): Array<T> {\n  return Array.from(new Set(arr));\n}\n\nexport function intersection<T>(a1: T[], a2: T[]): T[] {\n  const a1Items = new Set(a1);\n  const result = new Set<T>();\n  for (const item of a2) {\n    if (a1Items.has(item)) {\n      result.add(item);\n    }\n  }\n  return Array.from(result);\n}\n\nexport function groupBy<T, Key>(\n  items: ReadonlyArray<T>,\n  getKey: (item: T) => Key,\n): Map<Key, Array<T>> {\n  const groups = new Map<Key, T[]>();\n  for (const item of items) {\n    const key = getKey(item);\n    const existing = groups.get(key);\n    if (existing) {\n      existing.push(item);\n    } else {\n      groups.set(key, [item]);\n    }\n  }\n\n  return groups;\n}\n\nexport function sortBy<T, Key extends number | string>(\n  items: ReadonlyArray<T>,\n  getKey: (item: T) => Key,\n): Array<T> {\n  return items.slice().sort((a, b) => (getKey(a) < getKey(b) ? -1 : 1));\n}\n\nexport function partition<T>(\n  items: ReadonlyArray<T>,\n  condition: (item: T) => boolean,\n): [T[], T[]] {\n  const pass = [];\n  const fail = [];\n  for (const item of items) {\n    if (condition(item)) {\n      pass.push(item);\n    } else {\n      fail.push(item);\n    }\n  }\n  return [pass, fail];\n}\n\nexport function randomColor(): string {\n  return `rgb(${Math.floor(random(256))},${Math.floor(\n    random(256),\n  )},${Math.floor(random(256))})`;\n}\n\nexport function removeFromArray<T>(array: Array<T>, item: T) {\n  const idx = array.indexOf(item);\n  if (idx !== -1) {\n    array.splice(idx, 1);\n  }\n}\n\nexport function frame(): Promise<number> {\n  return new Promise((resolve) => {\n    window.requestAnimationFrame((time) => resolve(time));\n  });\n}\n\nexport function wait(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(() => resolve(), ms));\n}\n\nexport async function frameLoop(\n  cb: (time: number, cancel: () => void) => void,\n) {\n  let shouldCancel = false;\n  const cancel = () => {\n    shouldCancel = true;\n  };\n  while (true) {\n    cb(await frame(), cancel);\n    if (shouldCancel) {\n      return;\n    }\n  }\n}\n\nexport function fromEntries<K extends PropertyKey, V>(\n  entries: ReadonlyArray<[K, V]>,\n): Record<K, V> {\n  const result = {} as Record<K, V>;\n  for (const [key, value] of entries) {\n    result[key] = value;\n  }\n  return result;\n}\n\nexport function keys<K extends string, V>(object: Record<K, V>): Array<K> {\n  return Object.keys(object) as K[];\n}\n\nexport function values<K extends string, V>(object: Record<K, V>): Array<V> {\n  return Object.values(object) as V[];\n}\n\nexport function entries<K extends string, V>(\n  object: Record<K, V>,\n): Array<[K, V]> {\n  return Object.entries(object) as [K, V][];\n}\n\nexport function compact<T>(arr: ReadonlyArray<T>): Array<NonNullable<T>> {\n  return arr.filter(\n    (item): item is NonNullable<T> => item !== null && item !== undefined,\n  );\n}\n\nexport function normalizeAngle(angle: number): number {\n  return constrainWrapped(-Math.PI, Math.PI, angle);\n}\n\nexport function clamp(a: number, b: number, n: number): number {\n  return Math.max(Math.min(a, b), Math.min(Math.max(a, b), n));\n}\n\nexport function shuffle<T>(arr: ReadonlyArray<T>): Array<T> {\n  const newArr = arr.slice();\n  for (let i = newArr.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [newArr[i], newArr[j]] = [newArr[j], newArr[i]];\n  }\n  return newArr;\n}\n\nexport function getId(prefix = ''): string {\n  return `${prefix}${Math.random().toString(36).slice(1)}`;\n}\n\nexport function getLocalStorageItem(\n  key: string,\n  fallback: unknown = null,\n): unknown {\n  try {\n    // Get from local storage by key\n    const item = window.localStorage.getItem(key);\n    // Parse stored json or if none return initialValue\n    return item ? JSON.parse(item) : fallback;\n  } catch (error) {\n    // If error also return initialValue\n    console.log(error);\n    return fallback;\n  }\n}\n\nexport function setLocalStorageItem(key: string, value: unknown) {\n  const stringified = JSON.stringify(value);\n  try {\n    window.localStorage.setItem(key, stringified);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function debounce<Args extends Array<unknown>>(\n  ms: number,\n  fn: (...args: Args) => void,\n): (...args: Args) => void {\n  let timeoutHandle: TimeoutId | undefined;\n\n  return (...args: Args) => {\n    if (timeoutHandle !== undefined) {\n      clearTimeout(timeoutHandle);\n    }\n    timeoutHandle = setTimeout(() => fn(...args), ms);\n  };\n}\n\nexport function exhaustiveSwitchError(value: never): never {\n  throw new Error(`Unknown switch case ${value}`);\n}\n\nexport function has(obj: object, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function get<K extends string, V>(\n  obj: Partial<Record<K, V>>,\n  key: K,\n): V | undefined;\nexport function get(obj: object, key: string): unknown;\nexport function get(obj: object, key: string): unknown {\n  if (!has(obj, key)) {\n    return undefined;\n  }\n  return (obj as any)[key];\n}\n\nexport function approxEq(a: number, b: number, epsilon: number): boolean {\n  return Math.abs(a - b) < epsilon;\n}\n\nexport function queueMicrotask(callback: () => void): () => void {\n  let isCancelled = false;\n  Promise.resolve()\n    .then(() => {\n      if (isCancelled) {\n        return;\n      }\n      callback();\n    })\n    .catch((e) =>\n      setTimeout(() => {\n        throw e;\n      }),\n    );\n  return () => {\n    isCancelled = true;\n  };\n}\n\nexport function promiseFromEvents<T>(\n  setupResolve: (resolve: (value: T) => void) => void,\n  setupReject: (reject: (error: unknown) => void) => void,\n): Promise<T> {\n  return new Promise<T>((resolve, reject) => {\n    setupResolve(resolve);\n    setupReject(reject);\n  });\n}\n\nexport function mapObjectValues<K extends string, V, U>(\n  object: Record<K, V>,\n  fn: (value: V, key: K, obj: Record<K, V>) => U,\n): Record<K, U> {\n  const result = {} as Record<K, U>;\n  for (const [k, v] of entries(object)) {\n    result[k] = fn(v, k, object);\n  }\n  return result;\n}\n","import { normalizeAngle, lerp } from '../utils';\n\nexport default class Vector2 {\n  static readonly ZERO = new Vector2(0, 0);\n\n  static fromPolar(angle: number, radius: number) {\n    return new Vector2(radius * Math.cos(angle), radius * Math.sin(angle));\n  }\n\n  static average(points: ReadonlyArray<Vector2>): Vector2 {\n    const sum = points.reduce((memo, p) => memo.add(p), Vector2.ZERO);\n    return sum.div(points.length);\n  }\n\n  static fromVectorLike({ x, y }: { x: number; y: number }): Vector2 {\n    return new Vector2(x, y);\n  }\n\n  constructor(public readonly x: number, public readonly y: number) {}\n\n  toString(): string {\n    return `Vector2(${this.x}, ${this.y})`;\n  }\n\n  get magnitudeSquared(): number {\n    return this.x * this.x + this.y * this.y;\n  }\n\n  get magnitude(): number {\n    return Math.sqrt(this.magnitudeSquared);\n  }\n\n  get angle(): number {\n    return Math.atan2(this.y, this.x);\n  }\n\n  isInPolygon(polygon: ReadonlyArray<Vector2>): boolean {\n    // ray-casting algorithm based on\n    // http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n\n    const { x, y } = this;\n\n    let isInside = false;\n    for (\n      let currentIdx = 0, previousIdx = polygon.length - 1;\n      currentIdx < polygon.length;\n      previousIdx = currentIdx++\n    ) {\n      const { x: currentX, y: currentY } = polygon[currentIdx];\n      const { x: previousX, y: previousY } = polygon[previousIdx];\n      const doesIntersect =\n        currentY > y != previousY > y &&\n        x <\n          ((previousX - currentX) * (y - currentY)) / (previousY - currentY) +\n            currentX;\n\n      if (doesIntersect) {\n        isInside = !isInside;\n      }\n    }\n\n    return isInside;\n  }\n\n  equals(other: Vector2) {\n    return this === other || (this.x === other.x && this.y === other.y);\n  }\n\n  distanceTo({ x, y }: Vector2): number {\n    const dx = x - this.x;\n    const dy = y - this.y;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n  angleTo(other: Vector2): number {\n    return other.sub(this).angle;\n  }\n\n  angleBetween(other: Vector2): number {\n    return normalizeAngle(\n      Math.atan2(other.y, other.x) - Math.atan2(this.y, this.x),\n    );\n  }\n\n  dot(other: Vector2): number {\n    return this.x * other.x + this.y * other.y;\n  }\n\n  div(scale: number): Vector2 {\n    return new Vector2(this.x / scale, this.y / scale);\n  }\n\n  scale(scale: number): Vector2 {\n    return new Vector2(this.x * scale, this.y * scale);\n  }\n\n  negate(): Vector2 {\n    return this.scale(-1);\n  }\n\n  add({ x, y }: Vector2): Vector2 {\n    return new Vector2(this.x + x, this.y + y);\n  }\n\n  sub({ x, y }: Vector2): Vector2 {\n    return new Vector2(this.x - x, this.y - y);\n  }\n\n  floor(): Vector2 {\n    return new Vector2(Math.floor(this.x), Math.floor(this.y));\n  }\n\n  ceil(): Vector2 {\n    return new Vector2(Math.ceil(this.x), Math.ceil(this.y));\n  }\n\n  round(): Vector2 {\n    return new Vector2(Math.round(this.x), Math.round(this.y));\n  }\n\n  withMagnitude(newMagnitude: number): Vector2 {\n    return Vector2.fromPolar(this.angle, newMagnitude);\n  }\n\n  normalize(): Vector2 {\n    return this.withMagnitude(1);\n  }\n\n  withAngle(newAngle: number): Vector2 {\n    return Vector2.fromPolar(newAngle, this.magnitude);\n  }\n\n  rotate(byAngle: number): Vector2 {\n    return this.withAngle(this.angle + byAngle);\n  }\n\n  lerp(other: Vector2, n: number): Vector2 {\n    return new Vector2(lerp(this.x, other.x, n), lerp(this.y, other.y, n));\n  }\n}\n","import Component from '../lib/scene/Component';\nimport Entity from '../lib/scene/Entity';\nimport Circle from '../lib/geom/Circle';\nimport { PalControlData } from './PalController';\nimport { shuffle, flatten, times, lerp } from '../lib/utils';\nimport { PalConfig } from './PalConfig';\nimport PalLegGeom, { PalLegGeomUpdate } from './PalLegGeom';\nimport { assert } from '../lib/assert';\n\nconst HALF_PI = Math.PI / 2;\n\nexport type PalGeomUpdate = {\n  bobAmount: number;\n  legs: Array<PalLegGeomUpdate>;\n};\n\nexport interface PalAnimationController {\n  update(\n    dtMilliseconds: number,\n    controlData: PalControlData,\n    legs: Array<PalLegGeom>,\n  ): PalGeomUpdate;\n}\n\nexport default class PalGeom extends Component {\n  private controlData: PalControlData;\n  legs: Array<PalLegGeom>;\n  private animationController: PalAnimationController | null = null;\n  private bobAmount: number = 0;\n\n  constructor(entity: Entity, private config: PalConfig) {\n    super(entity);\n    this.controlData = entity.getComponent(PalControlData);\n    this.legs = shuffle(\n      flatten(\n        times(config.legPairs, n => {\n          const progress = (n + 1) / (config.legPairs + 1);\n          return [\n            new PalLegGeom(\n              this.controlData,\n              this,\n              config,\n              lerp(HALF_PI - 1, HALF_PI + 1, progress),\n            ),\n            new PalLegGeom(\n              this.controlData,\n              this,\n              config,\n              lerp(-HALF_PI + 1, -HALF_PI - 1, progress),\n            ),\n          ];\n        }),\n      ),\n    );\n  }\n\n  setAnimationController(animationController: PalAnimationController) {\n    this.animationController = animationController;\n  }\n\n  update(dtMilliseconds: number) {\n    if (this.animationController) {\n      const update = this.animationController.update(\n        dtMilliseconds,\n        this.controlData,\n        this.legs,\n      );\n      this.bobAmount = update.bobAmount;\n\n      assert(update.legs.length === this.legs.length);\n      this.legs.forEach((leg, i) => leg.update(update.legs[i]));\n    }\n  }\n\n  getBod(): Circle {\n    const bob = this.config.bodBob * this.bobAmount;\n\n    return new Circle(\n      this.controlData.position.x,\n      this.controlData.position.y - this.config.bodHeight - bob,\n      this.config.radius,\n    );\n  }\n}\n","// @flow\nimport Vector2 from './Vector2';\nimport AABB from './AABB';\n\nexport default class Circle {\n  readonly center: Vector2;\n  readonly radius: number;\n\n  constructor(x: number, y: number, radius: number) {\n    this.center = new Vector2(x, y);\n    this.radius = radius;\n    Object.freeze(this);\n  }\n\n  get circumference(): number {\n    return 2 * Math.PI * this.radius;\n  }\n\n  getBoundingBox(): AABB {\n    return new AABB(\n      new Vector2(this.center.x, this.center.y),\n      new Vector2(this.radius * 2, this.radius * 2),\n    );\n  }\n\n  // debugDraw(color: string) {\n  //   const ctx: CanvasRenderingContext2D = window.debugContext;\n  //   ctx.strokeStyle = color;\n  //   ctx.lineWidth = 1;\n  //   ctx.beginPath();\n  //   ctx.arc(this.center.x, this.center.y, this.radius, 0, Math.PI * 2, false);\n  //   ctx.stroke();\n  // }\n\n  pointOnCircumference(radians: number): Vector2 {\n    return new Vector2(\n      this.center.x + Math.cos(radians) * this.radius,\n      this.center.y + Math.sin(radians) * this.radius,\n    );\n  }\n\n  containsPoint(point: Vector2): boolean {\n    return point.distanceTo(this.center) < this.radius;\n  }\n\n  intersectsCircle(other: Circle): boolean {\n    return this.center.distanceTo(other.center) < this.radius + other.radius;\n  }\n\n  withRadius(radius: number): Circle {\n    return new Circle(this.center.x, this.center.y, radius);\n  }\n}\n","import Vector2 from './Vector2';\n\nexport default class AABB {\n  static fromLeftTopRightBottom(\n    left: number,\n    top: number,\n    right: number,\n    bottom: number,\n  ): AABB {\n    return new AABB(\n      new Vector2(left, top),\n      new Vector2(right - left, bottom - top),\n    );\n  }\n\n  constructor(public readonly origin: Vector2, public readonly size: Vector2) {\n    Object.freeze(this);\n  }\n\n  contains({ x, y }: Vector2): boolean {\n    return (\n      this.left <= x && x <= this.right && this.top <= y && y <= this.bottom\n    );\n  }\n\n  intersects(other: AABB): boolean {\n    return !(\n      this.right < other.left ||\n      this.left > other.right ||\n      this.bottom < other.top ||\n      this.top > other.bottom\n    );\n  }\n\n  getCenter(): Vector2 {\n    return this.origin.add(this.size.scale(0.5));\n  }\n\n  get left(): number {\n    return this.origin.x;\n  }\n\n  get right(): number {\n    return this.origin.x + this.size.x;\n  }\n\n  get top(): number {\n    return this.origin.y;\n  }\n\n  get bottom(): number {\n    return this.origin.y + this.size.y;\n  }\n\n  get width(): number {\n    return this.size.x;\n  }\n\n  get height(): number {\n    return this.size.y;\n  }\n}\n","import PalGeom from './PalGeom';\nimport { PalConfig } from './PalConfig';\nimport Vector2 from '../lib/geom/Vector2';\nimport { PalControlData } from './PalController';\nimport { lerp } from '../lib/utils';\n\nconst getLegRadius = ({ radius, hipHeight, legWidth }: PalConfig) =>\n  Math.sqrt(radius * radius - (radius - hipHeight) * (radius - hipHeight)) -\n  legWidth;\n\nexport type PalLegGeomUpdate = {\n  footXY: Vector2;\n  footProjectionOrigin: Vector2;\n  liftAmount: number;\n};\n\nexport default class PalLegGeom {\n  hipRadius: number;\n  kneeRadius: number;\n  floorRadius: number;\n\n  footXY: Vector2;\n  footOrigin: Vector2;\n  liftAmount: number = 0;\n\n  constructor(\n    private palData: PalControlData,\n    private palGeom: PalGeom,\n    private config: PalConfig,\n    public angleOffset: number,\n  ) {\n    this.hipRadius = getLegRadius(config);\n    this.kneeRadius = getLegRadius(config) * config.kneeScale;\n    this.floorRadius = getLegRadius(config);\n\n    this.footXY = this.getIdealFootRestingXY();\n    this.footOrigin = this.getIdealFootRestingXY();\n  }\n\n  update(update: PalLegGeomUpdate) {\n    this.footXY = update.footXY;\n    this.footOrigin = update.footProjectionOrigin;\n    this.liftAmount = update.liftAmount;\n  }\n\n  getIdealFootRestingXY(): Vector2 {\n    return Vector2.fromPolar(\n      this.palData.heading + this.angleOffset,\n      this.floorRadius,\n    ).add(this.palData.position);\n  }\n\n  getFootXY(): Vector2 {\n    return this.footXY;\n  }\n\n  getFootZ(): number {\n    return lerp(0, this.getHipZ() * this.config.legMaxLift, this.liftAmount);\n  }\n\n  getFootOrigin(): Vector2 {\n    return this.footOrigin;\n  }\n\n  getKneeXY(): Vector2 {\n    return this.palData.position\n      .add(\n        Vector2.fromPolar(\n          this.palData.heading + this.angleOffset,\n          this.kneeRadius,\n        ),\n      )\n      .add(\n        Vector2.fromPolar(\n          this.palData.heading,\n          this.liftAmount * this.config.kneeMaxOut,\n        ),\n      );\n  }\n\n  getKneeZ(): number {\n    return (this.getFootZ() + this.getHipZ()) / 2;\n  }\n\n  getKneeOrigin(): Vector2 {\n    return this.getHipOrigin().lerp(this.getFootOrigin(), 0.5);\n  }\n\n  getHipXY(): Vector2 {\n    return this.palData.position.add(\n      Vector2.fromPolar(\n        this.palData.heading + this.angleOffset,\n        this.hipRadius,\n      ),\n    );\n    // return this._hipEllipse\n    //   .pointOnCircumference(this.angle)\n    //   .add(this.palData.bod.center);\n  }\n\n  getHipZ(): number {\n    const bod = this.palGeom.getBod();\n    return (\n      this.palData.position.y -\n      bod.center.y -\n      (bod.radius - this.config.hipHeight)\n    );\n  }\n\n  getHipOrigin(): Vector2 {\n    return this.palData.position;\n  }\n}\n","export function fail(message: string): never {\n  throw new Error(message);\n}\n\nexport function assert(value: unknown, message?: string): asserts value {\n  if (!value) {\n    fail(message || 'Assertion Error');\n  }\n}\n","import Component from '../lib/scene/Component';\nimport { PalControlData } from './PalController';\nimport Entity from '../lib/scene/Entity';\nimport PalGeom from './PalGeom';\nimport * as ShapeHelpers from '../lib/canvasShapeHelpers';\nimport { normalizeAngle, constrain } from '../lib/utils';\nimport Circle from '../lib/geom/Circle';\nimport { PalConfig } from './PalConfig';\nimport PalLegGeom from './PalLegGeom';\nimport Vector2 from '../lib/geom/Vector2';\n\nconst Y_SCALE = 0.3;\nconst HALF_PI = Math.PI / 2;\n\nexport default class PalRenderer extends Component {\n  private data: PalControlData;\n  private geom: PalGeom;\n\n  constructor(entity: Entity, private config: PalConfig) {\n    super(entity);\n    this.data = entity.getComponent(PalControlData);\n    this.geom = entity.getComponent(PalGeom);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const heading = normalizeAngle(this.data.heading);\n\n    ctx.setLineDash([]);\n    ctx.beginPath();\n\n    const bod = this.geom.getBod();\n    ctx.ellipse(\n      this.data.position.x,\n      this.data.position.y,\n      bod.radius * 0.8,\n      bod.radius * 0.8 * 0.3,\n      0,\n      0,\n      2 * Math.PI,\n    );\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.2)';\n    ctx.fill();\n\n    this.geom.legs\n      .filter(l => normalizeAngle(l.angleOffset + heading) < 0)\n      .forEach(leg => this.drawLeg(ctx, leg));\n    this.geom.legs\n      .filter(l => normalizeAngle(l.angleOffset + heading) >= 0)\n      .forEach(leg => this.drawLeg(ctx, leg));\n    this.drawBod(ctx, bod);\n  }\n\n  private drawLeg(ctx: CanvasRenderingContext2D, leg: PalLegGeom) {\n    ctx.beginPath();\n\n    const angle = this.data.heading + leg.angleOffset;\n\n    const colorDarkenAmount = constrain(\n      0,\n      1,\n      Math.abs(normalizeAngle(-HALF_PI - angle) / HALF_PI),\n    );\n    const legColor = this.config.color.darken(\n      0.2 * (1 - colorDarkenAmount * colorDarkenAmount),\n    );\n\n    const hip = this.projectZ(\n      leg.getHipXY(),\n      leg.getHipZ(),\n      leg.getHipOrigin(),\n    );\n    const knee = this.projectZ(\n      leg.getKneeXY(),\n      leg.getKneeZ(),\n      leg.getKneeOrigin(),\n    );\n    const foot = this.projectZ(\n      leg.getFootXY(),\n      leg.getFootZ(),\n      leg.getFootOrigin(),\n    );\n\n    ctx.moveTo(hip.x, hip.y);\n    ctx.quadraticCurveTo(knee.x, knee.y, foot.x, foot.y);\n    ctx.lineCap = 'round';\n    ctx.strokeStyle = legColor.toString();\n    ctx.lineWidth = this.config.legWidth;\n    ctx.stroke();\n  }\n\n  private drawBod(ctx: CanvasRenderingContext2D, bod: Circle) {\n    ctx.save();\n    ctx.beginPath();\n    ShapeHelpers.circle(ctx, bod.center.x, bod.center.y, this.config.radius);\n    ctx.fillStyle = this.config.color.toString();\n    ctx.fill();\n    ctx.clip();\n\n    const faceX =\n      (normalizeAngle(HALF_PI - this.data.heading) / HALF_PI) *\n      this.config.radius;\n\n    // EYES\n    ctx.beginPath();\n    ShapeHelpers.circle(\n      ctx,\n      faceX + bod.center.x + this.config.eyeX,\n      bod.center.y - this.config.eyeY,\n      this.config.eyeRadius,\n    );\n    ShapeHelpers.circle(\n      ctx,\n      faceX + bod.center.x - this.config.eyeX,\n      bod.center.y - this.config.eyeY,\n      this.config.eyeRadius,\n    );\n    ctx.fillStyle = this.config.color.darken(0.5).toString();\n    ctx.fill();\n\n    // MOUTH\n    ctx.beginPath();\n    ctx.moveTo(\n      faceX + bod.center.x - this.config.mouthWidth,\n      bod.center.y - this.config.mouthY,\n    );\n    ctx.quadraticCurveTo(\n      faceX + bod.center.x,\n      bod.center.y - this.config.mouthY + this.config.mouthSmile,\n      faceX + bod.center.x + this.config.mouthWidth,\n      bod.center.y - this.config.mouthY,\n    );\n    ctx.lineWidth = this.config.mouthThickness;\n    ctx.strokeStyle = this.config.color.darken(0.5).toString();\n    ctx.stroke();\n\n    // BUTT\n    ctx.beginPath();\n    this.makeButtLine(ctx, bod, faceX + this.config.radius * 2);\n    this.makeButtLine(ctx, bod, faceX - this.config.radius * 2);\n    ctx.lineWidth = this.config.buttThickness;\n    ctx.strokeStyle = this.config.color.darken(0.3).toString();\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  private makeButtLine(\n    ctx: CanvasRenderingContext2D,\n    bod: Circle,\n    buttX: number,\n  ) {\n    ctx.moveTo(buttX * 1.6 + bod.center.x, bod.center.y + this.config.buttTop);\n    ctx.quadraticCurveTo(\n      buttX * 1.7 + bod.center.x,\n      bod.center.y + (this.config.buttTop + this.config.buttBottom) * 0.65,\n      buttX + bod.center.x,\n      bod.center.y + this.config.buttBottom,\n    );\n  }\n\n  private projectZ(xy: Vector2, z: number, origin: Vector2): Vector2 {\n    return new Vector2(xy.x, origin.y - z + (xy.y - origin.y) * Y_SCALE);\n  }\n}\n","// @flow\nimport Path from './geom/Path';\nimport StraightPathSegment from './geom/StraightPathSegment';\nimport CirclePathSegment from './geom/CirclePathSegment';\n\nexport function circle(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  radius: number,\n) {\n  ctx.arc(x, y, radius, 0, 2 * Math.PI, false);\n}\n\nexport function path(ctx: CanvasRenderingContext2D, path: Path) {\n  if (path.segments.length) {\n    ctx.moveTo(path.segments[0].getStart().x, path.segments[0].getStart().y);\n  }\n\n  for (const segment of path.segments) {\n    if (segment instanceof StraightPathSegment) {\n      ctx.lineTo(segment.getEnd().x, segment.getEnd().y);\n    } else if (segment instanceof CirclePathSegment) {\n      ctx.arc(\n        segment.circle.center.x,\n        segment.circle.center.y,\n        segment.circle.radius,\n        segment.startAngle,\n        segment.endAngle,\n        segment.isAnticlockwise,\n      );\n    } else {\n      throw new Error(`Unknown path segment type: ${segment.toString()}`);\n    }\n  }\n}\n","// @flow\nimport { constrain } from '../utils';\nimport Vector2 from './Vector2';\nimport { PathSegment } from './Path';\nimport Line2 from './Line2';\n\nexport default class StraightPathSegment implements PathSegment {\n  readonly line: Line2;\n  private readonly delta: Vector2;\n\n  constructor(start: Vector2, end: Vector2) {\n    this.line = new Line2(start, end);\n    this.delta = this.line.getDelta();\n    Object.freeze(this);\n  }\n\n  getStart(): Vector2 {\n    return this.line.start;\n  }\n\n  getEnd(): Vector2 {\n    return this.line.end;\n  }\n\n  getDelta(): Vector2 {\n    return this.delta;\n  }\n\n  getLength(): number {\n    return this.delta.magnitude;\n  }\n\n  get angle(): number {\n    return this.delta.angle;\n  }\n\n  getPointAtPosition(position: number): Vector2 {\n    const constrainedPosition = constrain(0, this.getLength(), position);\n    return this.delta.withMagnitude(constrainedPosition).add(this.line.start);\n  }\n\n  getAngleAtPosition(): number {\n    return this.delta.angle;\n  }\n}\n","// @flow\nimport { assert } from '../assert';\nimport Vector2 from './Vector2';\n\nconst isSlopeVertical = (slope: number) =>\n  slope === Infinity || slope === -Infinity;\n\nexport default class Line2 {\n  static fromSlopeAndDisplacement(slope: number, displacement: number) {\n    assert(\n      !isSlopeVertical(slope),\n      'cannot create vertical line from displacement',\n    );\n\n    const start = new Vector2(0, displacement);\n    const end = new Vector2(1, slope + displacement);\n    return new Line2(start, end);\n  }\n\n  static fromSlopeAndPoint(slope: number, point: Vector2): Line2 {\n    if (isSlopeVertical(slope)) {\n      return new Line2(point, new Vector2(point.x, point.y + 1));\n    }\n\n    const displacement = point.y - point.x * slope;\n    return Line2.fromSlopeAndDisplacement(slope, displacement);\n  }\n\n  readonly start: Vector2;\n  readonly end: Vector2;\n\n  constructor(a: Vector2, b: Vector2) {\n    this.start = a;\n    this.end = b;\n  }\n\n  getDelta(): Vector2 {\n    return this.end.sub(this.start);\n  }\n\n  get slope(): number {\n    return (this.end.y - this.start.y) / (this.end.x - this.start.x);\n  }\n\n  get displacement(): number {\n    return this.start.y - this.start.x * this.slope;\n  }\n\n  get isVertical(): boolean {\n    return isSlopeVertical(this.slope);\n  }\n\n  get verticalX(): number {\n    assert(this.isVertical, 'verticalX is not defined on non vertical lines');\n    return this.start.x;\n  }\n\n  get perpendicularSlope(): number {\n    if (this.isVertical) return 0;\n    return -1 / this.slope;\n  }\n\n  isParallelTo(other: Line2): boolean {\n    return (this.isVertical && other.isVertical) || this.slope === other.slope;\n  }\n\n  perpendicularLineThroughPoint(point: Vector2): Line2 {\n    return Line2.fromSlopeAndPoint(this.perpendicularSlope, point);\n  }\n\n  pointAtIntersectionWith(other: Line2): Vector2 {\n    assert(!this.isParallelTo(other), 'parallel lines do not intersect');\n\n    let x;\n    if (this.isVertical) {\n      x = this.verticalX;\n    } else if (other.isVertical) {\n      x = other.verticalX;\n    } else {\n      x = (this.displacement - other.displacement) / (other.slope - this.slope);\n    }\n\n    const y = this.isVertical\n      ? other.slope * x + other.displacement\n      : this.slope * x + this.displacement;\n\n    return new Vector2(x, y);\n  }\n}\n","// @flow\nimport { constrain, mapRange } from '../utils';\nimport Vector2 from './Vector2';\nimport Circle from './Circle';\nimport { PathSegment } from './Path';\n\nexport default class CirclePathSegment implements PathSegment {\n  readonly circle: Circle;\n  readonly startAngle: number;\n  readonly endAngle: number;\n\n  constructor(\n    center: Vector2,\n    radius: number,\n    startAngle: number,\n    endAngle: number,\n  ) {\n    this.circle = new Circle(center.x, center.y, radius);\n    this.startAngle = startAngle;\n    this.endAngle = endAngle;\n    Object.freeze(this);\n  }\n\n  getStart(): Vector2 {\n    return this.circle.pointOnCircumference(this.startAngle);\n  }\n\n  getEnd(): Vector2 {\n    return this.circle.pointOnCircumference(this.endAngle);\n  }\n\n  get angleDifference(): number {\n    return Math.atan2(\n      Math.sin(this.endAngle - this.startAngle),\n      Math.cos(this.endAngle - this.startAngle),\n    );\n  }\n\n  getLength(): number {\n    const proportion = Math.abs(this.angleDifference) / (Math.PI * 2);\n    return this.circle.circumference * proportion;\n  }\n\n  get isAnticlockwise(): boolean {\n    return this.angleDifference < 0;\n  }\n\n  getPointAtPosition(position: number): Vector2 {\n    const angle = mapRange(\n      0,\n      this.getLength(),\n      this.startAngle,\n      this.startAngle + this.angleDifference,\n      constrain(0, this.getLength(), position),\n    );\n    return this.circle.pointOnCircumference(angle);\n  }\n\n  getAngleAtPosition(position: number): number {\n    if (this.isAnticlockwise) {\n      return (\n        mapRange(\n          0,\n          this.getLength(),\n          this.startAngle,\n          this.startAngle + this.angleDifference,\n          constrain(0, this.getLength(), position),\n        ) -\n        Math.PI / 2\n      );\n    } else {\n      return (\n        mapRange(\n          0,\n          this.getLength(),\n          this.startAngle,\n          this.startAngle + this.angleDifference,\n          constrain(0, this.getLength(), position),\n        ) +\n        Math.PI / 2\n      );\n    }\n  }\n}\n","import { PalAnimationController, PalGeomUpdate } from './PalGeom';\nimport { PalControlData } from './PalController';\nimport PalLegGeom, { PalLegGeomUpdate } from './PalLegGeom';\nimport Vector2 from '../lib/geom/Vector2';\nimport { PalConfig } from './PalConfig';\nimport { constrain, mapRange } from '../lib/utils';\nimport { assert } from '../lib/assert';\n\ntype LegState = {\n  lastFootOnFloorXY: Vector2;\n  lastFootOnFloorPalPosition: Vector2;\n  stepProgress: number;\n  restTimer: number;\n  currentStepMaxLift: number;\n};\n\nfunction isStepping({ stepProgress }: LegState): boolean {\n  return stepProgress > 0;\n}\n\nfunction isResting({ restTimer }: LegState): boolean {\n  return restTimer > 0;\n}\n\nexport default class PalWalkAnimationController\n  implements PalAnimationController {\n  private legStates = new Map<PalLegGeom, LegState>();\n\n  constructor(private config: PalConfig) {}\n\n  update(\n    dtMilliseconds: number,\n    pal: PalControlData,\n    legs: Array<PalLegGeom>,\n  ): PalGeomUpdate {\n    const dtSeconds = dtMilliseconds / 1000;\n\n    for (const leg of legs) {\n      this.updateLegState(dtSeconds, pal, legs, leg);\n    }\n    const legUpdates = legs.map(leg => this.getLegUpdate(pal, leg));\n\n    const totalLift = legUpdates.reduce(\n      (sum, update) => sum + update.liftAmount,\n      0,\n    );\n    const avgLift = totalLift / legs.length;\n\n    return {\n      bobAmount: avgLift,\n      legs: legUpdates,\n    };\n  }\n\n  private canLiftLeg(\n    pal: PalControlData,\n    legs: Array<PalLegGeom>,\n    leg: PalLegGeom,\n  ): boolean {\n    assert(legs.includes(leg), 'whos leg even is this');\n    const enoughLegsOnFloor =\n      legs.filter(l => l !== leg && !isStepping(this.getLegState(pal, leg)))\n        .length > Math.floor(Math.log(legs.length));\n\n    const anyStepsJustStarted = legs.some(leg => {\n      const state = this.getLegState(pal, leg);\n      return (\n        state.stepProgress > 0 && state.stepProgress < 1 / (legs.length / 2)\n      );\n    });\n\n    return enoughLegsOnFloor && !anyStepsJustStarted;\n  }\n\n  private updateLegState(\n    dtSeconds: number,\n    pal: PalControlData,\n    legs: Array<PalLegGeom>,\n    leg: PalLegGeom,\n  ) {\n    const state = this.getLegState(pal, leg);\n\n    state.restTimer = constrain(\n      0,\n      this.config.stepRestDuration,\n      state.restTimer - dtSeconds,\n    );\n    if (isResting(state)) return;\n\n    if (isStepping(state)) {\n      state.stepProgress = constrain(\n        0,\n        1,\n        state.stepProgress + dtSeconds / this.config.stepDuration,\n      );\n\n      if (state.stepProgress === 1) {\n        state.lastFootOnFloorXY = this.getFootXY(pal, leg, state);\n        state.lastFootOnFloorPalPosition = pal.position;\n        state.stepProgress = 0;\n        state.restTimer = this.config.stepDuration;\n      }\n    } else {\n      const footLeanDistance = leg\n        .getFootXY()\n        .distanceTo(leg.getIdealFootRestingXY());\n      if (\n        footLeanDistance > this.config.stepThreshold &&\n        this.canLiftLeg(pal, legs, leg)\n      ) {\n        state.currentStepMaxLift = constrain(\n          0,\n          1,\n          mapRange(\n            this.config.stepThreshold,\n            this.config.fullStepDistance,\n            0.1,\n            1,\n            footLeanDistance,\n          ),\n        );\n        state.stepProgress = constrain(\n          0,\n          1,\n          state.stepProgress + dtSeconds / this.config.stepDuration,\n        );\n      }\n    }\n  }\n\n  private getInitialLegState(pal: PalControlData, leg: PalLegGeom): LegState {\n    return {\n      lastFootOnFloorXY: leg.getIdealFootRestingXY(),\n      lastFootOnFloorPalPosition: pal.position,\n      stepProgress: 0,\n      restTimer: 0,\n      currentStepMaxLift: 1,\n    };\n  }\n\n  private getLegState(pal: PalControlData, leg: PalLegGeom): LegState {\n    const state = this.legStates.get(leg);\n    if (state) {\n      return state;\n    }\n\n    const initialState = this.getInitialLegState(pal, leg);\n    this.legStates.set(leg, initialState);\n    return initialState;\n  }\n\n  private getLegUpdate(pal: PalControlData, leg: PalLegGeom): PalLegGeomUpdate {\n    const state = this.getLegState(pal, leg);\n    return {\n      footXY: this.getFootXY(pal, leg, state),\n      footProjectionOrigin: this.getFootOrigin(pal, leg, state),\n      liftAmount: this.getLegLiftAmount(state),\n    };\n  }\n\n  private getFootXY(\n    pal: PalControlData,\n    leg: PalLegGeom,\n    state: LegState,\n  ): Vector2 {\n    if (isStepping(state)) {\n      const start = state.lastFootOnFloorXY;\n      const target = this.getPredictedIdealFootXYAtEndOfOfStep(pal, leg, state);\n      return start.lerp(target, state.stepProgress);\n    }\n\n    return state.lastFootOnFloorXY;\n  }\n\n  private getFootOrigin(\n    pal: PalControlData,\n    leg: PalLegGeom,\n    state: LegState,\n  ): Vector2 {\n    if (isStepping(state)) {\n      return state.lastFootOnFloorPalPosition.lerp(\n        pal.position,\n        state.stepProgress,\n      );\n    }\n\n    return state.lastFootOnFloorPalPosition;\n  }\n\n  private getPredictedIdealFootXYAtEndOfOfStep(\n    pal: PalControlData,\n    leg: PalLegGeom,\n    state: LegState,\n  ): Vector2 {\n    const timeRemaining = (1.4 - state.stepProgress) * this.config.stepDuration;\n\n    const predictedPosition = pal\n      .getVelocity()\n      .scale(timeRemaining)\n      .add(pal.position);\n\n    const predictedHeading = pal.heading + pal.headingVelocity * timeRemaining;\n\n    return Vector2.fromPolar(\n      predictedHeading + leg.angleOffset,\n      leg.floorRadius,\n    ).add(predictedPosition);\n  }\n\n  private getLegLiftAmount({\n    stepProgress,\n    currentStepMaxLift,\n  }: LegState): number {\n    return Math.sin(stepProgress * Math.PI) * currentStepMaxLift;\n  }\n}\n","import Color from 'color';\nimport { varyRelative, varyAbsolute, random, randomInt } from '../lib/utils';\nimport { BLUE } from './colors';\n\nexport type PalConfig = {\n  radius: number;\n  bodHeight: number;\n  bodBob: number;\n  eyeY: number;\n  eyeX: number;\n  eyeRadius: number;\n  mouthThickness: number;\n  mouthY: number;\n  mouthWidth: number;\n  mouthSmile: number;\n  buttTop: number;\n  buttBottom: number;\n  buttThickness: number;\n  color: Color;\n  hipHeight: number;\n  kneeScale: number;\n  legMaxLift: number;\n  kneeMaxOut: number;\n  stepDuration: number;\n  stepRestDuration: number;\n  stepThreshold: number;\n  fullStepDistance: number;\n  legWidth: number;\n  legPairs: number;\n};\n\nexport const classicPalConfig: PalConfig = {\n  radius: 14,\n  bodHeight: 25,\n  bodBob: 15,\n  eyeY: 6,\n  eyeX: 5,\n  eyeRadius: 2,\n  mouthThickness: 2,\n  mouthY: 2,\n  mouthWidth: 8,\n  mouthSmile: 4,\n  buttTop: 6,\n  buttBottom: 12,\n  buttThickness: 1.4,\n  color: BLUE.lighten(0.2),\n  hipHeight: 10,\n  kneeScale: 1.3,\n  legMaxLift: 0.3,\n  kneeMaxOut: 14,\n  stepDuration: 0.2,\n  stepRestDuration: 0.2,\n  stepThreshold: 0.2,\n  fullStepDistance: 20,\n  legWidth: 4,\n  legPairs: 1,\n};\n\nexport const generateRandomPalConfig = (): PalConfig => {\n  const radius = varyRelative(14, 0.2);\n  const hipHeight = varyRelative(radius * 0.7, 0.3);\n  const bodHeight = varyRelative(radius * 2, 0.3);\n  const legLength = bodHeight - (radius - hipHeight); // typical: 24\n\n  return {\n    radius,\n    bodHeight,\n    bodBob: varyRelative(radius, 0.2),\n    eyeY: varyRelative(radius * 0.5, 0.2),\n    eyeX: varyRelative(radius * 0.4, 0.3),\n    eyeRadius: varyRelative(radius * 0.15, 0.4),\n    mouthThickness: varyRelative(radius * 0.15, 0.4),\n    mouthY: varyAbsolute(0, radius * 0.2),\n    mouthWidth: varyRelative(radius * 0.5, 0.3),\n    mouthSmile: varyRelative(radius * 0.3, 0.3),\n    buttTop: varyRelative(radius * 0.4, 0.2),\n    buttBottom: varyRelative(radius * 0.85, 0.15),\n    buttThickness: varyRelative(radius * 0.1, 0.5),\n    color: BLUE.lighten(random(-0.2, 0.2))\n      .saturate(random(-0.2, 0.2))\n      .rotate(random(-10, 10)),\n    hipHeight,\n    kneeScale: varyAbsolute(1.3, 0.3),\n    legMaxLift: random(0.2, 0.5),\n    kneeMaxOut: varyRelative(legLength * 0.6, 0.4),\n    stepDuration: varyRelative(legLength * 0.01, 0.4),\n    stepRestDuration: varyRelative(legLength * 0.0083, 0.4),\n    stepThreshold: varyRelative(legLength * 0.01, 0.4),\n    fullStepDistance: varyRelative(legLength * 0.7, 0.4),\n    legWidth: varyRelative(radius * 0.3, 0.4),\n    legPairs: randomInt(1, 4),\n  };\n};\n","import Color from 'color';\n\n// https://coolors.co/f8ffe5-06d6a0-1b9aaa-ef476f-ffc43d\nexport const LIGHT_BG = new Color('#F8FFE5');\nexport const TEAL = new Color('#06D6A0');\nexport const BLUE = new Color('#1B9AAA');\nexport const RED = new Color('#EF476F');\nexport const YELLOW = new Color('#FFC43D');\n"],"names":["$c8b7d6dbce52e1f1$export$af6a0ce085ef7632","$7ic2V","default","getVelocity","this","getHeadingVec","scale","speed","$6i1fg","fromPolar","heading","entity","position","super","headingVelocity","$c8b7d6dbce52e1f1$export$7f91c1b5fe2069f9","setTarget","newTarget","target","update","dtMilliseconds","dtSeconds","angleToTarget","data","angleTo","distance","distanceTo","accelerate","angleDelta","$96RKe","normalizeAngle","lastHeading","amt","lastSpeed","constrain","avgSpeed","add","entity1","position1","addComponent","$c8b7d6dbce52e1f1$export$ca0888e697597df4","setPosition","position2","dtSeconds1","lastPosition","entity2","position3","$faf860a16eac1785$export$2e2bcd8739ae039","onRemove","onAddedToScene","scene","onRemovedFromScene","scene1","beforeUpdate","delta","delta1","afterUpdate","delta2","beforeDraw","ctx","time","draw","ctx1","time1","afterDraw","ctx2","time2","getScene","$15a201ffde8bbde4$export$b5bc26e198ce73d0","n","fn","result","i","push","$15a201ffde8bbde4$export$3a89f8d6f6bf6c9f","a","b","$15a201ffde8bbde4$export$4444e85a8e8eb4d3","$15a201ffde8bbde4$export$c4e2ecac49351ef2","min","max","Math","$15a201ffde8bbde4$export$f65a7599bbc6b121","a1","b1","a2","b2","$15a201ffde8bbde4$export$4385e60b38654f68","random","$15a201ffde8bbde4$export$3c5f89dae98e900b","floor","$15a201ffde8bbde4$export$cb053c0bd718c500","base","amount","$15a201ffde8bbde4$export$81f57db650c22c0c","$15a201ffde8bbde4$export$4812e460280c6ef2","arr","length","$15a201ffde8bbde4$export$bffa455ba8c619a6","reduce","concat","$15a201ffde8bbde4$export$f70730c3d1fc524e","Array","from","Set","$15a201ffde8bbde4$export$bc86dfbf7795668c","a1Items","item","has","$15a201ffde8bbde4$export$3f063810d7bf01bd","items","getKey","groups","Map","key","existing","get","set","$15a201ffde8bbde4$export$b035e44d7bb4278f","slice","sort","$15a201ffde8bbde4$export$b29f828819edca8d","condition","pass","fail","$15a201ffde8bbde4$export$8af121ae7401c4","array","idx","indexOf","splice","$15a201ffde8bbde4$export$2cef06c20297c17d","Promise","resolve","window","requestAnimationFrame","$15a201ffde8bbde4$export$a57f5080a3bcc90a","cb","shouldCancel","cancel","$15a201ffde8bbde4$export$5150077fc2e7c662","entries","value","$15a201ffde8bbde4$export$ed97f33186d4b816","object","Object","keys","$15a201ffde8bbde4$export$3e9f948b41964866","$15a201ffde8bbde4$export$8e16b83750b44988","filter","$15a201ffde8bbde4$export$e3df76cf4464bc81","angle","size","$15a201ffde8bbde4$export$9013bf5175691fac","PI","$15a201ffde8bbde4$export$7d15b64cf5a3a4c4","$15a201ffde8bbde4$export$448332262467e042","newArr","j","$15a201ffde8bbde4$export$218c8c3169c024d2","prefix","toString","$15a201ffde8bbde4$export$93d719890ad66653","fallback","localStorage","getItem","JSON","parse","error","console","log","$15a201ffde8bbde4$export$5aa524d86254b4f","stringified","stringify","setItem","$15a201ffde8bbde4$export$61fc7d43ac8f84b0","ms","timeoutHandle","args","undefined","clearTimeout","setTimeout","$15a201ffde8bbde4$export$a4f4bb6b1453fff5","obj","prototype","hasOwnProperty","call","$15a201ffde8bbde4$export$3988ae62b71be9a3","$15a201ffde8bbde4$export$6f9d191e539f6e18","epsilon","abs","$15a201ffde8bbde4$export$e372b34e4bfc2a00","setupResolve","setupReject","reject","$db8edb9c8035529a$export$2e2bcd8739ae039","radius","cos","sin","points","memo","p","ZERO","div","x","y","magnitudeSquared","magnitude","sqrt","atan2","isInPolygon","polygon","isInside","currentIdx","previousIdx","currentX","currentY","previousX","previousY","equals","other","x1","y1","dx","dy","other1","sub","angleBetween","other2","dot","other3","scale1","negate","x2","y2","x3","y3","ceil","round","withMagnitude","newMagnitude","normalize","withAngle","newAngle","rotate","byAngle","lerp","other4","x4","y4","$d65184152d4f8f04$var$HALF_PI","$d65184152d4f8f04$export$2e2bcd8739ae039","setAnimationController","animationController","controlData","legs","bobAmount","$87DYR","assert","forEach","leg","getBod","bob","config","bodBob","$4TER2","bodHeight","getComponent","$19ECN","PalControlData","shuffle","flatten","times","legPairs","progress","$hPLAZ","$4f87fcbb88c6d8cd$export$2e2bcd8739ae039","circumference","getBoundingBox","$9x7hn","center","pointOnCircumference","radians","containsPoint","point","intersectsCircle","withRadius","radius1","freeze","$615946a1704d0ee5$export$2e2bcd8739ae039","left","top","right","bottom","contains","intersects","getCenter","origin","width","height","$b235441dae11af26$var$getLegRadius","hipHeight","legWidth","$b235441dae11af26$export$2e2bcd8739ae039","footXY","footOrigin","footProjectionOrigin","liftAmount","getIdealFootRestingXY","palData","angleOffset","floorRadius","getFootXY","getFootZ","getHipZ","legMaxLift","getFootOrigin","getKneeXY","kneeRadius","kneeMaxOut","getKneeZ","getKneeOrigin","getHipOrigin","getHipXY","hipRadius","bod","palGeom","kneeScale","$90518cd969dab22c$export$2b62a06a9fee979c","message","Error","$90518cd969dab22c$export$a7a9523472993e97","$d890687abe7100ac$var$HALF_PI","$d890687abe7100ac$export$2e2bcd8739ae039","setLineDash","beginPath","geom","ellipse","fillStyle","fill","l","drawLeg","drawBod","colorDarkenAmount","legColor","color","darken","hip","projectZ","knee","foot","moveTo","quadraticCurveTo","lineCap","strokeStyle","lineWidth","stroke","save","$yW6N3","circle","clip","faceX","eyeX","eyeY","eyeRadius","mouthWidth","mouthY","mouthSmile","mouthThickness","makeButtLine","buttThickness","restore","ctx3","bod1","buttX","buttTop","buttBottom","xy","z","$2dNNZ","$1109e93344f60944$export$e1d786d2f707b414","arc","$1109e93344f60944$export$bb654e07daaf8c3a","path","segments","getStart","segment","$b2Aev","lineTo","getEnd","$hKbPz","startAngle","endAngle","isAnticlockwise","$fc03a60dcabadc87$export$2e2bcd8739ae039","line","start","end","getDelta","getLength","getPointAtPosition","constrainedPosition","getAngleAtPosition","$6Cnop","$b70e849589839c73$var$isSlopeVertical","slope","Infinity","$b70e849589839c73$export$2e2bcd8739ae039","displacement","slope1","fromSlopeAndDisplacement","isVertical","verticalX","perpendicularSlope","isParallelTo","perpendicularLineThroughPoint","point1","fromSlopeAndPoint","pointAtIntersectionWith","$5ee2b6ddc809de64$export$2e2bcd8739ae039","angleDifference","proportion","mapRange","$1c28b47185d2b680$var$isStepping","stepProgress","$1c28b47185d2b680$export$2e2bcd8739ae039","pal","leg1","updateLegState","legUpdates","map","getLegUpdate","sum","canLiftLeg","pal1","legs1","leg2","includes","enoughLegsOnFloor","getLegState","anyStepsJustStarted","some","state","pal2","legs2","restTimer","stepRestDuration","$1c28b47185d2b680$var$isResting","stepDuration","lastFootOnFloorXY","lastFootOnFloorPalPosition","footLeanDistance","stepThreshold","currentStepMaxLift","fullStepDistance","getInitialLegState","pal3","leg3","pal4","leg4","legStates","initialState","pal5","leg5","getLegLiftAmount","pal6","leg6","getPredictedIdealFootXYAtEndOfOfStep","pal7","leg7","state1","pal8","leg8","state2","timeRemaining","predictedPosition","predictedHeading","$c9KGA","BLUE","lighten","$37a3652ff8cf545d$export$8f4ea176c3dd079d","varyRelative","legLength","varyAbsolute","saturate","randomInt","$parcel$interopDefault","$0FWmF","$854a9ca44c0d4666$export$738c3b9a44c87ecc"],"version":3,"file":"index.fe45b746.js.map"}