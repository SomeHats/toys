{"mappings":"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","sources":["src/lib/assert.ts","src/lib/utils.ts","src/lib/geom/Vector2.ts","src/lib/DebugDraw.ts","src/lib/geom/AABB.ts","src/lib/KeyCode.tsx","src/lib/scene/Component.ts","src/lib/scene/SceneObject.ts","src/lib/scene/SortOrderProvider.ts","src/lib/scene/SceneSystem.ts","src/platformer/platformer-main.tsx","src/lib/scene/Scene.ts","src/lib/scene/Entity.ts","src/lib/ButtonMapping.tsx"],"sourcesContent":["export function fail(message: string): never {\n  throw new Error(message);\n}\n\nexport function assert(value: unknown, message?: string): asserts value {\n  if (!value) {\n    fail(message || 'Assertion Error');\n  }\n}\n","export type TimeoutId = ReturnType<typeof setTimeout>;\nexport type IntervalId = ReturnType<typeof setInterval>;\n\nexport type ReadonlyRecord<K extends keyof any, T> = {\n  readonly [P in K]: T;\n};\n\nexport function times<T>(n: number, fn: (idx: number) => T): Array<T> {\n  const result = [];\n  for (let i = 0; i < n; i++) {\n    result.push(fn(i));\n  }\n  return result;\n}\n\nexport function lerp(a: number, b: number, n: number): number {\n  return (b - a) * n + a;\n}\n\nexport function invLerp(a: number, b: number, n: number): number {\n  return (n - a) / (b - a);\n}\n\nexport function constrain(min: number, max: number, n: number): number {\n  return Math.min(max, Math.max(min, n));\n}\n\nexport function constrainWrapped(min: number, max: number, n: number): number {\n  const size = max - min;\n  n = n - min;\n  while (n < 0) {\n    n += size;\n  }\n  n = n % size;\n  return min + n;\n}\n\nexport function mapRange(\n  a1: number,\n  b1: number,\n  a2: number,\n  b2: number,\n  n: number,\n): number {\n  return lerp(a2, b2, invLerp(a1, b1, n));\n}\n\nexport function random(a: number, b?: number) {\n  if (typeof b === 'number') {\n    return lerp(a, b, Math.random());\n  }\n  return lerp(0, a, Math.random());\n}\n\nexport function randomInt(a: number, b?: number) {\n  return Math.floor(random(a, b));\n}\n\nexport function varyAbsolute(base: number, amount: number): number {\n  return random(base - amount, base + amount);\n}\n\nexport function varyRelative(base: number, amount: number): number {\n  return varyAbsolute(base, base * amount);\n}\n\nexport function sample<T>(arr: ReadonlyArray<T>): T {\n  return arr[Math.floor(random(arr.length))];\n}\n\nexport function flatten<T>(arr: ReadonlyArray<ReadonlyArray<T>>): Array<T> {\n  return arr.reduce<Array<T>>((a, b) => a.concat(b), []);\n}\n\nexport function uniq<T>(arr: T[]): Array<T> {\n  return Array.from(new Set(arr));\n}\n\nexport function intersection<T>(a1: T[], a2: T[]): T[] {\n  const a1Items = new Set(a1);\n  const result = new Set<T>();\n  for (const item of a2) {\n    if (a1Items.has(item)) {\n      result.add(item);\n    }\n  }\n  return Array.from(result);\n}\n\nexport function groupBy<T, Key>(\n  items: ReadonlyArray<T>,\n  getKey: (item: T) => Key,\n): Map<Key, Array<T>> {\n  const groups = new Map<Key, T[]>();\n  for (const item of items) {\n    const key = getKey(item);\n    const existing = groups.get(key);\n    if (existing) {\n      existing.push(item);\n    } else {\n      groups.set(key, [item]);\n    }\n  }\n\n  return groups;\n}\n\nexport function sortBy<T, Key extends number | string>(\n  items: ReadonlyArray<T>,\n  getKey: (item: T) => Key,\n): Array<T> {\n  return items.slice().sort((a, b) => (getKey(a) < getKey(b) ? -1 : 1));\n}\n\nexport function partition<T>(\n  items: ReadonlyArray<T>,\n  condition: (item: T) => boolean,\n): [T[], T[]] {\n  const pass = [];\n  const fail = [];\n  for (const item of items) {\n    if (condition(item)) {\n      pass.push(item);\n    } else {\n      fail.push(item);\n    }\n  }\n  return [pass, fail];\n}\n\nexport function randomColor(): string {\n  return `rgb(${Math.floor(random(256))},${Math.floor(\n    random(256),\n  )},${Math.floor(random(256))})`;\n}\n\nexport function removeFromArray<T>(array: Array<T>, item: T) {\n  const idx = array.indexOf(item);\n  if (idx !== -1) {\n    array.splice(idx, 1);\n  }\n}\n\nexport function frame(): Promise<number> {\n  return new Promise((resolve) => {\n    window.requestAnimationFrame((time) => resolve(time));\n  });\n}\n\nexport function wait(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(() => resolve(), ms));\n}\n\nexport async function frameLoop(\n  cb: (time: number, cancel: () => void) => void,\n) {\n  let shouldCancel = false;\n  const cancel = () => {\n    shouldCancel = true;\n  };\n  while (true) {\n    cb(await frame(), cancel);\n    if (shouldCancel) {\n      return;\n    }\n  }\n}\n\nexport function fromEntries<K extends PropertyKey, V>(\n  entries: ReadonlyArray<[K, V]>,\n): Record<K, V> {\n  const result = {} as Record<K, V>;\n  for (const [key, value] of entries) {\n    result[key] = value;\n  }\n  return result;\n}\n\nexport function keys<K extends string, V>(object: Record<K, V>): Array<K> {\n  return Object.keys(object) as K[];\n}\n\nexport function values<K extends string, V>(object: Record<K, V>): Array<V> {\n  return Object.values(object) as V[];\n}\n\nexport function entries<K extends string, V>(\n  object: Record<K, V>,\n): Array<[K, V]> {\n  return Object.entries(object) as [K, V][];\n}\n\nexport function compact<T>(arr: ReadonlyArray<T>): Array<NonNullable<T>> {\n  return arr.filter(\n    (item): item is NonNullable<T> => item !== null && item !== undefined,\n  );\n}\n\nexport function normalizeAngle(angle: number): number {\n  return constrainWrapped(-Math.PI, Math.PI, angle);\n}\n\nexport function clamp(a: number, b: number, n: number): number {\n  return Math.max(Math.min(a, b), Math.min(Math.max(a, b), n));\n}\n\nexport function shuffle<T>(arr: ReadonlyArray<T>): Array<T> {\n  const newArr = arr.slice();\n  for (let i = newArr.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [newArr[i], newArr[j]] = [newArr[j], newArr[i]];\n  }\n  return newArr;\n}\n\nexport function getId(prefix = ''): string {\n  return `${prefix}${Math.random().toString(36).slice(1)}`;\n}\n\nexport function getLocalStorageItem(\n  key: string,\n  fallback: unknown = null,\n): unknown {\n  try {\n    // Get from local storage by key\n    const item = window.localStorage.getItem(key);\n    // Parse stored json or if none return initialValue\n    return item ? JSON.parse(item) : fallback;\n  } catch (error) {\n    // If error also return initialValue\n    console.log(error);\n    return fallback;\n  }\n}\n\nexport function setLocalStorageItem(key: string, value: unknown) {\n  const stringified = JSON.stringify(value);\n  try {\n    window.localStorage.setItem(key, stringified);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function debounce<Args extends Array<unknown>>(\n  ms: number,\n  fn: (...args: Args) => void,\n): (...args: Args) => void {\n  let timeoutHandle: TimeoutId | undefined;\n\n  return (...args: Args) => {\n    if (timeoutHandle !== undefined) {\n      clearTimeout(timeoutHandle);\n    }\n    timeoutHandle = setTimeout(() => fn(...args), ms);\n  };\n}\n\nexport function exhaustiveSwitchError(value: never): never {\n  throw new Error(`Unknown switch case ${value}`);\n}\n\nexport function has(obj: object, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function get<K extends string, V>(\n  obj: Partial<Record<K, V>>,\n  key: K,\n): V | undefined;\nexport function get(obj: object, key: string): unknown;\nexport function get(obj: object, key: string): unknown {\n  if (!has(obj, key)) {\n    return undefined;\n  }\n  return (obj as any)[key];\n}\n\nexport function approxEq(a: number, b: number, epsilon: number): boolean {\n  return Math.abs(a - b) < epsilon;\n}\n\nexport function queueMicrotask(callback: () => void): () => void {\n  let isCancelled = false;\n  Promise.resolve()\n    .then(() => {\n      if (isCancelled) {\n        return;\n      }\n      callback();\n    })\n    .catch((e) =>\n      setTimeout(() => {\n        throw e;\n      }),\n    );\n  return () => {\n    isCancelled = true;\n  };\n}\n\nexport function promiseFromEvents<T>(\n  setupResolve: (resolve: (value: T) => void) => void,\n  setupReject: (reject: (error: unknown) => void) => void,\n): Promise<T> {\n  return new Promise<T>((resolve, reject) => {\n    setupResolve(resolve);\n    setupReject(reject);\n  });\n}\n\nexport function mapObjectValues<K extends string, V, U>(\n  object: Record<K, V>,\n  fn: (value: V, key: K, obj: Record<K, V>) => U,\n): Record<K, U> {\n  const result = {} as Record<K, U>;\n  for (const [k, v] of entries(object)) {\n    result[k] = fn(v, k, object);\n  }\n  return result;\n}\n","import { normalizeAngle, lerp } from '../utils';\n\nexport default class Vector2 {\n  static readonly ZERO = new Vector2(0, 0);\n\n  static fromPolar(angle: number, radius: number) {\n    return new Vector2(radius * Math.cos(angle), radius * Math.sin(angle));\n  }\n\n  static average(points: ReadonlyArray<Vector2>): Vector2 {\n    const sum = points.reduce((memo, p) => memo.add(p), Vector2.ZERO);\n    return sum.div(points.length);\n  }\n\n  static fromVectorLike({ x, y }: { x: number; y: number }): Vector2 {\n    return new Vector2(x, y);\n  }\n\n  constructor(public readonly x: number, public readonly y: number) {}\n\n  toString(): string {\n    return `Vector2(${this.x}, ${this.y})`;\n  }\n\n  get magnitudeSquared(): number {\n    return this.x * this.x + this.y * this.y;\n  }\n\n  get magnitude(): number {\n    return Math.sqrt(this.magnitudeSquared);\n  }\n\n  get angle(): number {\n    return Math.atan2(this.y, this.x);\n  }\n\n  isInPolygon(polygon: ReadonlyArray<Vector2>): boolean {\n    // ray-casting algorithm based on\n    // http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n\n    const { x, y } = this;\n\n    let isInside = false;\n    for (\n      let currentIdx = 0, previousIdx = polygon.length - 1;\n      currentIdx < polygon.length;\n      previousIdx = currentIdx++\n    ) {\n      const { x: currentX, y: currentY } = polygon[currentIdx];\n      const { x: previousX, y: previousY } = polygon[previousIdx];\n      const doesIntersect =\n        currentY > y != previousY > y &&\n        x <\n          ((previousX - currentX) * (y - currentY)) / (previousY - currentY) +\n            currentX;\n\n      if (doesIntersect) {\n        isInside = !isInside;\n      }\n    }\n\n    return isInside;\n  }\n\n  equals(other: Vector2) {\n    return this === other || (this.x === other.x && this.y === other.y);\n  }\n\n  distanceTo({ x, y }: Vector2): number {\n    const dx = x - this.x;\n    const dy = y - this.y;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n  angleTo(other: Vector2): number {\n    return other.sub(this).angle;\n  }\n\n  angleBetween(other: Vector2): number {\n    return normalizeAngle(\n      Math.atan2(other.y, other.x) - Math.atan2(this.y, this.x),\n    );\n  }\n\n  dot(other: Vector2): number {\n    return this.x * other.x + this.y * other.y;\n  }\n\n  div(scale: number): Vector2 {\n    return new Vector2(this.x / scale, this.y / scale);\n  }\n\n  scale(scale: number): Vector2 {\n    return new Vector2(this.x * scale, this.y * scale);\n  }\n\n  negate(): Vector2 {\n    return this.scale(-1);\n  }\n\n  add({ x, y }: Vector2): Vector2 {\n    return new Vector2(this.x + x, this.y + y);\n  }\n\n  sub({ x, y }: Vector2): Vector2 {\n    return new Vector2(this.x - x, this.y - y);\n  }\n\n  floor(): Vector2 {\n    return new Vector2(Math.floor(this.x), Math.floor(this.y));\n  }\n\n  ceil(): Vector2 {\n    return new Vector2(Math.ceil(this.x), Math.ceil(this.y));\n  }\n\n  round(): Vector2 {\n    return new Vector2(Math.round(this.x), Math.round(this.y));\n  }\n\n  withMagnitude(newMagnitude: number): Vector2 {\n    return Vector2.fromPolar(this.angle, newMagnitude);\n  }\n\n  normalize(): Vector2 {\n    return this.withMagnitude(1);\n  }\n\n  withAngle(newAngle: number): Vector2 {\n    return Vector2.fromPolar(newAngle, this.magnitude);\n  }\n\n  rotate(byAngle: number): Vector2 {\n    return this.withAngle(this.angle + byAngle);\n  }\n\n  lerp(other: Vector2, n: number): Vector2 {\n    return new Vector2(lerp(this.x, other.x, n), lerp(this.y, other.y, n));\n  }\n}\n","import AABB from './geom/AABB';\nimport Vector2 from './geom/Vector2';\n\nconst DEFAULT_DEBUG_COLOR = 'magenta';\nconst LABEL_OFFSET = new Vector2(5, 0);\nconst DEBUG_POINT_SIZE = 3;\nconst HAIRLINE = 0.5;\nconst DEBUG_ARROW_ANGLE = Math.PI * 0.75;\nconst DEBUG_ARROW_SIZE = 5;\n\nexport type StrokeOptions = {\n  strokeWidth?: number;\n  stroke?: string;\n  strokeCap?: 'butt' | 'round' | 'square';\n  strokeDash?: number[];\n  strokeDashOffset?: number;\n  strokeJoin?: 'bevel' | 'round' | 'miter';\n};\n\nexport type FillOptions = {\n  fill?: string;\n};\n\nexport type DebugOptions = {\n  color?: string;\n  label?: string;\n};\n\nexport type StrokeAndFillOptions = StrokeOptions & FillOptions;\n\nexport class DebugDraw {\n  constructor(private readonly ctx: CanvasRenderingContext2D) {}\n\n  public clear(fill?: string) {\n    if (!fill) {\n      this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n      return;\n    }\n\n    this.applyFillOptions({ fill });\n    this.ctx.fillRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n  }\n\n  public beginPath() {\n    this.ctx.beginPath();\n  }\n\n  public moveTo({ x, y }: Vector2) {\n    this.ctx.moveTo(x, y);\n  }\n\n  public lineTo({ x, y }: Vector2) {\n    this.ctx.lineTo(x, y);\n  }\n\n  public arc(\n    { x, y }: Vector2,\n    radius: number,\n    startAngle: number,\n    endAngle: number,\n    anticlockwise?: boolean,\n  ) {\n    this.ctx.arc(x, y, radius, startAngle, endAngle, anticlockwise);\n  }\n\n  public arcTo(p1: Vector2, p2: Vector2, radius: number) {\n    this.ctx.arcTo(p1.x, p1.y, p2.x, p2.y, radius);\n  }\n\n  public applyStrokeOptions({\n    strokeWidth = 1,\n    stroke = undefined,\n    strokeCap = 'butt',\n    strokeDash = [],\n    strokeDashOffset = 0,\n    strokeJoin = 'round',\n  }: StrokeOptions) {\n    if (stroke) {\n      this.ctx.lineWidth = strokeWidth;\n      this.ctx.strokeStyle = stroke;\n      this.ctx.lineCap = strokeCap;\n      this.ctx.setLineDash(strokeDash);\n      this.ctx.lineDashOffset = strokeDashOffset;\n      this.ctx.lineJoin = strokeJoin;\n    }\n  }\n\n  public stroke(options: StrokeOptions) {\n    if (options.stroke) {\n      this.applyStrokeOptions(options);\n      this.ctx.stroke();\n    }\n  }\n\n  public applyFillOptions({ fill = undefined }: FillOptions) {\n    if (fill) {\n      this.ctx.fillStyle = fill;\n    }\n  }\n\n  public fill(options: FillOptions) {\n    if (options.fill) {\n      this.applyFillOptions(options);\n      this.ctx.fill();\n    }\n  }\n\n  public applyStrokeAndFillOptions(options: StrokeAndFillOptions) {\n    this.applyFillOptions(options);\n    this.applyStrokeOptions(options);\n  }\n\n  public strokeAndFill(options: StrokeAndFillOptions) {\n    this.fill(options);\n    this.stroke(options);\n  }\n\n  public getDebugStrokeOptions(\n    color: string = DEFAULT_DEBUG_COLOR,\n  ): StrokeOptions {\n    return { stroke: color, strokeWidth: HAIRLINE };\n  }\n\n  public debugStroke(color: string = DEFAULT_DEBUG_COLOR) {\n    this.stroke(this.getDebugStrokeOptions(color));\n  }\n\n  public fillText(text: string, position: Vector2, options: FillOptions = {}) {\n    this.applyFillOptions(options);\n    this.ctx.fillText(text, position.x, position.y);\n  }\n\n  public circle(\n    center: Vector2,\n    radius: number,\n    options: StrokeAndFillOptions,\n  ) {\n    this.beginPath();\n    this.arc(center, radius, 0, 2 * Math.PI);\n    this.strokeAndFill(options);\n  }\n\n  public ellipse(\n    center: Vector2,\n    radiusX: number,\n    radiusY: number,\n    options: StrokeAndFillOptions,\n  ) {\n    this.beginPath();\n    this.ctx.ellipse(center.x, center.y, radiusX, radiusY, 0, 0, Math.PI * 2);\n    this.strokeAndFill(options);\n  }\n\n  public debugLabel(\n    label: string | undefined,\n    position: Vector2,\n    color: string,\n  ) {\n    if (label) {\n      this.applyFillOptions({ fill: color });\n      this.fillText(label, position.add(LABEL_OFFSET));\n    }\n  }\n\n  public debugPointX(\n    position: Vector2,\n    { color = DEFAULT_DEBUG_COLOR, label = undefined }: DebugOptions = {},\n  ) {\n    this.debugLabel(label, position, color);\n\n    this.beginPath();\n    this.ctx.moveTo(\n      position.x - DEBUG_POINT_SIZE,\n      position.y - DEBUG_POINT_SIZE,\n    );\n    this.ctx.lineTo(\n      position.x + DEBUG_POINT_SIZE,\n      position.y + DEBUG_POINT_SIZE,\n    );\n    this.ctx.moveTo(\n      position.x + DEBUG_POINT_SIZE,\n      position.y - DEBUG_POINT_SIZE,\n    );\n    this.ctx.lineTo(\n      position.x - DEBUG_POINT_SIZE,\n      position.y + DEBUG_POINT_SIZE,\n    );\n    this.stroke({ strokeWidth: HAIRLINE, stroke: color });\n  }\n\n  public debugPointO(\n    position: Vector2,\n    { color = DEFAULT_DEBUG_COLOR, label = undefined }: DebugOptions = {},\n  ) {\n    this.debugLabel(label, position, color);\n\n    this.circle(position, DEBUG_POINT_SIZE, {\n      strokeWidth: HAIRLINE,\n      stroke: color,\n    });\n  }\n\n  public debugArrow(\n    start: Vector2,\n    end: Vector2,\n    { color = DEFAULT_DEBUG_COLOR, label = undefined }: DebugOptions = {},\n  ) {\n    this.debugLabel(label, Vector2.average([start, end]), color);\n\n    this.ctx.beginPath();\n    this.moveTo(start);\n    this.lineTo(end);\n\n    const vector = end.sub(start);\n    const arrowLeftPoint = vector\n      .rotate(-DEBUG_ARROW_ANGLE)\n      .withMagnitude(DEBUG_ARROW_SIZE)\n      .add(end);\n    const arrowRightPoint = vector\n      .rotate(+DEBUG_ARROW_ANGLE)\n      .withMagnitude(DEBUG_ARROW_SIZE)\n      .add(end);\n\n    this.moveTo(arrowLeftPoint);\n    this.lineTo(end);\n    this.lineTo(arrowRightPoint);\n    this.stroke({ strokeWidth: HAIRLINE, stroke: color });\n  }\n\n  public debugVectorAtPoint(\n    vector: Vector2,\n    base: Vector2,\n    options?: DebugOptions,\n  ) {\n    this.debugArrow(base, base.add(vector), options);\n  }\n\n  public polygon(\n    polygon: ReadonlyArray<Vector2>,\n    options: StrokeAndFillOptions = {},\n  ) {\n    this.beginPath();\n    this.moveTo(polygon[polygon.length - 1]);\n    for (const point of polygon) {\n      this.lineTo(point);\n    }\n    this.strokeAndFill(options);\n  }\n\n  public polyLine(points: ReadonlyArray<Vector2>, options: StrokeOptions = {}) {\n    this.beginPath();\n    this.moveTo(points[0]);\n    for (let i = 1; i < points.length; i++) {\n      this.lineTo(points[i]);\n    }\n    this.stroke(options);\n  }\n\n  public debugPolygon(\n    polygon: ReadonlyArray<Vector2>,\n    { color = DEFAULT_DEBUG_COLOR, label = undefined }: DebugOptions = {},\n  ) {\n    this.debugLabel(label, polygon[0], color);\n    this.polygon(polygon, this.getDebugStrokeOptions(color));\n  }\n\n  public debugPolyLine(\n    polyLine: ReadonlyArray<Vector2>,\n    { color = DEFAULT_DEBUG_COLOR, label = undefined }: DebugOptions = {},\n  ) {\n    this.debugLabel(label, polyLine[0], color);\n    this.polyLine(polyLine, this.getDebugStrokeOptions(color));\n  }\n\n  public aabb(\n    aabb: AABB,\n    opts: StrokeAndFillOptions & { debug?: DebugOptions },\n  ) {\n    if (opts.debug) {\n      this.debugLabel(\n        opts.debug.label,\n        aabb.origin,\n        opts.debug.color || DEFAULT_DEBUG_COLOR,\n      );\n    }\n    this.ctx.beginPath();\n    this.ctx.rect(aabb.left, aabb.top, aabb.width, aabb.height);\n    this.strokeAndFill(opts);\n  }\n}\n","import Vector2 from './Vector2';\n\nexport default class AABB {\n  static fromLeftTopRightBottom(\n    left: number,\n    top: number,\n    right: number,\n    bottom: number,\n  ): AABB {\n    return new AABB(\n      new Vector2(left, top),\n      new Vector2(right - left, bottom - top),\n    );\n  }\n\n  constructor(public readonly origin: Vector2, public readonly size: Vector2) {\n    Object.freeze(this);\n  }\n\n  contains({ x, y }: Vector2): boolean {\n    return (\n      this.left <= x && x <= this.right && this.top <= y && y <= this.bottom\n    );\n  }\n\n  intersects(other: AABB): boolean {\n    return !(\n      this.right < other.left ||\n      this.left > other.right ||\n      this.bottom < other.top ||\n      this.top > other.bottom\n    );\n  }\n\n  getCenter(): Vector2 {\n    return this.origin.add(this.size.scale(0.5));\n  }\n\n  get left(): number {\n    return this.origin.x;\n  }\n\n  get right(): number {\n    return this.origin.x + this.size.x;\n  }\n\n  get top(): number {\n    return this.origin.y;\n  }\n\n  get bottom(): number {\n    return this.origin.y + this.size.y;\n  }\n\n  get width(): number {\n    return this.size.x;\n  }\n\n  get height(): number {\n    return this.size.y;\n  }\n}\n","export enum KeyCode {\n  THAT_KEY_HAS_NO_KEYCODE = 0,\n  BREAK = 3,\n  BACKSPACE_DELETE = 8,\n  TAB = 9,\n  CLEAR = 12,\n  ENTER = 13,\n  SHIFT = 16,\n  CTRL = 17,\n  ALT = 18,\n  PAUSE_BREAK = 19,\n  CAPS_LOCK = 20,\n  ESCAPE = 27,\n  SPACE = 32,\n  PAGE_UP = 33,\n  PAGE_DOWN = 34,\n  END = 35,\n  HOME = 36,\n  LEFT_ARROW = 37,\n  UP_ARROW = 38,\n  RIGHT_ARROW = 39,\n  DOWN_ARROW = 40,\n  SELECT = 41,\n  PRINT = 42,\n  EXECUTE = 43,\n  PRINT_SCREEN = 44,\n  INSERT = 45,\n  DELETE = 46,\n  HELP = 47,\n  DIGIT_0 = 48,\n  DIGIT_1 = 49,\n  DIGIT_2 = 50,\n  DIGIT_3 = 51,\n  DIGIT_4 = 52,\n  DIGIT_5 = 53,\n  DIGIT_6 = 54,\n  DIGIT_7 = 55,\n  DIGIT_8 = 56,\n  DIGIT_9 = 57,\n  COLON = 58,\n  LESS_THAN = 60,\n  A = 65,\n  B = 66,\n  C = 67,\n  D = 68,\n  E = 69,\n  F = 70,\n  G = 71,\n  H = 72,\n  I = 73,\n  J = 74,\n  K = 75,\n  L = 76,\n  M = 77,\n  N = 78,\n  O = 79,\n  P = 80,\n  Q = 81,\n  R = 82,\n  S = 83,\n  T = 84,\n  U = 85,\n  V = 86,\n  W = 87,\n  X = 88,\n  Y = 89,\n  Z = 90,\n  NUMPAD_0 = 96,\n  NUMPAD_1 = 97,\n  NUMPAD_2 = 98,\n  NUMPAD_3 = 99,\n  NUMPAD_4 = 100,\n  NUMPAD_5 = 101,\n  NUMPAD_6 = 102,\n  NUMPAD_7 = 103,\n  NUMPAD_8 = 104,\n  NUMPAD_9 = 105,\n  NUMPAD_MULTIPLY = 106,\n  NUMPAD_ADD = 107,\n  NUMPAD_PERIOD = 108,\n  NUMPAD_SUBTRACT = 109,\n  F1 = 112,\n  F2 = 113,\n  F3 = 114,\n  F4 = 115,\n  F5 = 116,\n  F6 = 117,\n  F7 = 118,\n  F8 = 119,\n  F9 = 120,\n  F10 = 121,\n  F11 = 122,\n  F12 = 123,\n  F13 = 124,\n  F14 = 125,\n  F15 = 126,\n  F16 = 127,\n  F17 = 128,\n  F18 = 129,\n  F19 = 130,\n  F20 = 131,\n  F21 = 132,\n  F22 = 133,\n  F23 = 134,\n  F24 = 135,\n  F25 = 136,\n  F26 = 137,\n  F27 = 138,\n  F28 = 139,\n  F29 = 140,\n  F30 = 141,\n  F31 = 142,\n  F32 = 143,\n  NUM_LOCK = 144,\n  SCROLL_LOCK = 145,\n  AIRPLANE_MODE = 151,\n  PAGE_BACKWARD = 166,\n  PAGE_FORWARD = 167,\n  HOME_KEY = 172,\n  SEMI_COLON = 186,\n  EQUAL_SIGN = 187,\n  COMMA = 188,\n  DASH = 189,\n  PERIOD = 190,\n  FORWARD_SLASH = 191,\n  GRAVE_ACCENT = 192,\n  OPEN_BRACKET = 219,\n  BACK_SLASH = 220,\n  CLOSE_BRACKET = 221,\n  SINGLE_QUOTE = 222,\n}\n","import Entity from './Entity';\nimport Scene from './Scene';\n\nexport default abstract class Component {\n  readonly entity: Entity;\n  constructor(entity: Entity) {\n    this.entity = entity;\n  }\n\n  onRemove() {}\n\n  onAddedToScene(scene: Scene) {}\n\n  onRemovedFromScene(scene: Scene) {}\n\n  beforeUpdate(delta: number) {}\n\n  update(delta: number) {}\n\n  afterUpdate(delta: number) {}\n\n  beforeDraw(ctx: CanvasRenderingContext2D, time: number) {}\n\n  draw(ctx: CanvasRenderingContext2D, time: number) {}\n\n  afterDraw(ctx: CanvasRenderingContext2D, time: number) {}\n\n  getScene(): Scene {\n    return this.entity.getScene();\n  }\n}\n","import { assert } from '../assert';\nimport Scene from './Scene';\n\nconst constructorIdCounts = {} as Record<string, number>;\n\nconst getNextCount = (name: string): string => {\n  if (!constructorIdCounts[name]) constructorIdCounts[name] = 0;\n  return `${name}@${constructorIdCounts[name]++}`;\n};\n\nexport default abstract class SceneObject {\n  id: string = getNextCount(this.constructor.name);\n  private scene: Scene | null = null;\n\n  hasScene(): boolean {\n    return this.scene !== null;\n  }\n\n  getScene(): Scene {\n    assert(this.scene, 'scene must be present');\n    return this.scene;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, elapsedTime: number): void {}\n  update(delta: number): void {}\n\n  addTo(scene: Scene): this {\n    scene.addChild(this);\n    return this;\n  }\n\n  onAddedToScene(scene: Scene) {\n    this.scene = scene;\n  }\n\n  onRemovedFromScene() {\n    this.scene = null;\n  }\n\n  getSortOrder(): number {\n    return 0;\n  }\n}\n","import Component from './Component';\nimport Entity from './Entity';\n\nexport default class SortOrderProvider extends Component {\n  constructor(\n    entity: Entity,\n    private getSortOrderFn: (entity: Entity) => number,\n  ) {\n    super(entity);\n  }\n\n  getSortOrder(): number {\n    return this.getSortOrderFn(this.entity);\n  }\n}\n","// @flow\nimport { assert } from '../assert';\nimport Scene from './Scene';\n\nconst DEFAULT_NAME = '$$AbstractSceneSystem$$';\n\nexport default abstract class SceneSystem {\n  static systemName = DEFAULT_NAME;\n  private scene: Scene | null = null;\n\n  constructor() {\n    assert(\n      this.constructor !== SceneSystem,\n      'SceneSystem is an abstract class that must be extended',\n    );\n    assert(\n      (this.constructor as any).systemName !== DEFAULT_NAME,\n      'classes extending SceneSystem must override SceneSystem.systemName',\n    );\n  }\n\n  getScene(): Scene {\n    assert(this.scene, 'scene is required');\n    return this.scene;\n  }\n\n  afterAddToScene(scene: Scene) {\n    this.scene = scene;\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  beforeRemoveFromScene(scene: Scene) {\n    this.scene = null;\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  beforeUpdate(delta: number) {}\n\n  // eslint-disable-next-line no-unused-vars\n  afterUpdate(delta: number) {}\n\n  // eslint-disable-next-line no-unused-vars\n  beforeDraw(ctx: CanvasRenderingContext2D, time: number) {}\n\n  // eslint-disable-next-line no-unused-vars\n  afterDraw(ctx: CanvasRenderingContext2D, time: number) {}\n}\n","import { ButtonMapping } from '../lib/ButtonMapping';\nimport { DebugDraw, StrokeAndFillOptions } from '../lib/DebugDraw';\nimport AABB from '../lib/geom/AABB';\nimport Vector2 from '../lib/geom/Vector2';\nimport { KeyCode } from '../lib/KeyCode';\nimport Component from '../lib/scene/Component';\nimport Entity from '../lib/scene/Entity';\nimport Scene from '../lib/scene/Scene';\nimport SceneSystem from '../lib/scene/SceneSystem';\n\nclass DebugDrawSystem extends SceneSystem {\n  static systemName = 'DebugDragSystem';\n\n  debugDraw!: DebugDraw;\n\n  afterAddToScene(scene: Scene) {\n    super.afterAddToScene(scene);\n    this.debugDraw = new DebugDraw(scene.ctx);\n  }\n}\n\nclass AABBDrawSystem extends SceneSystem {\n  static systemName = 'AABBDebugDrawSystem';\n\n  debugDraw!: DebugDraw;\n\n  afterAddToScene(scene: Scene) {\n    super.afterAddToScene(scene);\n    this.debugDraw = new DebugDraw(scene.ctx);\n  }\n\n  afterDraw() {}\n}\n\nclass AABBComponent extends Component {\n  public value: AABB;\n\n  constructor(entity: Entity, value: AABB) {\n    super(entity);\n    this.value = value;\n  }\n\n  setOrigin(origin: Vector2) {\n    this.value = new AABB(origin, this.value.size);\n  }\n\n  beforeDraw(ctx: CanvasRenderingContext2D, time: number) {\n    ctx.save();\n    ctx.translate(this.value.left, this.value.top);\n  }\n  afterDraw(ctx: CanvasRenderingContext2D, time: number) {\n    ctx.restore();\n  }\n}\n\nclass AABBRenderer extends Component {\n  constructor(entity: Entity, public opts: StrokeAndFillOptions) {\n    super(entity);\n  }\n\n  getAABB(): AABB {\n    return this.entity.getComponent(AABBComponent).value;\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    this.getScene()\n      .getSystem(DebugDrawSystem)\n      .debugDraw.aabb(new AABB(Vector2.ZERO, this.getAABB().size), this.opts);\n  }\n}\n\nclass PlayerController extends Component {\n  constructor(\n    entity: Entity,\n    public readonly moveSpeed: number,\n    public readonly controls: ButtonMapping<'left' | 'right' | 'jump' | 'down'>,\n  ) {\n    super(entity);\n  }\n\n  update(delta: number) {\n    const aabbComponent = this.entity.getComponent(AABBComponent);\n    let origin = aabbComponent.value.origin;\n    if (this.controls.isDown('left')) {\n      origin = origin.sub(new Vector2(this.moveSpeed * delta, 0));\n    }\n    if (this.controls.isDown('right')) {\n      origin = origin.add(new Vector2(this.moveSpeed * delta, 0));\n    }\n\n    if (this.controls.isDown('jump')) {\n      origin = origin.sub(new Vector2(0, this.moveSpeed * delta));\n    }\n    if (this.controls.isDown('down')) {\n      origin = origin.add(new Vector2(0, this.moveSpeed * delta));\n    }\n    aabbComponent.setOrigin(origin);\n  }\n}\n\nconst scene = new Scene(800, 600, window.devicePixelRatio);\nscene.addSystem(new DebugDrawSystem());\n\nconst player = new Entity();\nplayer.addComponent(\n  AABBComponent,\n  new AABB(new Vector2(200, 200), new Vector2(20, 30)),\n);\nplayer.addComponent(AABBRenderer, {\n  fill: 'lime',\n  stroke: 'black',\n  strokeWidth: 1,\n});\nplayer.addComponent(\n  PlayerController,\n  0.4,\n  new ButtonMapping({\n    left: [KeyCode.A, KeyCode.LEFT_ARROW],\n    right: [KeyCode.D, KeyCode.RIGHT_ARROW],\n    jump: [KeyCode.W, KeyCode.UP_ARROW, KeyCode.SPACE],\n    down: [KeyCode.S],\n  }),\n);\nscene.addChild(player);\n\nscene.appendTo(document.getElementById('root')!);\nscene.start();\n\nconsole.log(scene);\n","import { assert } from '../assert';\nimport SceneObject from './SceneObject';\nimport SceneSystem from './SceneSystem';\n\nconst speed = 1;\nconst scale = 1;\nconst repeatUpdate = 1;\n\ntype SystemClass<T extends SceneSystem = SceneSystem> = {\n  systemName: string;\n  new (): T;\n};\n\nexport default class Scene {\n  canvas: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n  private _scaleFactor: number;\n  private _children: SceneObject[] = [];\n  private _isPlaying: boolean = false;\n  private frameHandle: number | null = null;\n  private lastElapsedTime: number | null = null;\n  private systemsByClass = new Map<SystemClass<SceneSystem>, SceneSystem>();\n\n  constructor(width: number, height: number, scaleFactor: number = 1) {\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = width * scaleFactor;\n    this.canvas.height = height * scaleFactor;\n    this.canvas.style.width = `${width}px`;\n    this.canvas.style.height = `${height}px`;\n    const ctx = this.canvas.getContext('2d');\n    assert(ctx, 'ctx');\n    this.ctx = ctx;\n    this._scaleFactor = scaleFactor * scale;\n\n    this._setupVisiblityChange();\n  }\n\n  get width(): number {\n    return this.canvas.width / this._scaleFactor;\n  }\n\n  get height(): number {\n    return this.canvas.height / this._scaleFactor;\n  }\n\n  get scaleFactor(): number {\n    return this._scaleFactor;\n  }\n\n  get isPlaying(): boolean {\n    return this.frameHandle !== null && this._isPlaying;\n  }\n\n  set isPlaying(newValue: boolean) {\n    assert(\n      this.frameHandle !== null,\n      'cannot set isPlaying without calling start',\n    );\n    this._isPlaying = newValue;\n  }\n\n  get children(): SceneObject[] {\n    return this._children;\n  }\n\n  appendTo(element: HTMLElement) {\n    element.appendChild(this.canvas);\n  }\n\n  hasSystem(systemType: SystemClass): boolean {\n    return this.systemsByClass.has(systemType);\n  }\n\n  getSystem<T extends SceneSystem>(systemType: SystemClass<T>): T {\n    const system = this.systemsByClass.get(systemType);\n    assert(system, `system, ${systemType.systemName} not found`);\n    assert(system instanceof systemType, 'system is wrong instance type');\n    return system;\n  }\n\n  addSystem(system: SceneSystem) {\n    assert(\n      !this.hasSystem(system.constructor as any),\n      'only one system of each type allowed',\n    );\n    this.systemsByClass.set(system.constructor as any, system);\n    system.afterAddToScene(this);\n  }\n\n  removeSystem(systemType: SystemClass) {\n    const system = this.getSystem(systemType);\n    system.beforeRemoveFromScene(this);\n    this.systemsByClass.delete(systemType);\n  }\n\n  addChild(child: SceneObject) {\n    this._children.push(child);\n    child.onAddedToScene(this);\n  }\n\n  addChildBefore(targetChild: SceneObject, newChild: SceneObject) {\n    const index = this._children.indexOf(targetChild);\n    assert(index !== -1, 'target child must be present');\n\n    this.addChildAtIndex(index, newChild);\n  }\n\n  addChildAfter(targetChild: SceneObject, newChild: SceneObject) {\n    const index = this._children.indexOf(targetChild);\n    assert(index !== -1, 'target child must be present');\n\n    this.addChildAtIndex(index + 1, newChild);\n  }\n\n  addChildAtIndex(index: number, child: SceneObject) {\n    this._children.splice(index, 0, child);\n    child.onAddedToScene(this);\n  }\n\n  removeChild(child: SceneObject): boolean {\n    const index = this._children.indexOf(child);\n    if (index === -1) return false;\n\n    this.removeChildAtIndex(index);\n    return true;\n  }\n\n  removeChildAtIndex(index: number): SceneObject {\n    const child = this._children[index];\n    this._children.splice(index, 1);\n    child.onRemovedFromScene();\n    return child;\n  }\n\n  update(delta: number) {\n    for (let i = 0; i < repeatUpdate; i++) {\n      for (const system of this.systemsByClass.values()) {\n        system.beforeUpdate(delta);\n      }\n      this._children.forEach((child) => child.update(delta));\n      for (const system of this.systemsByClass.values()) {\n        system.afterUpdate(delta);\n      }\n    }\n  }\n\n  draw(elapsedTime: number) {\n    this.ctx.save();\n    this.ctx.scale(this._scaleFactor, this._scaleFactor);\n    this.ctx.clearRect(0, 0, this.width, this.height);\n\n    for (const system of this.systemsByClass.values()) {\n      system.beforeDraw(this.ctx, elapsedTime);\n    }\n    this._children\n      .sort((a, b) => a.getSortOrder() - b.getSortOrder())\n      .forEach((child) => child.draw(this.ctx, elapsedTime));\n    for (const system of this.systemsByClass.values()) {\n      system.afterDraw(this.ctx, elapsedTime);\n    }\n\n    this.ctx.restore();\n  }\n\n  start() {\n    this._isPlaying = true;\n    this.frameHandle = window.requestAnimationFrame(this._tick);\n  }\n\n  stop() {\n    if (this.frameHandle !== null) {\n      window.cancelAnimationFrame(this.frameHandle);\n      this.frameHandle = null;\n    }\n    this._isPlaying = false;\n    this.lastElapsedTime = null;\n  }\n\n  _tick = (elapsedTime: number) => {\n    elapsedTime = elapsedTime * speed;\n    const lastElapsedTime = this.lastElapsedTime;\n    if (lastElapsedTime !== null) {\n      const deltaTime = elapsedTime - lastElapsedTime;\n      if (this.isPlaying) {\n        this.update(deltaTime);\n        this.draw(elapsedTime);\n      }\n    }\n\n    this.lastElapsedTime = elapsedTime;\n    this.frameHandle = window.requestAnimationFrame(this._tick);\n  };\n\n  _setupVisiblityChange() {\n    let playOnVisible = false;\n    document.addEventListener('visibilitychange', () => {\n      if (document.hidden && this.isPlaying) {\n        playOnVisible = true;\n        this.stop();\n      }\n      if (playOnVisible && !document.hidden) {\n        playOnVisible = false;\n        this.start();\n      }\n    });\n  }\n}\n","import SceneObject from './SceneObject';\nimport Component from './Component';\nimport { assert } from '../assert';\nimport SortOrderProvider from './SortOrderProvider';\nimport Scene from './Scene';\n\ntype ComponentClass<T extends Component, Args extends unknown[]> = {\n  name: string;\n  new (entity: Entity, ...args: Args): T;\n};\n\nexport default class Entity extends SceneObject {\n  private componentInstances = new Map<\n    ComponentClass<Component, any>,\n    Component\n  >();\n\n  addComponent<T extends Component, Args extends unknown[]>(\n    component: ComponentClass<T, Args>,\n    ...args: Args\n  ): T {\n    assert(\n      !this.componentInstances.has(component),\n      `component instance ${component.name} already exists`,\n    );\n    const instance = new component(this, ...args);\n    this.componentInstances.set(component, instance);\n    return instance;\n  }\n\n  hasComponent<T extends Component>(\n    component: ComponentClass<T, any[]>,\n  ): boolean {\n    return this.componentInstances.has(component);\n  }\n\n  getComponent<T extends Component>(component: ComponentClass<T, any[]>): T {\n    const instance = this.componentInstances.get(component);\n    assert(instance, `no instance for ${component.name} exists`);\n    assert(instance instanceof component, 'wrong instance type');\n    return instance;\n  }\n\n  removeComponent<T extends Component>(component: ComponentClass<T, any[]>): T {\n    const instance = this.getComponent(component);\n    this.componentInstances.delete(component);\n    instance.onRemove();\n    return instance;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, elapsedTime: number): void {\n    for (const component of this.componentInstances.values()) {\n      component.beforeDraw(ctx, elapsedTime);\n    }\n    for (const component of this.componentInstances.values()) {\n      component.draw(ctx, elapsedTime);\n    }\n    for (const component of this.componentInstances.values()) {\n      component.afterDraw(ctx, elapsedTime);\n    }\n  }\n  update(delta: number): void {\n    for (const component of this.componentInstances.values()) {\n      component.beforeUpdate(delta);\n    }\n    for (const component of this.componentInstances.values()) {\n      component.update(delta);\n    }\n    for (const component of this.componentInstances.values()) {\n      component.afterUpdate(delta);\n    }\n  }\n\n  onAddedToScene(scene: Scene) {\n    super.onAddedToScene(scene);\n    for (const component of this.componentInstances.values()) {\n      component.onAddedToScene(scene);\n    }\n  }\n\n  onRemovedFromScene() {\n    const scene = this.getScene();\n    super.onRemovedFromScene();\n    for (const component of this.componentInstances.values()) {\n      component.onRemovedFromScene(scene);\n    }\n  }\n\n  getSortOrder() {\n    if (this.hasComponent(SortOrderProvider)) {\n      return this.getComponent(SortOrderProvider).getSortOrder();\n    } else {\n      return super.getSortOrder();\n    }\n  }\n}\n","import { Key } from 'readline';\nimport { AnimationActionLoopStyles } from 'three';\nimport { assert } from './assert';\nimport EventEmitter, { Unsubscribe } from './EventEmitter';\nimport { KeyCode } from './KeyCode';\nimport { entries } from './utils';\n\ntype ActionInfo = {\n  downEvent: EventEmitter<void>;\n  upEvent: EventEmitter<void>;\n  isDown: boolean;\n};\n\nexport class ButtonMapping<Actions extends string> {\n  private readonly keyCodeToAction: ReadonlyMap<KeyCode, Actions>;\n  private readonly actionInfo: ReadonlyMap<Actions, ActionInfo>;\n\n  constructor(actionMappings: Record<Actions, Array<KeyCode>>) {\n    const keyCodeToAction = new Map<KeyCode, Actions>();\n    const actionInfo = new Map<Actions, ActionInfo>();\n\n    for (const [action, keyCodes] of entries(actionMappings)) {\n      for (const keyCode of keyCodes) {\n        keyCodeToAction.set(keyCode, action);\n      }\n      actionInfo.set(action, {\n        downEvent: new EventEmitter(),\n        upEvent: new EventEmitter(),\n        isDown: false,\n      });\n    }\n\n    this.keyCodeToAction = keyCodeToAction;\n    this.actionInfo = actionInfo;\n\n    document.addEventListener('keydown', (event) => {\n      const actionInfo = this.getActionInfoForKeyCodeIfExists(event.keyCode);\n      if (!actionInfo) {\n        return;\n      }\n\n      actionInfo.isDown = true;\n      actionInfo.downEvent.emit();\n    });\n    document.addEventListener('keyup', (event) => {\n      const actionInfo = this.getActionInfoForKeyCodeIfExists(event.keyCode);\n      if (!actionInfo) {\n        return;\n      }\n\n      actionInfo.isDown = false;\n      actionInfo.upEvent.emit();\n    });\n  }\n\n  isDown(action: Actions): boolean {\n    return this.getActionInfo(action).isDown;\n  }\n\n  onDown(action: Actions, cb: () => void): Unsubscribe {\n    return this.getActionInfo(action).downEvent.listen(cb);\n  }\n\n  onUp(action: Actions, cb: () => void): Unsubscribe {\n    return this.getActionInfo(action).upEvent.listen(cb);\n  }\n\n  private getActionInfoForKeyCodeIfExists(keyCode: number): ActionInfo | null {\n    const action = this.keyCodeToAction.get(keyCode);\n    if (!action) {\n      return null;\n    }\n    return this.getActionInfo(action);\n  }\n\n  private getActionInfo(action: Actions): ActionInfo {\n    const actionInfo = this.actionInfo.get(action);\n    assert(actionInfo);\n    return actionInfo;\n  }\n}\n"],"names":["$90518cd969dab22c$export$a7a9523472993e97","value","message","Error","$90518cd969dab22c$export$2b62a06a9fee979c","$15a201ffde8bbde4$export$3a89f8d6f6bf6c9f","a","b","n","$15a201ffde8bbde4$export$3e9f948b41964866","object","Object","entries","$db8edb9c8035529a$export$2e2bcd8739ae039","angle","radius","Math","cos","sin","points","reduce","memo","p","add","ZERO","div","length","x","y","toString","this","magnitudeSquared","magnitude","sqrt","atan2","isInPolygon","polygon","isInside","currentIdx","previousIdx","currentX","currentY","previousX","previousY","equals","other","distanceTo","x1","y1","dx","dy","angleTo","other1","sub","angleBetween","other2","min","max","size","$15a201ffde8bbde4$export$9013bf5175691fac","PI","dot","other3","scale","scale1","negate","x2","y2","x3","y3","floor","ceil","round","withMagnitude","newMagnitude","fromPolar","normalize","withAngle","newAngle","rotate","byAngle","lerp","other4","x4","y4","$870293e39def1396$var$LABEL_OFFSET","$870293e39def1396$var$DEBUG_ARROW_ANGLE","$870293e39def1396$export$8c1f62922c980a1a","clear","fill","applyFillOptions","ctx","fillRect","canvas","width","height","clearRect","beginPath","moveTo","lineTo","arc","startAngle","endAngle","anticlockwise","arcTo","p1","p2","radius1","applyStrokeOptions","strokeWidth","stroke","strokeCap","strokeDash","strokeDashOffset","strokeJoin","lineWidth","strokeStyle","lineCap","setLineDash","lineDashOffset","lineJoin","options","fill1","fillStyle","options1","applyStrokeAndFillOptions","options2","strokeAndFill","options3","getDebugStrokeOptions","color","debugStroke","color1","fillText","text","position","options4","circle","center","radius2","options5","ellipse","center1","radiusX","radiusY","options6","debugLabel","label","position1","color2","debugPointX","position2","color3","label1","debugPointO","position3","color4","label2","debugArrow","start","end","color5","label3","average","vector","arrowLeftPoint","arrowRightPoint","debugVectorAtPoint","base","options7","options8","point","polyLine","options9","i","debugPolygon","polygon1","color6","label4","debugPolyLine","color7","label5","aabb","opts","debug","origin","rect","left","top","$615946a1704d0ee5$export$2e2bcd8739ae039","right","bottom","contains","intersects","getCenter","freeze","KeyCode","$8b0aac90ff63108e$export$e9e0d96f49f57c33","$faf860a16eac1785$export$2e2bcd8739ae039","onRemove","onAddedToScene","scene","onRemovedFromScene","scene1","beforeUpdate","delta","update","delta1","afterUpdate","delta2","beforeDraw","time","draw","ctx1","time1","afterDraw","ctx2","time2","getScene","entity","$0590d9fc1b9817be$var$constructorIdCounts","$28c70117a47ab52b$export$2e2bcd8739ae039","getSortOrder","getSortOrderFn","super","$da8e7203d6eea939$export$2e2bcd8739ae039","afterAddToScene","beforeRemoveFromScene","constructor","systemName","$00f20f1a6c98e337$var$DebugDrawSystem","debugDraw","$00f20f1a6c98e337$var$AABBComponent","setOrigin","save","translate","restore","$00f20f1a6c98e337$var$scene","_scaleFactor","scaleFactor","isPlaying","frameHandle","_isPlaying","newValue","children","_children","appendTo","element","appendChild","hasSystem","systemType","systemsByClass","has","getSystem","systemType1","system","get","addSystem","set","removeSystem","systemType2","delete","addChild","child3","push","addChildBefore","targetChild","newChild","index","indexOf","addChildAtIndex","addChildAfter","targetChild1","newChild1","child1","splice","removeChild","child2","removeChildAtIndex","index1","child","values","forEach","system1","elapsedTime1","sort","system2","window","requestAnimationFrame","_tick","stop","cancelAnimationFrame","lastElapsedTime","_setupVisiblityChange","playOnVisible","document","addEventListener","hidden","Map","elapsedTime","deltaTime","createElement","style","getContext","devicePixelRatio","$00f20f1a6c98e337$var$player","hasScene","addTo","name","id","addComponent","component","args","componentInstances","instance","hasComponent","component1","getComponent","component2","removeComponent","component3","component4","component5","component6","component7","getAABB","entity1","aabbComponent","controls","isDown","moveSpeed","entity2","action","getActionInfo","onDown","action1","cb","downEvent","listen","onUp","action2","cb1","upEvent","getActionInfoForKeyCodeIfExists","keyCode","keyCodeToAction","action3","actionInfo","actionMappings","actionInfo1","keyCodes","$23QbL","default","event","emit","A","LEFT_ARROW","D","RIGHT_ARROW","jump","W","UP_ARROW","SPACE","down","S","getElementById","console","log"],"version":3,"file":"index.5f0159aa.js.map"}