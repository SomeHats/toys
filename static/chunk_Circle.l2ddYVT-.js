import{A as m}from"./chunk_AABB.JpHgKg04.js";import{L as u}from"./chunk_Line2.A9Q_MvOg.js";import{V as s}from"./chunk_Vector2.Rt8uspPZ.js";class a{constructor(t,e){this.center=t,this.radius=e}static create(t,e,n){return new a(new s(t,e),n)}get circumference(){return 2*Math.PI*this.radius}getBoundingBox(){return new m(new s(this.center.x,this.center.y),new s(this.radius*2,this.radius*2))}pointOnCircumference(t){return new s(this.center.x+Math.cos(t)*this.radius,this.center.y+Math.sin(t)*this.radius)}containsPoint(t){return t.distanceTo(this.center)<this.radius}containsCircle(t){return this.center.distanceTo(t.center)+t.radius<=this.radius}intersectsCircle(t){return this.center.distanceTo(t.center)<this.radius+t.radius}intersectWithCircle(t){const e=this.center.distanceTo(t.center);if(e+t.radius<=this.radius||e+this.radius<=t.radius)return;const n=(this.radius**2-t.radius**2+e**2)/(2*e),i=Math.sqrt(this.radius**2-n**2),r=this.center.x+n*(t.center.x-this.center.x)/e,c=this.center.y+n*(t.center.y-this.center.y)/e,d=r+i*(t.center.y-this.center.y)/e,h=c-i*(t.center.x-this.center.x)/e,o=r-i*(t.center.y-this.center.y)/e,x=c+i*(t.center.x-this.center.x)/e;return i===0?[new s(r,c)]:[new s(d,h),new s(o,x)]}withRadius(t){return a.create(this.center.x,this.center.y,t)}outerTangentsWith(t){const e=this.center.distanceTo(t.center);if(e<=Math.abs(this.radius-t.radius))return;const n=this.center.angleTo(t.center),i=Math.acos((this.radius-t.radius)/e);return[new u(this.pointOnCircumference(n-i),t.pointOnCircumference(n-i)),new u(this.pointOnCircumference(n+i),t.pointOnCircumference(n+i))]}}export{a as C};
