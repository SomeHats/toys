import{V}from"./chunk_Vector2.6fc60e01.js";import{O as p,B as v,P as G}from"./chunk_assert.ed7d9aac.js";function j(c,b,q){var d,u,m,x,w,y,P,B,I,M,O,R;const g=c*Math.sqrt(3)/2,e=[],s=[];for(let t=0;t*g<q+g;t++){const n=[];e.push(n);const r=[];s.push(r);for(let o=0;o*c<b+c;o++){const l=t%2===0?-c/2:0,i=new V(o*c+l,t*g);if(n.push(i),t!==0&&o!==0){if(t%2===0){const a={id:p("triangle"),points:[i,e[t][o-1],e[t-1][o-1]]},f={id:p("triangle"),points:[i,e[t-1][o-1],e[t-1][o]]};r.push(a,f)}else if(e[t-1][o+1]){const a={id:p("triangle"),points:[i,e[t][o-1],e[t-1][o]]},f={id:p("triangle"),points:[i,e[t-1][o+1],e[t-1][o]]};r.push(a,f)}}}}const h=new Map;for(let t=0;t<s.length;t++)for(let n=0;n<s[t].length;n++){const r=s[t][n],o=V.average(r.points),l=v(n%2===0?t%2===0?[(d=s[t])==null?void 0:d[n-1],(u=s[t])==null?void 0:u[n+1],(m=s[t+1])==null?void 0:m[n-1]]:[(x=s[t])==null?void 0:x[n-1],(w=s[t])==null?void 0:w[n+1],(y=s[t+1])==null?void 0:y[n+1]]:t%2===0?[(P=s[t])==null?void 0:P[n-1],(B=s[t])==null?void 0:B[n+1],(I=s[t-1])==null?void 0:I[n-1]]:[(M=s[t])==null?void 0:M[n-1],(O=s[t])==null?void 0:O[n+1],(R=s[t-1])==null?void 0:R[n+1]]),i=r;i.center=o,i.neighbours=l.map(a=>({triangle:a,sharedPoints:G(r.points,a.points)})),i.ix=n,i.iy=t,h.set(i.id,i)}return h}export{j as c};
