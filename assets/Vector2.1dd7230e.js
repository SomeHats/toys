import{n as x,l as c}from"./utils.7cc05280.js";const r=class{constructor(t,e){this.x=t,this.y=e}static fromPolar(t,e){return new r(e*Math.cos(t),e*Math.sin(t))}static average(t){return t.reduce((n,s)=>n.add(s),r.ZERO).div(t.length)}static fromVectorLike({x:t,y:e}){return new r(t,e)}toString(){return`Vector2(${this.x}, ${this.y})`}get magnitudeSquared(){return this.x*this.x+this.y*this.y}get magnitude(){return Math.sqrt(this.magnitudeSquared)}get angle(){return Math.atan2(this.y,this.x)}isInPolygon(t){const{x:e,y:n}=this;let s=!1;for(let i=0,a=t.length-1;i<t.length;a=i++){const{x:u,y:h}=t[i],{x:l,y:o}=t[a];h>n!=o>n&&e<(l-u)*(n-h)/(o-h)+u&&(s=!s)}return s}equals(t){return this===t||this.x===t.x&&this.y===t.y}distanceTo({x:t,y:e}){const n=t-this.x,s=e-this.y;return Math.sqrt(n*n+s*s)}angleTo(t){return t.sub(this).angle}angleBetween(t){return x(Math.atan2(t.y,t.x)-Math.atan2(this.y,this.x))}dot(t){return this.x*t.x+this.y*t.y}div(t){return new r(this.x/t,this.y/t)}scale(t){return new r(this.x*t,this.y*t)}negate(){return this.scale(-1)}add({x:t,y:e}){return new r(this.x+t,this.y+e)}sub({x:t,y:e}){return new r(this.x-t,this.y-e)}floor(){return new r(Math.floor(this.x),Math.floor(this.y))}ceil(){return new r(Math.ceil(this.x),Math.ceil(this.y))}round(){return new r(Math.round(this.x),Math.round(this.y))}withMagnitude(t){return r.fromPolar(this.angle,t)}normalize(){return this.withMagnitude(1)}withAngle(t){return r.fromPolar(t,this.magnitude)}rotate(t){return this.withAngle(this.angle+t)}lerp(t,e){return new r(c(this.x,t.x,e),c(this.y,t.y,e))}};let d=r;d.ZERO=new r(0,0);export{d as V};
