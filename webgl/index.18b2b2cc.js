function t(t){return t&&t.__esModule?t.default:t}function e(t,e){t||function(t){throw new Error(t)}(e||"Assertion Error")}function r(t,e,r){return(e-t)*r+t}function n(t,e){return"number"==typeof e?r(t,e,Math.random()):r(0,t,Math.random())}class o{static fromPolar(t,e){return new o(e*Math.cos(t),e*Math.sin(t))}static average(t){return t.reduce(((t,e)=>t.add(e)),o.ZERO).div(t.length)}static fromVectorLike({x:t,y:e}){return new o(t,e)}toString(){return`Vector2(${this.x}, ${this.y})`}get magnitudeSquared(){return this.x*this.x+this.y*this.y}get magnitude(){return Math.sqrt(this.magnitudeSquared)}get angle(){return Math.atan2(this.y,this.x)}isInPolygon(t){const{x:e,y:r}=this;let n=!1;for(let o=0,i=t.length-1;o<t.length;i=o++){const{x:a,y:s}=t[o],{x:h,y:c}=t[i];s>r!=c>r&&e<(h-a)*(r-s)/(c-s)+a&&(n=!n)}return n}equals(t){return this===t||this.x===t.x&&this.y===t.y}distanceTo({x:t,y:e}){const r=t-this.x,n=e-this.y;return Math.sqrt(r*r+n*n)}angleTo(t){return t.sub(this).angle}angleBetween(t){return e=Math.atan2(t.y,t.x)-Math.atan2(this.y,this.x),function(t,e,r){const n=e-t;for(r-=t;r<0;)r+=n;return t+r%n}(-Math.PI,Math.PI,e);var e}dot(t){return this.x*t.x+this.y*t.y}div(t){return new o(this.x/t,this.y/t)}scale(t){return new o(this.x*t,this.y*t)}negate(){return this.scale(-1)}add({x:t,y:e}){return new o(this.x+t,this.y+e)}sub({x:t,y:e}){return new o(this.x-t,this.y-e)}floor(){return new o(Math.floor(this.x),Math.floor(this.y))}ceil(){return new o(Math.ceil(this.x),Math.ceil(this.y))}round(){return new o(Math.round(this.x),Math.round(this.y))}withMagnitude(t){return o.fromPolar(this.angle,t)}normalize(){return this.withMagnitude(1)}withAngle(t){return o.fromPolar(t,this.magnitude)}rotate(t){return this.withAngle(this.angle+t)}lerp(t,e){return new o(r(this.x,t.x,e),r(this.y,t.y,e))}constructor(t,e){this.x=t,this.y=e}}o.ZERO=new o(0,0);class i{static fromLeftTopRightBottom(t,e,r,n){return new i(new o(t,e),new o(r-t,n-e))}contains({x:t,y:e}){return this.left<=t&&t<=this.right&&this.top<=e&&e<=this.bottom}intersects(t){return!(this.right<t.left||this.left>t.right||this.bottom<t.top||this.top>t.bottom)}getCenter(){return this.origin.add(this.size.scale(.5))}get left(){return this.origin.x}get right(){return this.origin.x+this.size.x}get top(){return this.origin.y}get bottom(){return this.origin.y+this.size.y}get width(){return this.size.x}get height(){return this.size.y}constructor(t,e){this.origin=t,this.size=e,Object.freeze(this)}}const a=document.createElement("canvas");a.width=document.body.clientWidth*window.devicePixelRatio,a.height=document.body.clientHeight*window.devicePixelRatio,a.style.width=`${document.body.clientWidth}px`,a.style.height=`${document.body.clientHeight}px`,document.body.appendChild(a);const s=a.getContext("webgl");var h,c;function u(t,r,n){const o=t.createShader(r);e(o),t.shaderSource(o,n),t.compileShader(o);if(!t.getShaderParameter(o,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(o)),t.deleteShader(o),new Error("compile error");return o}e(s),(c=h||(h={}))[c.Fragment=WebGLRenderingContext.FRAGMENT_SHADER]="Fragment",c[c.Vertex=WebGLRenderingContext.VERTEX_SHADER]="Vertex";const l=u(s,h.Vertex,t("#define GLSLIFY 1\n// an attribute will receive data from a buffer\nattribute vec2 a_position;\nattribute vec4 a_color;\n\nvarying vec4 v_color;\n\nuniform vec2 u_resolution;\n\n// all shaders have a main function\nvoid main() {\n  // convert the position from pixels to 0.0 to 1.0\n  vec2 zeroToOne = a_position / u_resolution;\n \n  // convert from 0->1 to 0->2\n  vec2 zeroToTwo = zeroToOne * 2.0;\n \n  // convert from 0->2 to -1->+1 (clip space)\n  vec2 clipSpace = zeroToTwo - 1.0;\n \n  gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);\n\n  // Convert from clip space to color space.\n  // Clip space goes -1.0 to +1.0\n  // Color space goes from 0.0 to 1.0\n  v_color = a_color;\n}")),g=u(s,h.Fragment,t("precision mediump float;\n#define GLSLIFY 1\n \nuniform vec4 u_color;\nvarying vec4 v_color;\n\nvoid main() {\n  gl_FragColor = v_color;\n}")),d=function(t,r,n){const o=t.createProgram();if(e(o),t.attachShader(o,r),t.attachShader(o,n),t.linkProgram(o),!t.getProgramParameter(o,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(o)),t.deleteProgram(o),"link error";return o}(s,l,g),f=s.getAttribLocation(d,"a_position"),m=(s.getAttribLocation(d,"a_color"),s.getUniformLocation(d,"u_resolution")),y=s.createBuffer();e(y);s.bindBuffer(s.ARRAY_BUFFER,y),s.bufferData(s.ARRAY_BUFFER,new Float32Array([10,20,80,20,10,30,10,30,80,20,80,30]),s.STATIC_DRAW),s.viewport(0,0,a.width,a.height),s.clearColor(0,0,0,0),s.clear(s.COLOR_BUFFER_BIT),s.useProgram(d),s.uniform2f(m,s.canvas.width,s.canvas.height),s.enableVertexAttribArray(f),s.bindBuffer(s.ARRAY_BUFFER,y),s.vertexAttribPointer(f,2,s.FLOAT,!1,0,0);const x=new Float32Array(1200);!function(t,e){const r=[];for(let n=0;n<t;n++)r.push(e(n))}(100,(t=>{!function(t,e,r){x.set([r.left,r.top,r.right,r.top,r.left,r.bottom,r.left,r.bottom,r.right,r.top,r.right,r.bottom],12*e)}(0,t,new i(new o(n(s.canvas.width),n(s.canvas.height)),new o(n(200),n(200))))})),s.bufferData(s.ARRAY_BUFFER,x,s.STATIC_DRAW),s.drawArrays(s.TRIANGLES,0,600);
//# sourceMappingURL=index.18b2b2cc.js.map
